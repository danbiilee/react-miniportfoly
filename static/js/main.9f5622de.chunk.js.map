{"version":3,"sources":["components/Menu/MainMenu.js","components/Layout/Layout.js","components/Layout/Sidebar.js","components/Layout/Content.js","components/Layout/Card.js","pages/Home.js","module/formMode.js","components/Menu/SubMenu.js","components/Layout/Post.js","components/Modal/Modal.js","api/boards.js","pages/Diary/FormWrapper.js","lib/asyncUtils.js","api/sessions.js","module/boards.js","pages/Diary/index.js","module/palette.js","pages/Workbox/ChangeTheme.js","module/tasklists.js","pages/Workbox/Tasklist/components/MberList.js","pages/Workbox/Tasklist/components/TagList.js","pages/Workbox/Tasklist/components/Calendar.js","utils/utils.js","pages/Workbox/Tasklist/Header.js","pages/Workbox/Tasklist/Bottom.js","pages/Workbox/Tasklist/components/Tag.js","pages/Workbox/Tasklist/components/Point.js","pages/Workbox/Tasklist/components/Checklist.js","pages/Workbox/Tasklist/components/Deadline.js","pages/Workbox/Tasklist/Task.js","pages/Workbox/Tasklist/components/PointList.js","pages/Workbox/Tasklist/SidePopup.js","pages/Workbox/Tasklist/index.js","pages/Workbox/Tasklist/AddTaskList.js","pages/Workbox/Tasklist.js","pages/Workbox/index.js","App.js","reportWebVitals.js","module/index.js","index.js"],"names":["Nav","styled","nav","props","theme","layout","mainColor","MainMenu","exact","to","activeClassName","Wrapper","div","BorderWrapper","layoutBg1","layoutBorder1","BgWrapper","layoutBg2","layoutBorder2","Layout","children","SidebarBlock","Sidebar","ContentBlock","headerColor","Content","CardBlock","cardBorder","cardBg","Card","FlexWrapper","ContentSection","section","ProfileSection","LinkTitle","p","Home","src","process","alt","onClick","window","location","href","className","SET_FORM_MODE","setFormMode","payload","type","ListDiv","textColor","SubMenu","title","list","match","useRouteMatch","dispatch","useDispatch","isForm","useSelector","state","formMode","handleMode","url","map","item","child","id","Article","article","fullHeight","Post","fixed","Background","isOpen","ModalWrapper","width","height","bg","Modal","getBoards","a","axios","get","response","data","addBoard","board","post","Form","form","FormWrapper","button","regusr","passwd","initialState","bbs_ctgry1","bbs_ctgry2","content","useState","setBoard","onChange","e","target","name","value","onSubmit","preventDefault","confirm","apiBoards","then","success","alert","catch","err","getPasswd","stateUtils","prevData","loading","error","handleAsyncActions","key","keepData","SUCCESS","ERROR","action","GET_BOARDS_ALL","GET_BOARDS_ALL_SUCCESS","GET_BOARDS_ALL_ERROR","boards","initialData","console","log","PostWrapper","Button","ButtonWrapper","Diary","setPasswd","setRegusr","handleRegInfo","setIsOpen","handleModal","placeholder","apiSessions","path","SET_COLOR","component","priority","important","notice","ThemeWrapper","TabList","ul","Tab","li","left","css","color","ChangeWrapper","ColorWrapper","Swatch","PaletteWrapper","ColorList","Color","ChangeTheme","palette","tabList","index","push","setTarget","hexColor","setHexColor","getRandomHexColor","hex","i","Math","floor","random","tab","handleLayoutColor","tasklistId","taskId","checklistId","ADD_TASKLIST","DEL_TASKLIST","CHANGE_TASKLIST_TITLE","SET_TASK","CLEAR_TASK","ADD_TASK","DEL_TASK","TOGGLE_TASK","CHANGE_TASK_TITLE","CHANGE_TASK_SETTINGS","ADD_CHECKLIST","setTask","changeTaskSettings","tasklists","task","ListWrapper","activeMber","MberList","onToggle","selectedMberList","handleMberList","mberList","mberNo","mberId","mberNm","profile","MdFace","MdSentimentNeutral","tempMberList","length","mber","find","m","isSelected","role","fm","React","createElement","activeTag","TagWrapper","tag","Tag","TagList","handleTag","tempTagList","tagNo","tagNm","t","PickerWrapper","Calendar","activeDate","startDt","endDt","setStartDate","setEndDate","selected","date","isClearable","placeholderText","dateFormat","today","Date","toISOString","substring","getFormatDate","yyyy","getFullYear","mm","getMonth","dd","getDate","strToDate","str","yy","TitleWrapper","header","Input","input","TitleBtnWrapper","DoingWrapper","CreateTask","activeCreate","CrBtnWrapper","ButtonCancel","ButtonCreate","BadgeWrapper","Title","tasklist","onDelete","useRef","useEffect","current","focus","setTitle","ref","changeTasklistTitle","Doing","tasks","undoneCnt","reduce","acc","cur","isDone","Header","textarea","setActiveCreate","setActiveMber","setActiveTag","setActiveDate","setMberList","setTag","resetState","findMber","filter","concat","point","checklist","finDt","Bottom","cnt","PointWrapper","Point","spanList","renderSpan","List","isSetting","Chkbox","outer","Chktxt","Checklist","handleCheckList","newTitleInput","newTitle","setNewTitle","assignedMber","DeadlineWrapper","isOver","isFin","handleDeadline","start","end","fin","diff","Deadline","TaskWrapper","openDone","EtcWrapper","MberWrapper","Task","handlePopup","checklistDoneCnt","toggleTask","activePoint","PointList","handlePoint","options","renderList","j","renderPoints","option","CloseBtn","TitleInput","Setting","openPopup","setOpenPopup","openModal","setOpenModal","delTask","changeTaskTitle","Dates","startDate","endDate","startStr","endStr","Mbers","Tags","Points","setPoint","SidePopup","interval","wrapper","innerWidth","setPosition","style","setInterval","clearInterval","setaActivePoint","handleActiveStates","TaskList","Tasklist","undoneList","doneList","setOpenDone","ViewWrapper","HeaderBtnWrapper","isActive","setIsActive","onCreate","useCallback","AddTaskList","TasklistWrapper","IndexWrapper","Workbox","Photo","Gbook","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","reducer","store","createStore","composeWithDevTools","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.9f5622de.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Nav = styled.nav`\r\n  margin: 40px 0 0 -10px;\r\n  ul {\r\n    a {\r\n      display: inline-block;\r\n      width: 85px;\r\n      margin-bottom: 2px;\r\n      padding: 10px 10px 10px 15px;\r\n      background: ${props => props.theme.layout.mainColor};\r\n      border: 1px solid #a5a5a5;\r\n      border-radius: 10px;\r\n      color: #fff;\r\n      font-size: 0.9rem;\r\n      text-align: center;\r\n      &.selected {\r\n        background: #fff;\r\n        color: #333;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction MainMenu() {\r\n  return (\r\n    <Nav>\r\n      <ul>\r\n        <li>\r\n          <NavLink exact to=\"/\" activeClassName=\"selected\">\r\n            홈\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/diary\" activeClassName=\"selected\">\r\n            다이어리\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/workbox\" activeClassName=\"selected\">\r\n            워크박스\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/photo\" activeClassName=\"selected\">\r\n            사진첩\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/gbook\" activeClassName=\"selected\">\r\n            방명록\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default MainMenu;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 0 20px;\r\n`;\r\n\r\nconst BorderWrapper = styled.div`\r\n  height: 95vh;\r\n  padding: 25px;\r\n  background: ${props => props.theme.layout.layoutBg1};\r\n  border: 1px solid ${props => props.theme.layout.layoutBorder1};\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst BgWrapper = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  padding: 20px 8px;\r\n  background: ${props => props.theme.layout.layoutBg2};\r\n  border: 2px dashed ${props => props.theme.layout.layoutBorder2};\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <Wrapper>\r\n      <BorderWrapper>\r\n        <BgWrapper>{children}</BgWrapper>\r\n      </BorderWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SidebarBlock = styled.div`\r\n  width: 25%;\r\n  margin-right: 8px;\r\n  & > ul {\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 0.8rem;\r\n    line-height: 1.4;\r\n    li:first-of-type {\r\n      padding-right: 10px;\r\n      margin-right: 10px;\r\n      border-right: 1px solid;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Sidebar = ({ children }) => {\r\n  return (\r\n    <SidebarBlock>\r\n      <ul>\r\n        <li>TODAY 0</li>\r\n        <li>TOTAL 0</li>\r\n      </ul>\r\n      {children}\r\n    </SidebarBlock>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ContentBlock = styled.div`\r\n  z-index: 10;\r\n  width: 68%;\r\n  h1 {\r\n    color: ${props => props.theme.layout.headerColor};\r\n    font-weight: bold;\r\n    font-size: 1.1rem;\r\n  }\r\n`;\r\n\r\nconst Content = ({ children }) => {\r\n  return (\r\n    <ContentBlock>\r\n      <h1>귀엽고 깜찍한 미니포트폴리</h1>\r\n      {children}\r\n    </ContentBlock>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CardBlock = styled.div`\r\n  overflow-y: auto;\r\n  width: 100%;\r\n  height: 96%;\r\n  margin: 10px 0 5px;\r\n  padding: 20px;\r\n  border: 1px solid ${props => props.theme.layout.cardBorder};\r\n  border-radius: 10px;\r\n  background: ${props => props.theme.layout.cardBg};\r\n  section {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst Card = ({ children }) => {\r\n  return <CardBlock>{children}</CardBlock>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Layout from '../components/Layout/Layout';\r\nimport Sidebar from '../components/Layout/Sidebar';\r\nimport Content from '../components/Layout/Content';\r\nimport Card from '../components/Layout/Card';\r\nimport MainMenu from '../components/Menu/MainMenu';\r\nimport { MdLink, MdMailOutline, MdLocationOn, MdPhoneIphone } from 'react-icons/md';\r\n\r\nconst FlexWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n`;\r\n\r\nconst ContentSection = styled.section`\r\n  height: fit-content !important;\r\n  h2 {\r\n    margin-bottom: 10px;\r\n    font-weight: bold;\r\n    color: ${props => props.theme.layout.mainColor};\r\n  }\r\n  &:first-of-type {\r\n    div {\r\n      width: 100%;\r\n      height: 250px;\r\n      background: lightblue;\r\n      border: 1px solid gray;\r\n    }\r\n  }\r\n  &:last-of-type {\r\n    h2 {\r\n      border-bottom: 1px dashed gray;\r\n      line-height: 1.4;\r\n    }\r\n    div {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n  ul {\r\n    line-height: 1.8;\r\n    li {\r\n      height: 30px;\r\n      border-bottom: 1px dashed gray;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ProfileSection = styled.section`\r\n  height: fit-content !important;\r\n  &:last-of-type {\r\n    padding-top: 20px;\r\n    border-top: 1px dashed gray;\r\n    //font-size: 0.9rem;\r\n    p {\r\n      display: flex;\r\n      align-items: center;\r\n      &:not(:first-of-type) {\r\n        margin: 10px 0;\r\n      }\r\n    }\r\n    svg {\r\n      margin-right: 3px;\r\n      color: #666;\r\n    }\r\n  }\r\n  img {\r\n    width: 100%;\r\n    height: auto;\r\n    object-fit: cover;\r\n  }\r\n  .my-name {\r\n    margin-right: 5px;\r\n    color: ${props => props.theme.layout.mainColor};\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n  }\r\n  .my-sex,\r\n  .my-brthdy {\r\n    color: #9e9e9e;\r\n    font-size: 0.85rem;\r\n  }\r\n  .my-sex {\r\n    margin-right: 2px;\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst LinkTitle = styled.p`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 10px 0;\r\n  &:first-of-type {\r\n    margin-top: 20px;\r\n  }\r\n  cursor: pointer;\r\n  svg {\r\n    margin-right: 5px;\r\n    color: #666;\r\n    font-size: 1.2rem;\r\n  }\r\n  &:hover {\r\n    color: ${props => props.theme.layout.mainColor};\r\n  }\r\n`;\r\n\r\nconst Home = () => {\r\n  const goGithub = () => {\r\n    window.location.href = 'https://github.com/danbiilee';\r\n  };\r\n  const goVelog = () => {\r\n    window.location.href = 'https://velog.io/@dblee';\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Sidebar>\r\n        <Card>\r\n          <FlexWrapper>\r\n            <ProfileSection>\r\n              <img\r\n                src={process.env.PUBLIC_URL + '/resources/img/profile.jpg'}\r\n                alt=\"profile\"\r\n              />\r\n              <LinkTitle onClick={goGithub}><MdLink />Github</LinkTitle>\r\n              <LinkTitle onClick={goVelog}><MdLink />dblee.log</LinkTitle>\r\n            </ProfileSection>\r\n            <ProfileSection>\r\n              <p>\r\n                <span className=\"my-name\">이단비</span>\r\n                <span className=\"my-sex\">(♀)</span>\r\n                <span className=\"my-brthdy\">1992.08.19</span>\r\n              </p>\r\n              <p>\r\n                <MdMailOutline />\r\n                danbi.db@gmail.com\r\n              </p>\r\n              <p>\r\n                <MdPhoneIphone />\r\n                010-4013-4147\r\n              </p>\r\n              <p>\r\n                <MdLocationOn />\r\n                경기도 안양시\r\n              </p>\r\n            </ProfileSection>\r\n          </FlexWrapper>\r\n        </Card>\r\n      </Sidebar>\r\n      <Content>\r\n        <Card>\r\n          <ContentSection>\r\n            <h2>미니룸</h2>\r\n            <div>준비중</div>\r\n          </ContentSection>\r\n          <ContentSection>\r\n            <h2>한 줄 이력</h2>\r\n            <div>\r\n              <ul>\r\n                <li>KH 수료</li>\r\n                <li>소프트원 재직중</li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n              </ul>\r\n            </div>\r\n          </ContentSection>\r\n        </Card>\r\n      </Content>\r\n      <MainMenu />\r\n    </Layout>\r\n  );\r\n};\r\nexport default Home;\r\n","const SET_FORM_MODE = 'formMode/SET_FORM_MODE';\r\n\r\nexport const setFormMode = payload => ({ type: SET_FORM_MODE, payload });\r\n\r\nconst initialState = false;\r\n\r\nexport default function formMode(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_FORM_MODE:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { NavLink, useRouteMatch } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { setFormMode } from '../../module/formMode';\r\n\r\nconst ListDiv = styled.div`\r\n  h2 {\r\n    padding-bottom: 10px;\r\n    border-bottom: 1px solid gray;\r\n    font-weight: bold;\r\n    a {\r\n      color: ${props => props.theme.layout.mainColor};\r\n    }\r\n  }\r\n  ul {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 10px;\r\n    font-size: 0.9rem;\r\n    li {\r\n      padding: 5px;\r\n    }\r\n    ul {\r\n      padding-left: 15px;\r\n    }\r\n    a {\r\n      color: ${props => props.theme.layout.textColor};\r\n      &.selected {\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst SubMenu = ({ title, list }) => {\r\n  const match = useRouteMatch();\r\n  const dispatch = useDispatch();\r\n  const { formMode: isForm } = useSelector(state => state);\r\n  const handleMode = () => {\r\n    if (isForm) {\r\n      dispatch(setFormMode());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListDiv>\r\n      <h2>\r\n        <NavLink\r\n          exact\r\n          to={match.url}\r\n          activeClassName=\"selected\"\r\n          onClick={handleMode}\r\n        >\r\n          {title}\r\n        </NavLink>\r\n      </h2>\r\n      <nav>\r\n        <ul>\r\n          {list.map(item => (\r\n            <li key={item.id}>\r\n              <NavLink\r\n                to={match.url + item.url}\r\n                activeClassName=\"selected\"\r\n                onClick={handleMode}\r\n              >\r\n                {item.title}\r\n              </NavLink>\r\n              {item.child && (\r\n                <ul>\r\n                  {item.child.map(child => (\r\n                    <li key={child.id}>\r\n                      <NavLink\r\n                        to={match.url + item.url + child.url}\r\n                        activeClassName=\"selected\"\r\n                        onClick={handleMode}\r\n                      >\r\n                        {child.title}\r\n                      </NavLink>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    </ListDiv>\r\n  );\r\n};\r\n\r\nexport default SubMenu;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst Article = styled.article`\r\n  width: 100%;\r\n  height: ${props => (props.fullHeight ? '100%' : 'max-content')};\r\n  /* height: 88%; */\r\n  margin: 50px 0;\r\n  &:first-of-type {\r\n    margin-top: 30px};\r\n  }\r\n  h3 {\r\n    height: 30px;\r\n    margin-bottom: 10px;\r\n    background: #eee;\r\n    border-top: 1px solid #aaa;\r\n    color: #333;\r\n    text-align: center;\r\n    font-weight: bold;\r\n    line-height: 30px;\r\n  }\r\n  .post-info {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 10px 5px;\r\n    p:first-of-type {\r\n      color: ${props => props.theme.layout.textColor};\r\n    }\r\n    p:last-of-type {\r\n      font-size: 0.9rem;\r\n    }\r\n  }\r\n  .post-contents {\r\n    img {\r\n    }\r\n    p {\r\n      padding: 20px 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Post = ({ fixed, children }) => {\r\n  return <Article fixed={fixed}>{children}</Article>;\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Background = styled.div`\r\n  display: ${props => (props.isOpen ? 'block' : 'none')};\r\n  z-index: 999;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst ModalWrapper = styled.div`\r\n  display: ${props => (props.isOpen ? 'block' : 'none')};\r\n  z-index: 9999;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: ${props => props.width}px;\r\n  height: ${props => props.height}px;\r\n  margin: -${props => props.height / 2}px 0 0 -${props => props.width / 2}px;\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  border: 3px solid;\r\n  h4 {\r\n    height: 100px;\r\n    background: ${props => props.bg};\r\n    border-top-left-radius: 10px;\r\n    border-top-right-radius: 10px;\r\n    text-align: center;\r\n    line-height: 100px;\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst Modal = ({ isOpen, width, height, bg, children }) => {\r\n  return (\r\n    <>\r\n      <Background isOpen={isOpen} />\r\n      <ModalWrapper isOpen={isOpen} width={width} height={height} bg={bg}>\r\n        {children}\r\n      </ModalWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import axios from 'axios';\r\n\r\nexport const getBoards = async () => {\r\n  const response = await axios.get('http://localhost:4000/boards');\r\n  return response.data;\r\n};\r\n\r\nexport const addBoard = async board => {\r\n  const response = await axios.post('http://localhost:4000/boards', board);\r\n  return response.data;\r\n};\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as apiBoards from '../../api/boards';\r\nimport { setFormMode } from '../../module/formMode';\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  button {\r\n    align-self: flex-end;\r\n    margin: 0 10px 10px 0;\r\n  }\r\n  input {\r\n    height: 28px;\r\n  }\r\n  textarea {\r\n    height: 90%;\r\n    margin-top: 10px;\r\n    resize: none;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  float: right;\r\n  margin: 0 10px 10px 0;\r\n`;\r\n\r\nconst FormWrapper = ({ regusr, passwd }) => {\r\n  const dispatch = useDispatch();\r\n  const { formMode: isForm } = useSelector(state => state);\r\n\r\n  // Board\r\n  const initialState = {\r\n    bbs_ctgry1: 'WORK_LOG',\r\n    bbs_ctgry2: 'REACT',\r\n    title: '',\r\n    content: '',\r\n    regusr,\r\n    passwd,\r\n  };\r\n  const [board, setBoard] = useState(initialState);\r\n  const onChange = e => {\r\n    const { name, value } = e.target;\r\n    setBoard({\r\n      ...board,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // Submit form\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (!board.title) {\r\n      alert('제목을 입력해 주세요!');\r\n      return;\r\n    }\r\n    if (!board.content) {\r\n      alert('내용을 입력해 주세요!');\r\n      return;\r\n    }\r\n\r\n    if (window.confirm('글을 등록하시겠습니까?')) {\r\n      apiBoards\r\n        .addBoard(board)\r\n        .then(data => {\r\n          if (data.success) {\r\n            alert('글 등록 성공!');\r\n            dispatch(setFormMode(!isForm));\r\n            setBoard(initialState);\r\n          }\r\n        })\r\n        .catch(err => alert('글 등록 실패!'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={onSubmit}>\r\n      <button type=\"submit\">등록하기</button>\r\n      <div className=\"select-wrapper\">\r\n        <select name=\"bbs_ctgry1\" value={board.bbs_ctgry1} onChange={onChange}>\r\n          <option value=\"WORK_LOG\">작업일지</option>\r\n          <option value=\"STUDY\">공부노트</option>\r\n        </select>\r\n        {board.bbs_ctgry1 === 'STUDY' && (\r\n          <select\r\n            name=\"bbs_ctgry2\"\r\n            value={board.bbs_ctgry2}\r\n            onChange={onChange}\r\n          >\r\n            <option value=\"REACT\">리액트</option>\r\n            <option value=\"JS\">자바스크립트</option>\r\n          </select>\r\n        )}\r\n      </div>\r\n      <input type=\"text\" name=\"title\" value={board.title} onChange={onChange} />\r\n      <textarea\r\n        name=\"content\"\r\n        value={board.content}\r\n        onChange={onChange}\r\n      ></textarea>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormWrapper;\r\n","export const stateUtils = {\r\n  initial: (initialData = null) => ({\r\n    loading: false,\r\n    data: initialData,\r\n    error: null,\r\n  }),\r\n  loading: (prevData = null) => ({\r\n    loading: true,\r\n    data: prevData,\r\n    error: null,\r\n  }),\r\n  success: data => ({\r\n    loading: false,\r\n    data,\r\n    error: null,\r\n  }),\r\n  error: error => ({\r\n    loading: false,\r\n    data: null,\r\n    error,\r\n  }),\r\n};\r\n\r\nexport const createPromiseThunk = (type, promiseCreator) => {\r\n  console.log('createPromiseThunk', type);\r\n  // const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\r\n\r\n  // return param => async dispatch => {\r\n  //   try {\r\n  //     dispatch({ type, param }); // 요청 시작\r\n  //     const payload = await promiseCreator(param); // 결과의 이름을 payload로 통일\r\n  //     dispatch({ type: SUCCESS, payload, param }); // 성공\r\n  //   } catch (e) {\r\n  //     dispatch({ type: ERROR, error: e }); // 실패\r\n  //   }\r\n  // };\r\n};\r\n\r\nexport const handleAsyncActions = (type, key, keepData = false) => {\r\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\r\n  return (state, action) => {\r\n    switch (action.type) {\r\n      case type:\r\n        return {\r\n          ...state,\r\n          [key]: stateUtils.loading(keepData ? state[key].data : null),\r\n        };\r\n      case SUCCESS:\r\n        return {\r\n          ...state,\r\n          [key]: stateUtils.success(action.payload),\r\n        };\r\n      case ERROR:\r\n        return {\r\n          ...state,\r\n          [key]: stateUtils.error(action.error),\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n};\r\n\r\nconst defaulIdtSelector = param => param;\r\nexport const createPromiseThunkById = (\r\n  type,\r\n  promiseCreator,\r\n  idSelector = defaulIdtSelector,\r\n) => {\r\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\r\n\r\n  return param => async dispatch => {\r\n    const id = idSelector(param);\r\n    console.log(type, id);\r\n    try {\r\n      dispatch({ type, meta: id });\r\n      const payload = await promiseCreator(param);\r\n      dispatch({ type: SUCCESS, payload, meta: id });\r\n    } catch (e) {\r\n      dispatch({ type: ERROR, error: e, meta: id });\r\n    }\r\n  };\r\n};\r\n\r\nexport const handleAsyncActionsById = (type, key, keepData = false) => {\r\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\r\n\r\n  return (state, action) => {\r\n    const id = action.meta;\r\n    switch (action.type) {\r\n      case type:\r\n        return {\r\n          ...state,\r\n          [key]: {\r\n            ...state[key],\r\n            [id]: stateUtils.loading(\r\n              keepData ? state[key][id] && state[key][id].data : null,\r\n            ),\r\n          },\r\n        };\r\n      case SUCCESS:\r\n        return {\r\n          ...state,\r\n          [key]: {\r\n            ...state[key],\r\n            [id]: stateUtils.success(action.payload),\r\n          },\r\n        };\r\n      case ERROR:\r\n        return {\r\n          ...state,\r\n          [key]: {\r\n            ...state[key],\r\n            [id]: stateUtils.error(action.error),\r\n          },\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const getPasswd = async () => {\r\n  const response = await axios.get('http://localhost:4000/sessions/passwd');\r\n  return response.data;\r\n};\r\n","import * as api from '../api/boards';\r\nimport {\r\n  stateUtils,\r\n  handleAsyncActions,\r\n  createPromiseThunk,\r\n} from '../lib/asyncUtils';\r\n\r\n// Board 목록 전체 조회\r\nconst GET_BOARDS_ALL = 'boards/GET_BOARDS_ALL';\r\nconst GET_BOARDS_ALL_SUCCESS = 'boards/GET_BOARDS_ALL_SUCCESS';\r\nconst GET_BOARDS_ALL_ERROR = 'boards/GET_BOARDS_ALL_ERROR';\r\n\r\nconst initialState = {\r\n  boards: stateUtils.initial(),\r\n  board: {},\r\n};\r\n\r\nexport const getBoardsAll = createPromiseThunk(GET_BOARDS_ALL, api.getBoards);\r\n\r\nexport default function boards(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BOARDS_ALL:\r\n    case GET_BOARDS_ALL_SUCCESS:\r\n    case GET_BOARDS_ALL_ERROR:\r\n      const reducer = handleAsyncActions(GET_BOARDS_ALL, 'boards', true);\r\n      return reducer(state, action);\r\n    //return handleAsyncActions(GET_BOARDS_ALL, 'boards', true)(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Card from '../../components/Layout/Card';\r\nimport MainMenu from '../../components/Menu/MainMenu';\r\nimport SubMenu from '../../components/Menu/SubMenu';\r\nimport Sidebar from '../../components/Layout/Sidebar';\r\nimport Content from '../../components/Layout/Content';\r\nimport Post from '../../components/Layout/Post';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport FormWrapper from './FormWrapper';\r\nimport * as apiSessions from '../../api/sessions';\r\nimport { setFormMode } from '../../module/formMode';\r\nimport { getBoardsAll } from '../../module/boards';\r\nimport { getBoards } from '../../api/boards';\r\n\r\nconst PostWrapper = styled.div`\r\n  overflow-y: auto;\r\n  height: 100%;\r\n  padding: 0 20px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  float: right;\r\n  margin: 0 10px 10px 0;\r\n`;\r\n\r\n// Modal\r\nconst ButtonWrapper = styled.div``;\r\n\r\nconst Diary = () => {\r\n  console.log('diary');\r\n  const match = useRouteMatch();\r\n  const list = [\r\n    { id: 1, title: '📁작업일지', url: '/workLog' },\r\n    {\r\n      id: 2,\r\n      title: '📁공부노트',\r\n      url: '/study',\r\n      child: [\r\n        { id: 1, title: '📝리액트', url: '/react' },\r\n        { id: 2, title: '📝자바스크립트', url: '/js' },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  // Get boards\r\n  const dispatch = useDispatch();\r\n  const { loading, data, error } = useSelector(state => state.boards.boards);\r\n  console.log(loading, data, error);\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(getBoardsAll());\r\n  // }, [dispatch]);\r\n  getBoards();\r\n\r\n  // Check & Set regusr/passwd\r\n  const [passwd, setPasswd] = useState('');\r\n  const [regusr, setRegusr] = useState('');\r\n  const handleRegInfo = e => {\r\n    const { name, value } = e.target;\r\n    if (name === 'passwd') setPasswd(value);\r\n    else setRegusr(value);\r\n  };\r\n\r\n  // Modal\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const handleModal = () => {\r\n    setPasswd('');\r\n    setRegusr('');\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  // Mode type: view, form\r\n  const { formMode: isForm } = useSelector(state => state);\r\n  const handleMode = () => {\r\n    // if you try to change mode type to form, (false -> true)\r\n    // check passwd & enter regusr\r\n    if (!isForm) {\r\n      if (!regusr) {\r\n        alert('등록자명을 입력해주세요!');\r\n        return;\r\n      }\r\n      if (!passwd) {\r\n        alert('비밀번호를 입력해주세요!');\r\n        return;\r\n      }\r\n      apiSessions\r\n        .getPasswd()\r\n        .then(data => {\r\n          if (data.passwd !== passwd) {\r\n            alert('유효하지 않은 비밀번호입니다!');\r\n            return;\r\n          } else {\r\n            dispatch(setFormMode(!isForm));\r\n            handleModal();\r\n          }\r\n        })\r\n        .catch(err => alert('비밀번호 불러오기 실패!'));\r\n    } else {\r\n      dispatch(setFormMode(!isForm));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Modal isOpen={isOpen} width={500} height={300} bg=\"salmon\">\r\n        <h4>✔ 비밀번호 확인</h4>\r\n        <input\r\n          type=\"text\"\r\n          name=\"regusr\"\r\n          value={regusr}\r\n          placeholder=\"등록자명을 입력하세요\"\r\n          onChange={handleRegInfo}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"passwd\"\r\n          value={passwd}\r\n          onChange={handleRegInfo}\r\n        />\r\n        <ButtonWrapper>\r\n          <button type=\"button\" onClick={handleModal}>\r\n            닫기\r\n          </button>\r\n          <button type=\"button\" onClick={handleMode}>\r\n            적용하기\r\n          </button>\r\n        </ButtonWrapper>\r\n      </Modal>\r\n      <Sidebar>\r\n        <Card>\r\n          <SubMenu title=\"다이어리\" list={list} />\r\n        </Card>\r\n      </Sidebar>\r\n      <Content>\r\n        <Card>\r\n          <PostWrapper>\r\n            <Switch>\r\n              <Route exact path={match.path}>\r\n                {!isForm ? (\r\n                  <>\r\n                    <Button type=\"button\" onClick={handleModal}>\r\n                      등록하기\r\n                    </Button>\r\n                    <Post>\r\n                      <h3>다이어리 메인</h3>\r\n                      <div className=\"post-info\">\r\n                        <p>이단비</p>\r\n                        <p>2020-11-12</p>\r\n                      </div>\r\n                      <div className=\"post-contents\">\r\n                        <img\r\n                          src={\r\n                            process.env.PUBLIC_URL +\r\n                            '/resources/img/profile.jpg'\r\n                          }\r\n                          alt=\"profile\"\r\n                        />\r\n                        <p>모든 글 전체 조회?</p>\r\n                      </div>\r\n                    </Post>\r\n                    <Post>\r\n                      <h3>다이어리 메인</h3>\r\n                      <div className=\"post-info\">\r\n                        <p>이단비</p>\r\n                        <p>2020-11-12</p>\r\n                      </div>\r\n                      <div className=\"post-contents\">\r\n                        <img\r\n                          src={\r\n                            process.env.PUBLIC_URL +\r\n                            '/resources/img/profile.jpg'\r\n                          }\r\n                          alt=\"profile\"\r\n                        />\r\n                        <p>모든 글 전체 조회?</p>\r\n                      </div>\r\n                    </Post>\r\n                  </>\r\n                ) : (\r\n                  <FormWrapper regusr={regusr} passwd={passwd} />\r\n                )}\r\n              </Route>\r\n              <Route path={`${match.path}/workLog`}>작업일지</Route>\r\n              <Route exact path={`${match.path}/study`}>\r\n                스터디 메인\r\n              </Route>\r\n              <Route path={`${match.path}/study/react`}>스터디 리액트</Route>\r\n              <Route path={`${match.path}/study/js`}>스터디 자바스크립트</Route>\r\n            </Switch>\r\n          </PostWrapper>\r\n        </Card>\r\n      </Content>\r\n      <MainMenu />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Diary;\r\n","const SET_COLOR = 'palette/SET_COLOR';\r\n\r\nexport const setColor = payload => ({ type: SET_COLOR, payload });\r\n\r\nconst initialState = {\r\n  layout: {\r\n    layoutBorder1: 'black',\r\n    layoutBg1: '#a9d2d9',\r\n    layoutBorder2: '#fff',\r\n    layoutBg2: 'lightgray',\r\n    cardBorder: '#a5a5a5',\r\n    cardBg: '#fff',\r\n    mainColor: '#238db3',\r\n    headerColor: '#333',\r\n    textColor: '#07698c',\r\n  },\r\n  component: {\r\n    priority: '#e03131',\r\n    important: '#3b5bdb',\r\n    notice: '#fcc419',\r\n  }\r\n};\r\n\r\nexport default function palette(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_COLOR:\r\n      const { key, value } = action.payload;\r\n      return {\r\n        ...state,\r\n        layout: {\r\n          ...state.layout,\r\n          [key]: value,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled, { css } from 'styled-components';\r\nimport { setColor } from '../../module/palette';\r\nimport Post from '../../components/Layout/Post';\r\n\r\nconst ThemeWrapper = styled.div`\r\n  position: relative;\r\n  width: 95%;\r\n  height: 100%;\r\n  margin: 40px auto;\r\n  padding-top: 50px;\r\n`;\r\n\r\nconst TabList = styled.ul`\r\n  display: flex;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n`;\r\n\r\nconst Tab = styled.li`\r\n  position: absolute;\r\n  top: 1px;\r\n  left: ${props => props.left}px;\r\n  display: block;\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 1px solid #a5a5a5;\r\n  ${props =>\r\n    props.id === props.target &&\r\n    css`\r\n      border-bottom-color: ${props => props.color};\r\n    `}\r\n  border-radius: 5px 5px 0 0;\r\n  background: ${props => props.color};\r\n  cursor: pointer;\r\n  &:hover {\r\n    top: -20px;\r\n    height: 71px;\r\n  }\r\n`;\r\n\r\nconst ChangeWrapper = styled.div`\r\n  min-width: 710px;\r\n  border: 1px solid #a5a5a5;\r\n  border-radius: 0 5px 5px 5px;\r\n  background: ${props => props.color};\r\n  box-shadow: 3px 3px 10px rgba(0,0,0,0.2);\r\n  .pleasePick {\r\n    padding: 20px;\r\n    box-shadow: 3px 3px 10px rgba(0,0,0,0.2);\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst ColorWrapper = styled.div`\r\n  display: flex;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Swatch = styled.div`\r\n  width: 150px;\r\n  height: 200px;\r\n  background: #fff;\r\n  border: 1px solid #a5a5a5;\r\n  border-radius: 3px;\r\n  box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\r\n  input {\r\n    display: flex;\r\n    width: 140px;\r\n    height: 140px;\r\n    margin: 0 auto;\r\n    padding: 0;\r\n    border: 0;\r\n    background: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n  }\r\n  p {\r\n    margin-left: 15px;\r\n    &:first-of-type {\r\n      margin-bottom: 5px;\r\n      font-weight: bold;\r\n      font-size: 1.5rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PaletteWrapper = styled.div`\r\n  position: relative;\r\n  min-height: 200px;\r\n  min-width: 500px;\r\n  width: 60%;\r\n  height: fit-content;\r\n  padding: 20px;\r\n  margin-left: 20px;\r\n  background: #fff;\r\n  border: 1px solid #a5a5a5;\r\n  border-radius: 3px;\r\n  box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst ColorList = styled.ul`\r\n  display: flex;\r\n  &:first-of-type {\r\n    margin-bottom: 8px;\r\n  }\r\n  &:last-of-type {\r\n    margin-bottom: 15px;\r\n  }\r\n`;\r\n\r\nconst Color = styled.li`\r\n  width: 50px;\r\n  height: 50px;\r\n  &:not(:last-of-type) {\r\n    margin-right: 8px;\r\n  }\r\n  background: ${props => props.color};\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  height: 35px;\r\n  margin-right: 8px;\r\n  padding: 0 20px;\r\n  border-radius: 20px;\r\n  border: 2px solid;\r\n  background: #fff;\r\n  line-height: 35px;\r\n  font-weight: bold;\r\n  font-size: 0.9rem;\r\n  outline: 0;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: #333;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst ChangeTheme = () => {\r\n  // Redux\r\n  const dispatch = useDispatch();\r\n  const { layout: palette } = useSelector(state => state.palette);\r\n\r\n  // Set tab list\r\n  const tabList = [];\r\n  let index = 1;\r\n  let left = 0; // + tab's width, margin-left\r\n  for (let key in palette) {\r\n    tabList.push({ id: index++, target: key, color: palette[key], left });\r\n    left += 53;\r\n  }\r\n\r\n  // Set default Palette's colors\r\n  const defaultColors = [\r\n    '#e03131',\r\n    '#d6336c',\r\n    '#fd7e14',\r\n    '#fab005',\r\n    '#37b24d',\r\n    '#15aabf',\r\n    '#228be6',\r\n    '#7048e8',\r\n  ];\r\n  const humidColors = [\r\n    '#ffc9c9',\r\n    '#fcc2d7',\r\n    '#ffd8a8',\r\n    '#ffec99',\r\n    '#b2f2bb',\r\n    '#99e9f2',\r\n    '#a5d8ff',\r\n    '#d0bfff',\r\n  ];\r\n\r\n  // Selected layout & hex color\r\n  const [target, setTarget] = useState('');\r\n  const [hexColor, setHexColor] = useState('');\r\n\r\n  // Hex color code\r\n  // Get random hex code\r\n  const getRandomHexColor = () => {\r\n    const letters = '0123456789ABCDEF';\r\n    let hex = '#';\r\n    for (let i = 0; i < 6; i++) {\r\n      hex += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return hex;\r\n  };\r\n\r\n  // Set hex code to Swatch\r\n  const onChange = e => setHexColor(e.target.value);\r\n\r\n  // Handle color\r\n  const handleLayoutColor = target => {\r\n    setTarget(target);\r\n    setHexColor(getRandomHexColor());\r\n  };\r\n\r\n  // Change layout color \r\n  const changeLayoutColor = () => {\r\n    dispatch(\r\n      setColor({\r\n        key: target,\r\n        value: hexColor,\r\n      }),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Post>\r\n      <h3>테마 변경하기</h3>\r\n      <ThemeWrapper>\r\n        <TabList>\r\n          {tabList.map(tab => (\r\n            <Tab\r\n              key={tab.id}\r\n              id={tab.target}\r\n              target={target}\r\n              color={tab.color}\r\n              left={tab.left}\r\n              onClick={() => handleLayoutColor(tab.target)}\r\n            ></Tab>\r\n          ))}\r\n        </TabList>\r\n        <ChangeWrapper color={palette[target]}>\r\n          {target ? (\r\n            <ColorWrapper>\r\n              <Swatch color={hexColor}>\r\n                <input\r\n                  type=\"color\"\r\n                  name={target}\r\n                  value={hexColor}\r\n                  onChange={onChange}\r\n                  title=\"DON'T PASS ME! PICK ANOTHER COLOR!\"\r\n                />\r\n                <p>{hexColor}</p>\r\n                <p>{target}</p>\r\n              </Swatch>\r\n              <PaletteWrapper>\r\n                <ColorList>\r\n                  {defaultColors.map((color, index) => (\r\n                    <Color\r\n                      key={index}\r\n                      color={color}\r\n                      onClick={() => setHexColor(color)}\r\n                    ></Color>\r\n                  ))}\r\n                </ColorList>\r\n                <ColorList>\r\n                  {humidColors.map((color, index) => (\r\n                    <Color\r\n                      key={index}\r\n                      color={color}\r\n                      onClick={() => setHexColor(color)}\r\n                    ></Color>\r\n                  ))}\r\n                </ColorList>\r\n                <Button\r\n                  type=\"button\"\r\n                  onClick={() => setHexColor(getRandomHexColor())}\r\n                >\r\n                  랜덤!\r\n                </Button>\r\n                <Button type=\"button\" onClick={changeLayoutColor}>\r\n                  적용하기\r\n                </Button>\r\n              </PaletteWrapper>\r\n            </ColorWrapper>\r\n          ) : (\r\n            <div className=\"pleasePick\">변경할 색상의 탭을 선택하세요!</div>\r\n          )}\r\n        </ChangeWrapper>\r\n      </ThemeWrapper>\r\n    </Post>\r\n  );\r\n};\r\n\r\nexport default ChangeTheme;\r\n","// id값\r\nlet tasklistId = 0; // ADD_TASKLIST\r\nlet taskId = 0; // ADD_TASK\r\nlet checklistId = 0; // ADD_CHECKLIST\r\n\r\n// 업무리스트\r\nconst ADD_TASKLIST = 'tasklist/ADD_TASKLIST';\r\nconst DEL_TASKLIST = 'tasklist/DEL_TASKLIST';\r\nconst CHANGE_TASKLIST_TITLE = 'tasklist/CHANGE_TASKLIST_TITLE';\r\n//업무\r\nconst SET_TASK = 'tasklist/SET_TASK';\r\nconst CLEAR_TASK = 'tasklist/CLEAR_TASK';\r\nconst ADD_TASK = 'tasklist/ADD_TASK';\r\nconst DEL_TASK = 'tasklist/DEL_TASK';\r\nconst TOGGLE_TASK = 'tasklist/TOGGLE_TASK';\r\nconst CHANGE_TASK_TITLE = 'tasklist/CHANGE_TASK_TITLE';\r\nconst CHANGE_TASK_SETTINGS = 'tasklist/CHANGE_TASK_SETTINGS';\r\nconst ADD_CHECKLIST = 'tasklist/ADD_CHECKLIST';\r\n\r\n// 업무리스트\r\nexport const addTasklist = payload => ({ type: ADD_TASKLIST, payload });\r\nexport const delTasklist = payload => ({ type: DEL_TASKLIST, payload });\r\nexport const changeTasklistTitle = payload => ({\r\n  type: CHANGE_TASKLIST_TITLE,\r\n  payload,\r\n});\r\n//업무\r\nexport const setTask = payload => ({ type: SET_TASK, payload });\r\nexport const clearTask = () => ({ type: CLEAR_TASK });\r\nexport const addTask = payload => ({ type: ADD_TASK, payload });\r\nexport const delTask = payload => ({ type: DEL_TASK, payload });\r\nexport const toggleTask = payload => ({ type: TOGGLE_TASK, payload });\r\nexport const changeTaskTitle = payload => ({\r\n  type: CHANGE_TASK_TITLE,\r\n  payload,\r\n});\r\nexport const changeTaskSettings = payload => ({\r\n  type: CHANGE_TASK_SETTINGS,\r\n  payload,\r\n});\r\nexport const addChecklist = payload => ({ type: ADD_CHECKLIST, payload });\r\n\r\nconst initialState = {\r\n  tasklists: [],\r\n  task: {},\r\n};\r\n\r\nexport default function tasklists(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_TASKLIST:\r\n      return {\r\n        ...state,\r\n        tasklists: state.tasklists.concat({\r\n          id: tasklistId++,\r\n          title: action.payload,\r\n        }),\r\n      };\r\n    case DEL_TASKLIST:\r\n      return {\r\n        ...state,\r\n        tasklists: state.tasklists.filter(item => item.id !== action.payload),\r\n      };\r\n    case CHANGE_TASKLIST_TITLE:\r\n      return {\r\n        ...state,\r\n        tasklists: state.tasklists.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, title: action.payload.title }\r\n            : item,\r\n        ),\r\n      };\r\n    case SET_TASK:\r\n      const { tasks } = state.tasklists[action.payload.tasklistId];\r\n      return {\r\n        ...state,\r\n        task: tasks.find(item => item.id === action.payload.taskId),\r\n      };\r\n    case CLEAR_TASK:\r\n      return {\r\n        ...state,\r\n        task: {},\r\n      };\r\n    case ADD_TASK:\r\n      let task = action.payload.task;\r\n      task.id = taskId++;\r\n      return {\r\n        ...state,\r\n        tasklists: state.tasklists.map(item =>\r\n          item.id === action.payload.id\r\n            ? {\r\n                ...item,\r\n                tasks: item.tasks ? item.tasks.concat(task) : [].concat(task),\r\n              }\r\n            : item,\r\n        ),\r\n      };\r\n    case DEL_TASK:\r\n      return {\r\n        ...state,\r\n        tasklists: state.tasklists.map(item =>\r\n          item.id === action.payload.tasklistId\r\n            ? {\r\n                ...item,\r\n                tasks: item.tasks.filter(t => t.id !== action.payload.taskId),\r\n              }\r\n            : item,\r\n        ),\r\n      };\r\n    case TOGGLE_TASK:\r\n      return {\r\n        ...state,\r\n        tasklists: state.tasklists.map(item =>\r\n          item.id === action.payload.id\r\n            ? {\r\n                ...item,\r\n                tasks: item.tasks.map(t =>\r\n                  t.id === action.payload.task.id\r\n                    ? {\r\n                        ...t,\r\n                        isDone: !t.isDone,\r\n                        finDt: action.payload.task.finDt,\r\n                      }\r\n                    : t,\r\n                ),\r\n              }\r\n            : item,\r\n        ),\r\n      };\r\n    case CHANGE_TASK_TITLE:\r\n      return {\r\n        ...state,\r\n        tasklists: state.tasklists.map(item =>\r\n          item.id === action.payload.tasklistId\r\n            ? {\r\n                ...item,\r\n                tasks: item.tasks.map(t =>\r\n                  t.id === action.payload.taskId\r\n                    ? {\r\n                        ...t,\r\n                        title: action.payload.title,\r\n                      }\r\n                    : t,\r\n                ),\r\n              }\r\n            : item,\r\n        ),\r\n      };\r\n    case CHANGE_TASK_SETTINGS:\r\n      return {\r\n        ...state,\r\n        tasklists: state.tasklists.map(item =>\r\n          item.id === action.payload.tasklistId\r\n            ? {\r\n                ...item,\r\n                tasks: item.tasks.map(t =>\r\n                  t.id === action.payload.task.id ? action.payload.task : t,\r\n                ),\r\n              }\r\n            : item,\r\n        ),\r\n      };\r\n    case ADD_CHECKLIST:\r\n      const beforeChecklist = action.payload.task.checklist;\r\n      let { checklist } = action.payload;\r\n      checklist.id = checklistId++;\r\n      return {\r\n        ...state,\r\n        tasklists: state.tasklists.map(item =>\r\n          item.id === action.payload.tasklistId\r\n            ? {\r\n                ...item,\r\n                tasks: item.tasks.map(t =>\r\n                  t.id === action.payload.task.id\r\n                    ? {\r\n                        ...t,\r\n                        checklist: t.checklist.concat(checklist),\r\n                      }\r\n                    : t,\r\n                ),\r\n              }\r\n            : item,\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  MdGroupAdd,\r\n  MdCheck,\r\n  MdFace,\r\n  MdSentimentNeutral,\r\n} from 'react-icons/md';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  svg {\r\n    margin-right: 5px;\r\n    font-size: 1.4rem;\r\n  }\r\n  .btn {\r\n    cursor: pointer;\r\n    &:hover {\r\n      color: #656a70;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ListWrapper = styled.ul`\r\n  display: ${props => (props.activeMber ? 'block' : 'none')};\r\n  position: absolute;\r\n  top: 30px;\r\n  left: 0;\r\n  z-index: 10;\r\n  width: 140px;\r\n  height: 120px;\r\n  overflow-y: auto;\r\n  padding: 5px;\r\n  background: white;\r\n  font-size: 0.8rem;\r\n  li {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 5px;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background: #eee;\r\n      cursor: pointer;\r\n    }\r\n    .info-wrapper {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n    .info-wrapper + svg {\r\n      margin: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MberList = ({\r\n  onToggle,\r\n  activeMber,\r\n  selectedMberList,\r\n  handleMberList,\r\n}) => {\r\n  const mberList = [\r\n    {\r\n      mberNo: 1,\r\n      mberId: 'danbi',\r\n      mberNm: '이단비',\r\n      profile: MdFace,\r\n    },\r\n    {\r\n      mberNo: 2,\r\n      mberId: 'ash',\r\n      mberNm: '애쉬',\r\n      profile: MdSentimentNeutral,\r\n    },\r\n    {\r\n      mberNo: 3,\r\n      mberId: 'sikk',\r\n      mberNm: '식케이',\r\n      profile: MdFace,\r\n    },\r\n    {\r\n      mberNo: 4,\r\n      mberId: 'moon',\r\n      mberNm: '문',\r\n      profile: MdSentimentNeutral,\r\n    },\r\n    {\r\n      mberNo: 5,\r\n      mberId: 'jay',\r\n      mberNm: '박재범',\r\n      profile: MdFace,\r\n    },\r\n    {\r\n      mberNo: 6,\r\n      mberId: 'coo',\r\n      mberNm: '쿠기',\r\n      profile: MdSentimentNeutral,\r\n    },\r\n  ]; // 임시\r\n  let tempMberList = [];\r\n  if (mberList.length) {\r\n    tempMberList = mberList.map(mber => {\r\n      const m = selectedMberList.find(m => m.mberNo === mber.mberNo);\r\n      if (m) return { ...mber, isSelected: true };\r\n      else return { ...mber, isSelected: false };\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <MdGroupAdd\r\n        className=\"btn\"\r\n        role=\"button\"\r\n        onClick={() => onToggle('mber')}\r\n      />\r\n      <ListWrapper activeMber={activeMber}>\r\n        {tempMberList.map(mber => (\r\n          <li\r\n            key={mber.mberNo}\r\n            onClick={() => {\r\n              const fm = mberList.find(item => item.mberNo === mber.mberNo);\r\n              handleMberList(fm);\r\n            }}\r\n          >\r\n            <div>\r\n              {React.createElement(mber.profile)}\r\n              {mber.mberNm}\r\n            </div>\r\n            {mber.isSelected && <MdCheck />}\r\n          </li>\r\n        ))}\r\n      </ListWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MberList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { MdLocalOffer, MdCheck } from 'react-icons/md';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  svg {\r\n    margin-right: 5px;\r\n    font-size: 1.2rem;\r\n  }\r\n  .btn {\r\n    cursor: pointer;\r\n    &:hover {\r\n      color: #656a70;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ListWrapper = styled.ul`\r\n  position: absolute;\r\n  top: 30px;\r\n  left: 0;\r\n  z-index: 10;\r\n  display: ${props => (props.activeTag ? 'block' : 'none')};\r\n  width: 120px;\r\n  height: 120px;\r\n  overflow-y: auto;\r\n  padding: 5px;\r\n  background: white;\r\n  font-size: 0.8rem;\r\n  li {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 5px;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background: #eee;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TagWrapper = styled.div`\r\n  display: inline-block;\r\n  padding: 4px 5px;\r\n  border-radius: 1rem;\r\n  background: ${props => props.tag && props.theme.component[props.tag]};\r\n  color: white;\r\n  font-size: 0.6rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Tag = ({ tag }) => {\r\n  return <TagWrapper tag={tag}>{tag}</TagWrapper>;\r\n};\r\n\r\nconst TagList = ({ onToggle, activeTag, tag, handleTag }) => {\r\n  const tagList = [\r\n    {\r\n      tagNo: 1,\r\n      tagNm: 'priority',\r\n    },\r\n    {\r\n      tagNo: 2,\r\n      tagNm: 'important',\r\n    },\r\n    {\r\n      tagNo: 3,\r\n      tagNm: 'notice',\r\n    },\r\n  ]; // 임시\r\n  let tempTagList = tagList.map(t => {\r\n    if (t.tagNm === tag) return { ...t, isSelected: true };\r\n    else return { ...t, isSelected: false };\r\n  });\r\n\r\n  return (\r\n    <Wrapper>\r\n      <MdLocalOffer\r\n        className=\"btn\"\r\n        role=\"button\"\r\n        onClick={() => onToggle('tag')}\r\n      />\r\n      <ListWrapper activeTag={activeTag}>\r\n        {tempTagList.map(tag => (\r\n          <li\r\n            key={tag.tagNo}\r\n            onClick={() => {\r\n              handleTag(tag.tagNm);\r\n            }}\r\n          >\r\n            <Tag tag={tag.tagNm} />\r\n            {tag.isSelected && <MdCheck />}\r\n          </li>\r\n        ))}\r\n      </ListWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default TagList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ImCalendar } from 'react-icons/im';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  svg {\r\n    margin-right: 5px;\r\n  }\r\n  .btn {\r\n    cursor: pointer;\r\n    &:hover {\r\n      color: #656a70;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .react-datepicker {\r\n    position: absolute;\r\n    top: 0;\r\n    left: -10px;\r\n    .react-datepicker__triangle {\r\n      left: 15px !important;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PickerWrapper = styled.div`\r\n  position: absolute;\r\n  top: -3px;\r\n  left: 0px;\r\n  z-index: 1;\r\n  display: flex;\r\n  width: 170px;\r\n  .react-datepicker-wrapper {\r\n    &:last-of-type {\r\n      margin-left: 3px;\r\n    }\r\n    input {\r\n      width: inherit;\r\n      padding: 3px 2px;\r\n      color: $gray-dark;\r\n      font-size: 0.7rem;\r\n    }\r\n    .react-datepicker__input-container .react-datepicker__close-icon {\r\n      padding: 0;\r\n      margin-right: 5px;\r\n    }\r\n    .react-datepicker__close-icon::after {\r\n      height: 12px;\r\n      width: 12px;\r\n      font-size: 10px;\r\n      vertical-align: initial;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Calendar = ({\r\n  onToggle,\r\n  activeDate,\r\n  startDt,\r\n  endDt,\r\n  setStartDate,\r\n  setEndDate,\r\n}) => {\r\n  return (\r\n    <Wrapper>\r\n      <ImCalendar className=\"btn\" onClick={() => onToggle('date')} />\r\n      {activeDate && (\r\n        <PickerWrapper>\r\n          <DatePicker\r\n            selected={startDt}\r\n            onChange={date => setStartDate(date)}\r\n            isClearable\r\n            placeholderText=\"시작일\"\r\n            dateFormat=\"yyyy-MM-dd\"\r\n          />\r\n          <DatePicker\r\n            selected={endDt}\r\n            onChange={date => setEndDate(date)}\r\n            isClearable\r\n            placeholderText=\"마감일\"\r\n            dateFormat=\"yyyy/MM/dd\"\r\n          />\r\n        </PickerWrapper>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","export const today = new Date().toISOString().substring(0, 10);\r\nexport const getFormatDate = date => {\r\n  // formate Date to String(yyyy-mm-dd)\r\n  if (!date) return null;\r\n  const yyyy = date.getFullYear();\r\n  let mm = 1 + date.getMonth();\r\n  mm = mm >= 10 ? mm : '0' + mm;\r\n  let dd = date.getDate();\r\n  dd = dd >= 10 ? dd : '0' + dd;\r\n  return yyyy + '-' + mm + '-' + dd;\r\n};\r\nexport const strToDate = str => {\r\n  // str = yyyy-mm-dd\r\n  const yy = str.substring(0, 4);\r\n  const mm = str.substring(5, 7);\r\n  const dd = str.substring(8);\r\n  return new Date(yy, mm - 1, dd);\r\n};\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled, { css } from 'styled-components';\r\nimport { TiPencil, TiPlus, TiTimes } from 'react-icons/ti';\r\nimport MberList from './components/MberList';\r\nimport TagList from './components/TagList';\r\nimport Calendar from './components/Calendar';\r\nimport Modal from '../../../components/Modal/Modal';\r\nimport { getFormatDate } from '../../../utils/utils';\r\nimport {\r\n  delTasklist,\r\n  changeTasklistTitle,\r\n  addTask,\r\n} from '../../../module/tasklists';\r\n\r\nconst TitleWrapper = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n  background: ${props => props.theme.layout.layoutBg1};\r\n  h4 {\r\n    width: 70%;\r\n    font-size: 0.9rem;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 75%;\r\n  padding: 3px 7px;\r\n  border: 2px solid ${props => props.theme.layout.mainColor};\r\n  border-radius: 3px;\r\n  outline: 0;\r\n`;\r\n\r\nconst TitleBtnWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.2rem;\r\n  svg {\r\n    margin-left: 8px;\r\n    &:nth-child(2) {\r\n      margin-left: 10px;\r\n      font-size: 1.3rem;\r\n    }\r\n    &:nth-child(3) {\r\n      font-size: 1.5rem;\r\n    }\r\n    &:hover {\r\n      background: #7bb0b9;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DoingWrapper = styled.div`\r\n  padding: 6px 10px;\r\n  background: #c0e0e5;\r\n  color: #333;\r\n  font-size: 0.75rem;\r\n`;\r\n\r\nconst CreateTask = styled.div`\r\n  display: ${props => (props.activeCreate ? 'block' : 'none')};\r\n  width: 100%;\r\n  padding: 0 10px 10px;\r\n  background: ${props => props.theme.layout.layoutBg1};\r\n  textarea {\r\n    width: 100%;\r\n    height: 65px;\r\n    padding: 5px 7px;\r\n    border: 2px solid ${props => props.theme.layout.mainColor};\r\n    border-radius: 3px;\r\n    border-bottom: 0;\r\n    outline: 0;\r\n    resize: none;\r\n  }\r\n`;\r\n\r\nconst CrBtnWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  margin-top: -10px;\r\n  padding: 5px;\r\n  background: white;\r\n  border: 2px solid ${props => props.theme.layout.mainColor};\r\n  border-radius: 3px;\r\n  border-top: 0;\r\n  ${props =>\r\n    props.activeDate &&\r\n    css`\r\n      position: relative;\r\n      padding-bottom: 35px;\r\n      .cr-btn-r {\r\n        position: absolute;\r\n        right: 5px;\r\n        top: 35px;\r\n      }\r\n    `}\r\n  .cr-btn-l {\r\n    display: flex;\r\n    align-items: center;\r\n    color: #868e96;\r\n    font-size: 1rem;\r\n    & > div {\r\n      margin: 2px 5px 0 0;\r\n    }\r\n    & > svg {\r\n      margin-right: 7px;\r\n      cursor: pointer;\r\n      &:first-of-type {\r\n        font-size: 1.2rem;\r\n      }\r\n      &:hover {\r\n        color: #656a70;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 3px 8px;\r\n  border: 0;\r\n  border-radius: 3px;\r\n  font-size: 0.78rem;\r\n  font-weight: bold;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ButtonCancel = styled(Button)`\r\n  color: #70767c;\r\n  &:hover {\r\n    background: #ccc;\r\n  }\r\n`;\r\n\r\nconst ButtonCreate = styled(Button)`\r\n  margin-left: 5px;\r\n  background: ${props => props.theme.layout.mainColor};\r\n  color: white;\r\n  &:hover {\r\n    background: #1d80a3;\r\n  }\r\n`;\r\n\r\nconst BadgeWrapper = styled.div`\r\n  position: relative;\r\n  .badge {\r\n    position: absolute;\r\n    right: 0;\r\n    top: -6px;\r\n    z-index: 10;\r\n    padding: 2px 4px;\r\n    border-radius: 4px;\r\n    color: white;\r\n    font-size: 0.5rem;\r\n    &.mber {\r\n      background: #6f777e;\r\n    }\r\n    &.priority {\r\n      background: #e03131;\r\n    }\r\n    &.important {\r\n      background: #3b5bdb;\r\n    }\r\n    &.notice {\r\n      background: #fcc419;\r\n    }\r\n  }\r\n  ${props =>\r\n    props.tag &&\r\n    css`\r\n      .badge {\r\n        background: ${props.theme.component[props.tag]};\r\n      }\r\n    `}\r\n`;\r\n\r\nconst Title = ({ tasklist, formMode, setFormMode, onToggle, onDelete }) => {\r\n  const { id } = tasklist;\r\n  const input = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!formMode) setTitle(tasklist.title);\r\n    else input.current.focus();\r\n  }, [formMode, tasklist.title, input]);\r\n\r\n  // 업무리스트 제목 관련\r\n  const [title, setTitle] = useState(tasklist.title);\r\n  const onChange = e => setTitle(e.target.value);\r\n  const handleTitle = () => {\r\n    const payload = {\r\n      id,\r\n      title,\r\n    };\r\n    dispatch(changeTasklistTitle(payload));\r\n    setFormMode(!formMode);\r\n  };\r\n\r\n  // 모달\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={isOpen} width={500} height={300} bg=\"lightgoldenrodyellow\">\r\n        <h4>⚠ [{title}] 을 정말로 삭제하시겠습니까?</h4>\r\n\r\n        <div>\r\n          <button type=\"button\" onClick={() => setIsOpen(!isOpen)}>\r\n            닫기\r\n          </button>\r\n          <button type=\"button\" onClick={() => onDelete(id)}>\r\n            삭제하기\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n      <TitleWrapper>\r\n        {!formMode ? (\r\n          <>\r\n            <h4>{title}</h4>\r\n            <TitleBtnWrapper>\r\n              <TiPencil role=\"button\" onClick={() => setFormMode(!formMode)} />\r\n              <TiPlus role=\"button\" onClick={() => onToggle('wrapper')} />\r\n              <TiTimes role=\"button\" onClick={() => setIsOpen(!isOpen)} />\r\n            </TitleBtnWrapper>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Input value={title} ref={input} onChange={onChange} />\r\n            <TitleBtnWrapper>\r\n              <TiPencil role=\"button\" onClick={handleTitle} />\r\n              <TiTimes role=\"button\" onClick={() => setFormMode(!formMode)} />\r\n            </TitleBtnWrapper>\r\n          </>\r\n        )}\r\n      </TitleWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Doing = ({ tasks }) => {\r\n  const undoneCnt = tasks\r\n    ? tasks.reduce((acc, cur) => acc + !cur.isDone, 0)\r\n    : 0;\r\n\r\n  return <DoingWrapper>진행 중인 업무 {undoneCnt}개</DoingWrapper>;\r\n};\r\n\r\nconst Header = ({ tasklist }) => {\r\n  const dispatch = useDispatch();\r\n  const { id, tasks } = tasklist;\r\n\r\n  // 업무리스트 제목 수정\r\n  // true: 수정, false: 조회\r\n  const [formMode, setFormMode] = useState(false);\r\n\r\n  // 업무리스트 삭제: 삭제 전 모달로 확인\r\n  const onDelete = id => dispatch(delTasklist(id));\r\n\r\n  // 업무 생성\r\n  // DOM 관리\r\n  const textarea = useRef();\r\n\r\n  // 활성화값 관리\r\n  const [activeCreate, setActiveCreate] = useState(false);\r\n  const [activeMber, setActiveMber] = useState(false);\r\n  const [activeTag, setActiveTag] = useState(false);\r\n  const [activeDate, setActiveDate] = useState(false);\r\n  // 선택값 관리\r\n  const [mberList, setMberList] = useState([]);\r\n  const [tag, setTag] = useState(null);\r\n  const [startDt, setStartDate] = useState(null);\r\n  const [endDt, setEndDate] = useState(null);\r\n\r\n  // 선택값 초기화\r\n  const resetState = () => {\r\n    setMberList([]);\r\n    setTag(null);\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    if (textarea.current) textarea.current.value = '';\r\n  };\r\n\r\n  const onToggle = type => {\r\n    if (type === 'wrapper') {\r\n      setActiveCreate(!activeCreate);\r\n      if (activeMber) setActiveMber(!activeMber);\r\n      if (activeTag) setActiveTag(!activeTag);\r\n      if (activeDate) setActiveDate(!activeDate);\r\n      resetState();\r\n    } else if (type === 'mber') {\r\n      setActiveMber(!activeMber);\r\n      if (activeTag) setActiveTag(!activeTag);\r\n      if (!startDt && !endDt && activeDate) setActiveDate(!activeDate);\r\n    } else if (type === 'tag') {\r\n      setActiveTag(!activeTag);\r\n      if (activeMber) setActiveMber(!activeMber);\r\n      if (!startDt && !endDt && activeDate) setActiveDate(!activeDate);\r\n    } else if (type === 'date') {\r\n      setActiveDate(!activeDate);\r\n      if (activeMber) setActiveMber(!activeMber);\r\n      if (activeTag) setActiveTag(!activeTag);\r\n    }\r\n  };\r\n\r\n  // 선택 멤버리스트값 관리\r\n  const handleMberList = mber => {\r\n    const findMber = mberList.find(m => m.mberNo === mber.mberNo);\r\n    if (findMber) {\r\n      setMberList(mberList.filter(m => m.mberNo !== mber.mberNo));\r\n    } else {\r\n      setMberList(mberList.concat(mber));\r\n    }\r\n    setActiveMber(!activeMber);\r\n  };\r\n\r\n  // 선택 태그값 관리\r\n  const handleTag = tagNm => {\r\n    if (tag === tagNm) {\r\n      setTag('');\r\n    } else {\r\n      setTag(tagNm);\r\n    }\r\n    setActiveTag(!activeTag);\r\n  };\r\n\r\n  const onCreate = () => {\r\n    const title = textarea.current;\r\n\r\n    // 유효성 검사\r\n    if (!title.value) {\r\n      alert('업무 이름을 입력하세요!');\r\n      title.focus();\r\n      return;\r\n    }\r\n    if (startDt && endDt && startDt > endDt) {\r\n      alert('마감일은 시작일보다 빠를 수 없습니다!');\r\n      setEndDate(null);\r\n      return;\r\n    }\r\n\r\n    const task = {\r\n      title: title.value,\r\n      isDone: false,\r\n      tag,\r\n      point: null,\r\n      checklist: [],\r\n      mberList,\r\n      startDt: getFormatDate(startDt),\r\n      endDt: getFormatDate(endDt),\r\n      finDt: null,\r\n    };\r\n    dispatch(addTask({ id, task }));\r\n\r\n    title.value = '';\r\n    resetState();\r\n    onToggle('wrapper');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title\r\n        tasklist={tasklist}\r\n        formMode={formMode}\r\n        setFormMode={setFormMode}\r\n        onToggle={onToggle}\r\n        onDelete={onDelete}\r\n      />\r\n      <Doing tasks={tasks} />\r\n      <CreateTask activeCreate={activeCreate}>\r\n        <textarea placeholder=\"새 업무 만들기\" ref={textarea}></textarea>\r\n        <CrBtnWrapper activeDate={activeDate}>\r\n          <div className=\"cr-btn-l\">\r\n            <BadgeWrapper>\r\n              {mberList.length > 0 && (\r\n                <span className=\"badge mber\">{mberList.length}</span>\r\n              )}\r\n              <MberList\r\n                onToggle={onToggle}\r\n                activeMber={activeMber}\r\n                selectedMberList={mberList}\r\n                handleMberList={handleMberList}\r\n              />\r\n            </BadgeWrapper>\r\n            <BadgeWrapper tag={tag}>\r\n              {tag && <span className=\"badge\">1</span>}\r\n              <TagList\r\n                onToggle={onToggle}\r\n                activeTag={activeTag}\r\n                tag={tag}\r\n                handleTag={handleTag}\r\n              />\r\n            </BadgeWrapper>\r\n            <Calendar\r\n              onToggle={onToggle}\r\n              activeDate={activeDate}\r\n              startDt={startDt}\r\n              endDt={endDt}\r\n              setStartDate={setStartDate}\r\n              setEndDate={setEndDate}\r\n            />\r\n          </div>\r\n          <div className=\"cr-btn-r\">\r\n            <ButtonCancel onClick={() => onToggle('wrapper')}>\r\n              취소\r\n            </ButtonCancel>\r\n            <ButtonCreate onClick={onCreate}>만들기</ButtonCreate>\r\n          </div>\r\n        </CrBtnWrapper>\r\n      </CreateTask>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 7px 10px 7px 0;\r\n  background: #f7f7f7;\r\n  /* border-top: 3px solid #ebebeb; */\r\n  color: gray;\r\n  font-size: 0.75rem;\r\n  text-align: right;\r\n  text-decoration: underline;\r\n  &:hover {\r\n    color: #333;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Bottom = ({ cnt, onToggle }) => {\r\n  return <Wrapper onClick={onToggle}>완료된 업무 {cnt}개 보기</Wrapper>;\r\n};\r\n\r\nexport default Bottom;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TagWrapper = styled.div`\r\n  display: inline-block;\r\n  padding: 4px 5px;\r\n  border-radius: 1rem;\r\n  background: ${props => props.tag && props.theme.component[props.tag]};\r\n  color: white;\r\n  font-size: 0.6rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Tag = ({ tag }) => {\r\n  return <TagWrapper tag={tag}>{tag}</TagWrapper>;\r\n};\r\n\r\nexport default Tag;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PointWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  span {\r\n    width: 7px;\r\n    height: 7px;\r\n    margin-left: 2px;\r\n    border: 1px solid ${props => props.theme.layout.layoutBg2};\r\n    border-radius: 7px;\r\n    &.isFull {\r\n      border: 0;\r\n      background: ${props => props.theme.layout.mainColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst renderSpan = point => {\r\n  const spanList = [];\r\n  if (point) {\r\n    for (let i = 0; i < 5; i++) {\r\n      if (i < point) spanList.push(<span key={i} className=\"isFull\"></span>);\r\n      else spanList.push(<span key={i}></span>);\r\n    }\r\n    return spanList;\r\n  } else return null;\r\n};\r\n\r\nconst Point = ({ point }) => {\r\n  const spanList = renderSpan(point);\r\n  return <PointWrapper>{spanList && spanList.map(item => item)}</PointWrapper>;\r\n};\r\n\r\nexport default Point;\r\n","import React, { useState, useRef } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { MdCheckBoxOutlineBlank, MdCheckBox, MdFace } from 'react-icons/md';\r\nimport { TiPencil, TiPlus, TiTimes } from 'react-icons/ti';\r\nimport { addChecklist, setTask } from '../../../../module/tasklists';\r\n\r\nconst Wrapper = styled.div`\r\n  border: 1px solid ${props => props.theme.layout.layoutBg2};\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst List = styled.li`\r\n  display: flex;\r\n  height: 30px;\r\n  border-radius: 3px;\r\n  border-bottom: 1px solid ${props => props.theme.layout.layoutBg2};\r\n  &:last-of-type {\r\n    border-bottom: 0;\r\n  }\r\n  background: #fff;\r\n  ${props =>\r\n    props.isSetting\r\n      ? css`\r\n          &:not(:last-of-type):hover {\r\n            background: pink;\r\n          }\r\n        `\r\n      : css`\r\n          &:hover {\r\n            background: #f7f7f7;\r\n          }\r\n        `}\r\n  & > div {\r\n    padding: 5px 10px;\r\n  }\r\n`;\r\n\r\nconst Chkbox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-right: 10px;\r\n  border-right: 3px double ${props => props.theme.component.priority};\r\n  color: ${props => props.theme.layout.outer};\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  &.addBtn:hover {\r\n    background: #f7f7f7;\r\n  }\r\n`;\r\n\r\nconst Chktxt = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 85%;\r\n  font-size: 0.8rem;\r\n  white-space: nowrap;\r\n  svg {\r\n    margin-right: 5px;\r\n    font-size: 1.3rem;\r\n  }\r\n  span {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n  &.addBtn:hover {\r\n    background: #f7f7f7;\r\n    input {\r\n      background: #f7f7f7;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 3px 7px;\r\n  border: 2px solid ${props => props.theme.layout.mainColor};\r\n  border: 0;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst Checklist = ({\r\n  isSetting,\r\n  tasklistId,\r\n  task,\r\n  checklist,\r\n  handleCheckList,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Add Checklist\r\n  const newTitleInput = useRef();\r\n  const [newTitle, setNewTitle] = useState('');\r\n  const onChange = e => {\r\n    setNewTitle(e.target.value);\r\n  };\r\n\r\n  const onCreate = () => {\r\n    // Validation Check\r\n    if (!newTitle) {\r\n      alert('체크리스트명을 입력해 주세요!');\r\n      newTitleInput.current.focus();\r\n      return;\r\n    }\r\n\r\n    dispatch(\r\n      addChecklist({\r\n        tasklistId,\r\n        task,\r\n        checklist: {\r\n          title: newTitle,\r\n          isDone: false,\r\n        },\r\n      }),\r\n    );\r\n    setNewTitle('');\r\n\r\n    // 체크리스트 생성 후 state.tasklists.task 도 업데이트\r\n    dispatch(\r\n      setTask({\r\n        tasklistId,\r\n        taskId: task.id,\r\n      }),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ul>\r\n        {checklist.map(item => (\r\n          <List key={item.id} isSetting={isSetting}>\r\n            <Chkbox>\r\n              {item.isDone ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\r\n            </Chkbox>\r\n            <Chktxt>\r\n              {item.assignedMber &&\r\n                React.createElement(item.assignedMber.profile)}\r\n              <span>{item.title}</span>\r\n            </Chktxt>\r\n          </List>\r\n        ))}\r\n        {isSetting && (\r\n          <List key=\"add\" isSetting={isSetting}>\r\n            <Chkbox className=\"addBtn\" role=\"button\" onClick={onCreate}>\r\n              <TiPlus />\r\n            </Chkbox>\r\n            <Chktxt className=\"addBtn\">\r\n              <Input\r\n                name=\"newTitle\"\r\n                value={newTitle}\r\n                onChange={onChange}\r\n                ref={newTitleInput}\r\n                placeholder=\"체크리스트 추가하기\"\r\n              />\r\n            </Chktxt>\r\n          </List>\r\n        )}\r\n      </ul>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Checklist;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { today, strToDate } from '../../../../utils/utils';\r\n\r\nconst DeadlineWrapper = styled.div`\r\n  margin: 10px 0 15px;\r\n  padding-left: 3px;\r\n  color: ${props => props.theme.layout.mainColor};\r\n  ${props =>\r\n    props.isOver &&\r\n    css`\r\n      color: ${props => props.theme.component.priority};\r\n    `};\r\n  ${props =>\r\n    props.isFin &&\r\n    css`\r\n      color: ${props => props.theme.layout.outer};\r\n    `};\r\n  font-size: 0.7rem;\r\n  font-weight: bold;\r\n`;\r\n\r\n/*\r\n  1. 시작일만 있는 경우: ~에 시작\r\n  2. 마감일만 있는 경우\r\n    a. 마감일 안 지난 경우: ~에 마감\r\n    b. 마감일 지난 경우: 마감일 ~일 지남\r\n  3. 둘 다 있는 경우\r\n    a. 마감일 안 지난 경우: 시작일 - 마감일\r\n    b. 마감일 지난 경우: 마감일 ~일 지남\r\n  4. 완료된 경우: ~에 완료\r\n*/\r\nconst handleDeadline = (startDt, endDt, finDt) => {\r\n  const start =\r\n    startDt && `${startDt.substring(5, 7)}월${startDt.substring(8)}일`;\r\n  const end = endDt && `${endDt.substring(5, 7)}월${endDt.substring(8)}일`;\r\n  const fin = finDt && `${finDt.substring(5, 7)}월${finDt.substring(8)}일`;\r\n  let result = '';\r\n\r\n  if (fin) {\r\n    return `${fin}에 완료`;\r\n  }\r\n  if (end && today > endDt) {\r\n    const diff = (strToDate(today) - strToDate(endDt)) / (1000 * 60 * 60 * 24);\r\n    return `마감일 ${diff}일 지남`;\r\n  }\r\n\r\n  if (start && !end) {\r\n    result = `${start}에 시작`;\r\n  } else if (!start && end) {\r\n    result = `${end}에 마감`;\r\n  } else {\r\n    result = `${start} - ${end}`;\r\n  }\r\n  return result;\r\n};\r\n\r\nconst Deadline = ({ startDt, endDt, finDt }) => {\r\n  const isOver = endDt && today > endDt ? true : false; // 기한 지남 여부\r\n  const isFin = finDt ? true : false; // 완료 여부\r\n  return (\r\n    <DeadlineWrapper isOver={isOver} isFin={isFin}>\r\n      {handleDeadline(startDt, endDt, finDt)}\r\n    </DeadlineWrapper>\r\n  );\r\n};\r\n\r\nexport default Deadline;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdCheckBoxOutlineBlank, MdCheckBox } from 'react-icons/md';\r\nimport { BsCardChecklist, BsChat } from 'react-icons/bs';\r\nimport { IoMdAttach } from 'react-icons/io';\r\nimport { toggleTask } from '../../../module/tasklists';\r\nimport { today } from '../../../utils/utils';\r\nimport Tag from './components/Tag';\r\nimport Point from './components/Point';\r\nimport Checklist from './components/Checklist';\r\nimport Deadline from './components/Deadline';\r\n\r\nconst TaskWrapper = styled.div`\r\n  display: ${props =>\r\n    (props.isDone && !props.openDone && 'none') ||\r\n    (props.isDone && props.openDone && 'block')};\r\n  margin-top: 3px;\r\n  padding: 20px 15px;\r\n  background: ${props => (props.isDone ? '#eee' : '#fff')};\r\n  color: #454545;\r\n  &:hover {\r\n    background: #f7f7f7;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n  display: flex;\r\n  margin-bottom: 15px;\r\n  h5 {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 82%;\r\n    margin-top: 10px;\r\n    svg {\r\n      margin-right: 5px;\r\n      color: ${props => props.theme.layout.layoutBg2};\r\n      font-size: 1.3rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst EtcWrapper = styled.div`\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n  padding-left: 3px;\r\n  color: ${props => props.theme.layout.outer};\r\n  font-size: 0.7rem;\r\n  span {\r\n    display: inherit;\r\n    margin-right: 10px;\r\n    &:not(:last-of-type) svg {\r\n      margin-right: 4px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MberWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst Task = ({ tasklistId, task, openDone, handlePopup }) => {\r\n  const {\r\n    id,\r\n    title,\r\n    isDone,\r\n    tag,\r\n    point,\r\n    checklist,\r\n    mberList,\r\n    startDt,\r\n    endDt,\r\n    finDt,\r\n  } = task;\r\n  const checklistDoneCnt = checklist.reduce((acc, cur) => acc + cur.isDone, 0);\r\n  const dispatch = useDispatch();\r\n\r\n  // 업무 완료 토글\r\n  const onToggleTask = () => {\r\n    const payload = {\r\n      id: tasklistId,\r\n      task: { id: task.id, finDt: task.finDt ? null : today },\r\n    };\r\n    dispatch(toggleTask(payload));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TaskWrapper\r\n        isDone={isDone}\r\n        openDone={openDone}\r\n        onClick={() => handlePopup(id)}\r\n      >\r\n        {tag && <Tag tag={tag} />}\r\n        <TitleWrapper>\r\n          <h5>\r\n            <span onClick={onToggleTask}>\r\n              {isDone ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\r\n            </span>\r\n            {title}\r\n          </h5>\r\n          <Point point={point} />\r\n        </TitleWrapper>\r\n        {checklist.length ? <Checklist checklist={checklist} /> : null}\r\n        {startDt || endDt || finDt ? (\r\n          <Deadline startDt={startDt} endDt={endDt} finDt={finDt} />\r\n        ) : null}\r\n        <EtcWrapper>\r\n          <span>\r\n            <BsCardChecklist />\r\n            {checklist.length ? `${checklistDoneCnt}/${checklist.length}` : 0}\r\n          </span>\r\n          {/* <span>\r\n          <BsChat /> {commentList.length}\r\n        </span>\r\n        <span>\r\n          <IoMdAttach /> {fileList.length}\r\n        </span> */}\r\n        </EtcWrapper>\r\n        <MberWrapper>\r\n          {mberList.map(mber =>\r\n            React.createElement(mber.profile, { key: mber.mberNo }, null),\r\n          )}\r\n        </MberWrapper>\r\n      </TaskWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Point from './Point';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  svg {\r\n    margin-right: 5px;\r\n    font-size: 1.2rem;\r\n  }\r\n  .btn {\r\n    cursor: pointer;\r\n    &:hover {\r\n      color: #656a70;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ListWrapper = styled.ul`\r\n  position: absolute;\r\n  top: 30px;\r\n  left: 0;\r\n  z-index: 10;\r\n  display: ${props => (props.activePoint ? 'block' : 'none')};\r\n  width: 120px;\r\n  height: 120px;\r\n  overflow-y: auto;\r\n  padding: 5px;\r\n  background: white;\r\n  font-size: 0.8rem;\r\n  li {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 5px;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background: #eee;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PointWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  span {\r\n    width: 7px;\r\n    height: 7px;\r\n    margin-left: 2px;\r\n    border: 1px solid ${props => props.theme.layout.layoutBg2};\r\n    border-radius: 7px;\r\n    &.isFull {\r\n      border: 0;\r\n      background: ${props => props.theme.layout.mainColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst PointList = ({ point, handlePoint, activePoint, onToggle }) => {\r\n  const renderPoints = () => {\r\n    const count = 5;\r\n    let renderList = [];\r\n\r\n    for (let i = 0; i <= count; i++) {\r\n      let spanList = [];\r\n\r\n      for (let j = 1; j <= count; j++) {\r\n        if (!i) {\r\n          // if span is all empty\r\n          spanList.push(<span key={`${i}-${j}`}></span>);\r\n        } else if (i === count) {\r\n          // if span is all full\r\n          spanList.push(<span key={`${i}-${j}`} className=\"isFull\"></span>);\r\n        } else {\r\n          if (i >= j) {\r\n            spanList.push(<span key={`${i}-${j}`} className=\"isFull\"></span>);\r\n          } else {\r\n            spanList.push(<span key={`${i}-${j}`}></span>);\r\n          }\r\n        }\r\n      }\r\n      renderList.push(\r\n        <li key={i} value={i} onClick={() => handlePoint(i)} role=\"button\">\r\n          <PointWrapper>{spanList}</PointWrapper>\r\n        </li>,\r\n      );\r\n    }\r\n\r\n    return renderList;\r\n  };\r\n  const options = renderPoints();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <Point point={point} />\r\n        <button type=\"button\" onClick={() => onToggle('point')}>\r\n          >\r\n        </button>\r\n      </div>\r\n      <ListWrapper activePoint={activePoint}>\r\n        {options && options.map(option => option)}\r\n      </ListWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PointList;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { TiPencil, TiTimes } from 'react-icons/ti';\r\nimport {\r\n  setTask,\r\n  clearTask,\r\n  changeTaskTitle,\r\n  delTask,\r\n  changeTaskSettings,\r\n} from '../../../module/tasklists';\r\nimport { getFormatDate, strToDate } from '../../../utils/utils';\r\nimport Modal from '../../../components/Modal/Modal';\r\nimport Calendar from './components/Calendar';\r\nimport MberList from './components/MberList';\r\nimport TagList from './components/TagList';\r\nimport Tag from './components/Tag';\r\nimport PointList from './components/PointList';\r\nimport Checklist from './components/Checklist';\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  left: ${props => props.left}px;\r\n  top: 50px;\r\n  width: 300px;\r\n  height: 500px;\r\n  background: #f7f7f7;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst CloseBtn = styled.button`\r\n  position: absolute;\r\n  right: -50px;\r\n  top: 10px;\r\n  z-index: -1;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 60px;\r\n  height: 50px;\r\n  padding-left: 20px;\r\n  background: pink;\r\n  border: 0;\r\n  border-radius: 8px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst TitleWrapper = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-bottom: 2px solid ${props => props.theme.layout.mainColor};\r\n  border-radius: 8px 8px 0 0;\r\n  h4 {\r\n    width: 70%;\r\n    font-size: 0.9rem;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  width: 75%;\r\n  padding: 3px 7px;\r\n  border: 2px solid ${props => props.theme.layout.mainColor};\r\n  border-radius: 3px;\r\n  outline: 0;\r\n`;\r\n\r\nconst TitleBtnWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.2rem;\r\n  svg {\r\n    margin-left: 8px;\r\n    &:nth-child(2) {\r\n      margin-left: 10px;\r\n      font-size: 1.3rem;\r\n    }\r\n    &:nth-child(3) {\r\n      font-size: 1.5rem;\r\n    }\r\n    &:hover {\r\n      background: #eee;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Setting = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Title = ({\r\n  openPopup,\r\n  setOpenPopup,\r\n  tasklistId,\r\n  formMode,\r\n  setFormMode,\r\n}) => {\r\n  const { task } = useSelector(state => state.tasklists);\r\n  const dispatch = useDispatch();\r\n\r\n  const input = useRef();\r\n  const [title, setTitle] = useState(task.title);\r\n\r\n  useEffect(() => {\r\n    if (!formMode) setTitle(task.title);\r\n    else input.current.focus();\r\n  }, [formMode, task, input]);\r\n\r\n  // Set payload about Ids\r\n  const payload = {\r\n    tasklistId,\r\n    taskId: task.id,\r\n  };\r\n\r\n  // Handle Task title\r\n  const onChange = e => setTitle(e.target.value);\r\n  const handleTitle = () => {\r\n    dispatch(\r\n      changeTaskTitle({\r\n        tasklistId,\r\n        taskId: task.id,\r\n        title,\r\n      }),\r\n    );\r\n    dispatch(setTask(payload));\r\n    setFormMode(!formMode);\r\n  };\r\n\r\n  // Delete Task\r\n  // Modal\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const onDelete = () => {\r\n    dispatch(delTask(payload));\r\n    dispatch(clearTask());\r\n    setOpenModal(!openModal);\r\n    setOpenPopup(!openPopup);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={openModal}\r\n        width={500}\r\n        height={300}\r\n        bg=\"lightgoldenrodyellow\"\r\n      >\r\n        <h4>⚠ [{title}] 을 정말로 삭제하시겠습니까?</h4>\r\n        <div>\r\n          <button type=\"button\" onClick={() => setOpenModal(!openModal)}>\r\n            닫기\r\n          </button>\r\n          <button type=\"button\" onClick={onDelete}>\r\n            삭제하기\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n      <TitleWrapper>\r\n        {!formMode ? (\r\n          <>\r\n            <h4>{title}</h4>\r\n            <TitleBtnWrapper>\r\n              <TiPencil role=\"button\" onClick={() => setFormMode(!formMode)} />\r\n              <TiTimes role=\"button\" onClick={() => setOpenModal(!openModal)} />\r\n            </TitleBtnWrapper>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <TitleInput value={title} ref={input} onChange={onChange} />\r\n            <TitleBtnWrapper>\r\n              <TiPencil role=\"button\" onClick={handleTitle} />\r\n              <TiTimes role=\"button\" onClick={() => setFormMode(!formMode)} />\r\n            </TitleBtnWrapper>\r\n          </>\r\n        )}\r\n      </TitleWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Dates = ({ task, tasklistId, onToggle, activeDate }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Convert String to Date: Calendar's format is only possible to date type\r\n  const startDate = task.startDt ? strToDate(task.startDt) : null;\r\n  const endDate = task.endDt ? strToDate(task.endDt) : null;\r\n\r\n  const [startDt, setStartDate] = useState(startDate);\r\n  const [endDt, setEndDate] = useState(endDate);\r\n\r\n  // Convert Date to String for setting task's state\r\n  const startStr = startDt ? getFormatDate(startDt) : null;\r\n  const endStr = endDt ? getFormatDate(endDt) : null;\r\n\r\n  useEffect(() => {\r\n    if (task.startDt !== startStr || task.endDt !== endStr) {\r\n      dispatch(\r\n        changeTaskSettings({\r\n          tasklistId,\r\n          task: {\r\n            ...task,\r\n            startDt: startStr,\r\n            endDt: endStr,\r\n          },\r\n        }),\r\n      );\r\n    }\r\n  }, [dispatch, startDt, endDt, endStr, startStr, task, tasklistId]);\r\n\r\n  return (\r\n    <Setting>\r\n      <p>기한</p>\r\n      <Calendar\r\n        onToggle={onToggle}\r\n        activeDate={activeDate}\r\n        startDt={startDt}\r\n        endDt={endDt}\r\n        setStartDate={setStartDate}\r\n        setEndDate={setEndDate}\r\n      />\r\n    </Setting>\r\n  );\r\n};\r\n\r\nconst Mbers = ({ task, tasklistId, onToggle, activeMber }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [mberList, setMberList] = useState(task.mberList);\r\n  const handleMberList = mber => {\r\n    const findMber = mberList.find(m => m.mberNo === mber.mberNo);\r\n    if (findMber) {\r\n      setMberList(mberList.filter(m => m.mberNo !== mber.mberNo));\r\n    } else {\r\n      setMberList(mberList.concat(mber));\r\n    }\r\n    onToggle('mber');\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Compare selectedMberList with task.mberList\r\n    let diff = 0;\r\n    for (let item of mberList) {\r\n      const existingMber = task.mberList.find(m => m.mberNo === item.mberNo);\r\n      if (existingMber) diff++;\r\n    }\r\n\r\n    // If find diffrence, Change task state!\r\n    if (diff) {\r\n      dispatch(\r\n        changeTaskSettings({\r\n          tasklistId,\r\n          task: {\r\n            ...task,\r\n            mberList,\r\n          },\r\n        }),\r\n      );\r\n    }\r\n  }, [dispatch, mberList, task, tasklistId]);\r\n\r\n  return (\r\n    <Setting>\r\n      <p>배정 멤버</p>\r\n      <ul>\r\n        {mberList.length > 0 &&\r\n          mberList.map(mber => (\r\n            <li key={mber.mberNo}>\r\n              {React.createElement(mber.profile)}\r\n              {mber.mberNm}\r\n            </li>\r\n          ))}\r\n      </ul>\r\n      <MberList\r\n        onToggle={onToggle}\r\n        activeMber={activeMber}\r\n        selectedMberList={mberList}\r\n        handleMberList={handleMberList}\r\n      />\r\n    </Setting>\r\n  );\r\n};\r\n\r\nconst Tags = ({ task, tasklistId, activeTag, onToggle }) => {\r\n  const dispatch = useDispatch();\r\n  const [tag, setTag] = useState(task.tag);\r\n\r\n  const handleTag = tagNm => {\r\n    if (tag === tagNm) {\r\n      setTag('');\r\n    } else {\r\n      setTag(tagNm);\r\n    }\r\n    onToggle('tag');\r\n  };\r\n\r\n  useEffect(() => {\r\n    // If find diffrence, Change task state!\r\n    if (tag !== task.tag) {\r\n      dispatch(\r\n        changeTaskSettings({\r\n          tasklistId,\r\n          task: {\r\n            ...task,\r\n            tag,\r\n          },\r\n        }),\r\n      );\r\n    }\r\n  }, [dispatch, tag, task, tasklistId]);\r\n\r\n  return (\r\n    <Setting>\r\n      <p>태그</p>\r\n      {tag && <Tag tag={tag} />}\r\n      <TagList\r\n        onToggle={onToggle}\r\n        activeTag={activeTag}\r\n        tag={tag}\r\n        handleTag={handleTag}\r\n      />\r\n    </Setting>\r\n  );\r\n};\r\n\r\nconst Points = ({ task, tasklistId, activePoint, onToggle }) => {\r\n  const dispatch = useDispatch();\r\n  const [point, setPoint] = useState(task.point ? task.point : 0);\r\n\r\n  const handlePoint = point => {\r\n    setPoint(point);\r\n    onToggle('point');\r\n  };\r\n\r\n  useEffect(() => {\r\n    // If find diffrence, Change task state!\r\n    if (point !== task.point) {\r\n      dispatch(\r\n        changeTaskSettings({\r\n          tasklistId,\r\n          task: {\r\n            ...task,\r\n            point,\r\n          },\r\n        }),\r\n      );\r\n    }\r\n  }, [dispatch, point, task, tasklistId]);\r\n\r\n  return (\r\n    <Setting>\r\n      <p>포인트</p>\r\n      <PointList\r\n        point={point}\r\n        handlePoint={handlePoint}\r\n        activePoint={activePoint}\r\n        onToggle={onToggle}\r\n      />\r\n    </Setting>\r\n  );\r\n};\r\n\r\n// 미적용\r\nconst Checklists = ({ task, tasklistId }) => {\r\n  const dispatch = useDispatch();\r\n  const [checklist, setChecklist] = useState(task.checklist);\r\n\r\n  const handleCheckList = chk => {\r\n    const findChk = checklist.find(c => c.chkNo === chk.chkNo);\r\n    if (findChk) {\r\n      setChecklist(checklist.filter(c => c.chkNo !== chk.chkNo));\r\n    } else {\r\n      setChecklist(checklist.concat(chk));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Compare checklist with task.checklist\r\n    let diff = 0;\r\n    for (let item of checklist) {\r\n      const existing = task.checklist.find(c => c.chkNo === item.chkNo);\r\n      if (existing) diff++;\r\n    }\r\n\r\n    // If find diffrence, Change task state!\r\n    if (diff) {\r\n      dispatch(\r\n        changeTaskSettings({\r\n          tasklistId,\r\n          task: {\r\n            ...task,\r\n            checklist,\r\n          },\r\n        }),\r\n      );\r\n    }\r\n  }, [dispatch, checklist, task, tasklistId]);\r\n\r\n  return (\r\n    <Setting>\r\n      <Checklist\r\n        isSetting={true}\r\n        tasklistId={tasklistId}\r\n        task={task}\r\n        checklist={checklist}\r\n        handleCheckList={handleCheckList}\r\n      />\r\n    </Setting>\r\n  );\r\n};\r\n\r\nconst SidePopup = ({ openPopup, setOpenPopup, tasklistId }) => {\r\n  const { task } = useSelector(state => state.tasklists);\r\n  const wrapper = useRef();\r\n  console.log('Sidepopup', task);\r\n\r\n  // Set popup's position\r\n  let interval;\r\n  let left = window.innerWidth - 450;\r\n  const setPosition = () => {\r\n    left = window.innerWidth - 450;\r\n    wrapper.current.style.left = `${left}px`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    interval = setInterval(setPosition, 1000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  // Set task title's mode\r\n  const [formMode, setFormMode] = useState(false);\r\n\r\n  // States about activation\r\n  const [activeDate, setActiveDate] = useState(false);\r\n  const [activeMber, setActiveMber] = useState(false);\r\n  const [activeTag, setActiveTag] = useState(false);\r\n  const [activePoint, setaActivePoint] = useState(false);\r\n\r\n  const handleActiveStates = type => {\r\n    if (type !== 'date' && activeDate) setActiveDate(!activeDate);\r\n    else if (type !== 'mber' && activeMber) setActiveMber(!activeMber);\r\n    else if (type !== 'tag' && activeTag) setActiveTag(!activeTag);\r\n    else if (type !== 'point' && activePoint) setaActivePoint(!activePoint);\r\n  };\r\n\r\n  const onToggle = type => {\r\n    if (type === 'date') {\r\n      setActiveDate(!activeDate);\r\n      handleActiveStates(type);\r\n    } else if (type === 'mber') {\r\n      setActiveMber(!activeMber);\r\n      handleActiveStates(type);\r\n    } else if (type === 'tag') {\r\n      setActiveTag(!activeTag);\r\n      handleActiveStates(type);\r\n    } else if (type === 'point') {\r\n      setaActivePoint(!activePoint);\r\n      handleActiveStates(type);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper ref={wrapper} left={left}>\r\n      <CloseBtn onClick={() => setOpenPopup(!openPopup)}>닫기</CloseBtn>\r\n      <Title\r\n        openPopup={openPopup}\r\n        setOpenPopup={setOpenPopup}\r\n        tasklistId={tasklistId}\r\n        formMode={formMode}\r\n        setFormMode={setFormMode}\r\n      />\r\n      <Dates\r\n        task={task}\r\n        tasklistId={tasklistId}\r\n        activeDate={activeDate}\r\n        onToggle={onToggle}\r\n      />\r\n      <Mbers\r\n        task={task}\r\n        tasklistId={tasklistId}\r\n        activeMber={activeMber}\r\n        onToggle={onToggle}\r\n      />\r\n      <Tags\r\n        task={task}\r\n        tasklistId={tasklistId}\r\n        activeTag={activeTag}\r\n        onToggle={onToggle}\r\n      />\r\n      <Points\r\n        task={task}\r\n        tasklistId={tasklistId}\r\n        activePoint={activePoint}\r\n        onToggle={onToggle}\r\n      />\r\n      {/* <Checklists task={task} tasklistId={tasklistId} /> */}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SidePopup;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { setTask } from '../../../module/tasklists';\r\nimport Header from './Header';\r\nimport Bottom from './Bottom';\r\nimport Task from './Task';\r\nimport SidePopup from './SidePopup';\r\n\r\nconst Article = styled.article`\r\n  width: 300px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst TaskList = styled.div`\r\n  max-height: 600px;\r\n  overflow-y: auto;\r\n  background: #f7f7f7;\r\n  & > div:first-of-type {\r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nconst Tasklist = ({ tasklist }) => {\r\n  const { tasks } = tasklist;\r\n  const undoneList = tasks ? tasks.filter(item => !item.isDone) : []; // 진행 중인 업무\r\n  const doneList = tasks ? tasks.filter(item => item.isDone) : []; // 완료된 업무\r\n\r\n  // 완료된 업무 보기\r\n  const [openDone, setOpenDone] = useState(false);\r\n  const onToggle = () => setOpenDone(!openDone);\r\n\r\n  // 업무 선택 -> 수정팝업 오픈\r\n  const dispatch = useDispatch();\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n  const handlePopup = id => {\r\n    dispatch(\r\n      setTask({\r\n        tasklistId: tasklist.id,\r\n        taskId: id,\r\n      }),\r\n    );\r\n    setOpenPopup(!openPopup);\r\n  };\r\n\r\n  return (\r\n    <Article>\r\n      {openPopup && (\r\n        <SidePopup\r\n          openPopup={openPopup}\r\n          setOpenPopup={setOpenPopup}\r\n          tasklistId={tasklist.id}\r\n        />\r\n      )}\r\n      <Header tasklist={tasklist} />\r\n      <TaskList>\r\n        {undoneList.map(task => (\r\n          <Task\r\n            key={task.id}\r\n            tasklistId={tasklist.id}\r\n            task={task}\r\n            handlePopup={handlePopup}\r\n          />\r\n        ))}\r\n        {doneList.map(task => (\r\n          <Task\r\n            key={task.id}\r\n            tasklistId={tasklist.id}\r\n            task={task}\r\n            openDone={openDone}\r\n            handlePopup={handlePopup}\r\n          />\r\n        ))}\r\n      </TaskList>\r\n      <Bottom cnt={doneList.length} onToggle={onToggle} />\r\n    </Article>\r\n  );\r\n};\r\n\r\nexport default Tasklist;\r\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { TiPlus, TiTimes } from 'react-icons/ti';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTasklist } from '../../../module/tasklists';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 300px;\r\n  height: 44px;\r\n  padding: 10px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst ViewWrapper = styled(Wrapper)`\r\n  background: ${props => props.theme.layout.layoutBg2};\r\n  color: #454545;\r\n  &:hover {\r\n    background: ${props => props.theme.layout.mainColor};\r\n    color: #fff;\r\n  }\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  h4 {\r\n    width: 70%;\r\n    margin-left: 5px;\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nconst FormWrapper = styled(Wrapper)`\r\n  background: ${props => props.theme.layout.layoutBg1};\r\n  color: #454545;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 75%;\r\n  padding: 3px 7px;\r\n  border: 2px solid ${props => props.theme.layout.mainColor};\r\n  border-radius: 3px;\r\n  outline: 0;\r\n`;\r\n\r\nconst HeaderBtnWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  width: 25%;\r\n  font-size: 1.2rem;\r\n  svg {\r\n    margin-left: 8px;\r\n    font-size: 1.3rem;\r\n    &:last-of-type {\r\n      font-size: 1.5rem;\r\n    }\r\n    &:hover {\r\n      background: #7bb0b9;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst List = ({ isActive, setIsActive }) => {\r\n  const input = useRef();\r\n\r\n  useEffect(() => {\r\n    if (isActive) {\r\n      const title = input.current;\r\n      title.value = '';\r\n      title.focus();\r\n    }\r\n  }, [isActive]);\r\n\r\n  // 리스트 생성\r\n  const dispatch = useDispatch();\r\n  const [title, setTitle] = useState('');\r\n  const onChange = e => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const onCreate = useCallback(() => {\r\n    if (!title) {\r\n      alert('리스트 제목을 입력하세요!');\r\n      return;\r\n    }\r\n    dispatch(addTasklist(title));\r\n    setTitle('');\r\n    setIsActive(!isActive);\r\n  }, [title]);\r\n\r\n  return (\r\n    <>\r\n      {isActive ? (\r\n        <FormWrapper>\r\n          <Input\r\n            placeholder=\"리스트 제목\"\r\n            value={title}\r\n            onChange={onChange}\r\n            ref={input}\r\n          />\r\n          <HeaderBtnWrapper>\r\n            <TiPlus role=\"button\" onClick={onCreate} />\r\n            <TiTimes role=\"button\" onClick={() => setIsActive(!isActive)} />\r\n          </HeaderBtnWrapper>\r\n        </FormWrapper>\r\n      ) : (\r\n        <ViewWrapper role=\"button\" onClick={() => setIsActive(!isActive)}>\r\n          <TiPlus />\r\n          <h4>업무리스트 추가</h4>\r\n        </ViewWrapper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst AddTaskList = () => {\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  return <List isActive={isActive} setIsActive={setIsActive} />;\r\n};\r\n\r\nexport default AddTaskList;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Post from '../../components/Layout/Post';\r\nimport Tasklist from './Tasklist/index';\r\nimport AddTaskList from './Tasklist/AddTaskList';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  width: fit-content;\r\n  height: 100%;\r\n  border: 1px solid;\r\n`;\r\n\r\nconst TasklistWrapper = () => {\r\n  const { tasklists } = useSelector(state => state.tasklists);\r\n\r\n  return (\r\n    <Post fixed={true}>\r\n      <h3>업무리스트</h3>\r\n      <Wrapper>\r\n        {tasklists.map(tasklist => (\r\n          <Tasklist key={tasklist.id} tasklist={tasklist} />\r\n        ))}\r\n        <AddTaskList />\r\n      </Wrapper>\r\n    </Post>\r\n  );\r\n};\r\n\r\nexport default TasklistWrapper;\r\n","import React from 'react';\r\nimport { useRouteMatch, Switch, Route } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport Content from '../../components/Layout/Content';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Sidebar from '../../components/Layout/Sidebar';\r\nimport Card from '../../components/Layout/Card';\r\nimport MainMenu from '../../components/Menu/MainMenu';\r\nimport SubMenu from '../../components/Menu/SubMenu';\r\nimport ChangeTheme from './ChangeTheme';\r\nimport TasklistWrapper from './Tasklist';\r\n\r\nconst IndexWrapper = styled.div`\r\n  display: flex;\r\n  padding: 50px;\r\n  border: 50px solid #eeeeeeb8;\r\n  font-family: 'Black Han Sans', sans-serif;\r\n  img {\r\n    width: 50%;\r\n    margin-right: 50px;\r\n  }\r\n  h3, p {\r\n    writing-mode: vertical-rl;\r\n  }\r\n  h3 {\r\n    height: fit-content;\r\n    margin-right: 20px;\r\n    padding: 10px 5px;\r\n    background: #000;\r\n    color: #fff;\r\n    font-size: 2.5rem;\r\n  }\r\n  p {\r\n    line-height: 1.6;\r\n    font-size: 2rem;\r\n  }\r\n  span {\r\n    color: #666;\r\n    font-family: 'Kirang Haerang', cursive;\r\n    font-size: 2.3rem;\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst Workbox = () => {\r\n  const match = useRouteMatch();\r\n  const list = [\r\n    { id: 1, title: '🎨테마 변경하기', url: '/changeTheme' },\r\n    { id: 2, title: '✅업무리스트', url: '/tasklist' },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <Sidebar>\r\n        <Card>\r\n          <SubMenu title=\"워크박스\" list={list} />\r\n        </Card>\r\n      </Sidebar>\r\n      <Content>\r\n        <Card>\r\n          <Switch>\r\n            <Route exact path={match.path}>\r\n              <IndexWrapper>\r\n                <img\r\n                  src={\r\n                    process.env.PUBLIC_URL + '/resources/img/workbox-main.svg'\r\n                  }\r\n                  alt=\"Workbox Main\"\r\n                />\r\n                <h3>재밌게 토이프로젝트 만드는 방법</h3>\r\n                <p>첫 번째 <span>참신</span>한 아이디어 떠올리기</p>\r\n                <p>두 번째 <span>뚱땅뚱땅</span> 만들기</p>\r\n                <p>세 번째 <span>삽질</span>하기</p>\r\n                <p>네 번째 <span>뚱땅뚱땅</span> 만들기</p>\r\n                <p>다섯 번째 <span>삽질</span>하기</p>\r\n                <p>...</p>\r\n              </IndexWrapper>\r\n            </Route>\r\n            <Route path={`${match.path}/changeTheme`}>\r\n              <ChangeTheme />\r\n            </Route>\r\n            <Route path={`${match.path}/tasklist`}>\r\n              <TasklistWrapper />\r\n            </Route>\r\n          </Switch>\r\n        </Card>\r\n      </Content>\r\n      <MainMenu />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Workbox;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Menu from './components/Menu/MainMenu';\r\nimport Home from './pages/Home';\r\nimport Diary from './pages/Diary';\r\nimport Workbox from './pages/Workbox';\r\n\r\nconst App = () => {\r\n  const { layout, component } = useSelector(state => state.palette);\r\n\r\n  return (\r\n    <ThemeProvider\r\n      theme={{\r\n        layout,\r\n        component,\r\n      }}\r\n    >\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/diary\">\r\n          <Diary />\r\n        </Route>\r\n        <Route path=\"/workbox\">\r\n          <Workbox />\r\n        </Route>\r\n        <Route path=\"/photo\">\r\n          <Photo />\r\n        </Route>\r\n        <Route path=\"/gbook\">\r\n          <Gbook />\r\n        </Route>\r\n      </Switch>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nfunction Photo() {\r\n  return (\r\n    <div>\r\n      Photo\r\n      <Menu />\r\n    </div>\r\n  );\r\n}\r\nfunction Gbook() {\r\n  return (\r\n    <div>\r\n      Gbook\r\n      <Menu />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from 'redux';\r\nimport palette from './palette';\r\nimport formMode from './formMode';\r\nimport boards from './boards';\r\nimport tasklists from './tasklists';\r\n\r\nconst rootReducer = combineReducers({\r\n  palette,\r\n  formMode,\r\n  boards,\r\n  tasklists,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './module';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}