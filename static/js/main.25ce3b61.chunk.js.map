{"version":3,"sources":["components/Menu/MainMenu.js","module/layout.js","components/Layout/Layout.js","components/Layout/Sidebar.js","components/Layout/Content.js","components/Layout/Card.js","pages/Home.js","module/formMode.js","components/Menu/SubMenu.js","components/Layout/Post.js","components/Modal/Modal.js","api/boards.js","pages/Diary/FormWrapper.js","lib/asyncUtils.js","api/sessions.js","module/boards.js","pages/Diary/index.js","module/palette.js","pages/Workbox/ChangeTheme.js","module/tasklists.js","pages/Workbox/Tasklist/components/MberList.js","pages/Workbox/Tasklist/components/TagList.js","pages/Workbox/Tasklist/components/Calendar.js","utils/utils.js","pages/Workbox/Tasklist/Header.js","pages/Workbox/Tasklist/Bottom.js","pages/Workbox/Tasklist/components/Tag.js","pages/Workbox/Tasklist/components/Point.js","pages/Workbox/Tasklist/components/Checklist.js","pages/Workbox/Tasklist/components/Deadline.js","pages/Workbox/Tasklist/Task.js","pages/Workbox/Tasklist/components/PointList.js","pages/Workbox/Tasklist/SidePopup.js","pages/Workbox/Tasklist/index.js","pages/Workbox/Tasklist/AddTaskList.js","pages/Workbox/Tasklist.js","pages/Workbox/index.js","App.js","reportWebVitals.js","module/index.js","index.js"],"names":["Nav","styled","nav","props","theme","layout","mainColor","MainMenu","exact","to","activeClassName","SET_LAYOUT","initialState","Wrapper","div","BorderWrapper","layoutBg1","layoutBorder1","BgWrapper","layoutBg2","layoutBorder2","Layout","children","layout1","useSelector","state","useDispatch","useRef","layout2","ref","SidebarBlock","Sidebar","ContentBlock","headerColor","Content","CardBlock","cardBorder","cardBg","Card","FlexWrapper","ContentSection","section","ProfileSection","LinkTitle","p","Home","src","process","alt","onClick","window","location","href","className","SET_FORM_MODE","setFormMode","payload","type","ListDiv","textColor","SubMenu","title","list","match","useRouteMatch","dispatch","isForm","formMode","handleMode","url","map","item","child","id","Article","article","fullHeight","Post","fixed","Background","isOpen","ModalWrapper","width","height","bg","Modal","getBoards","a","axios","get","response","data","addBoard","board","post","Form","form","FormWrapper","button","regusr","passwd","bbs_ctgry1","bbs_ctgry2","content","useState","setBoard","onChange","e","target","name","value","onSubmit","preventDefault","confirm","apiBoards","then","success","alert","catch","err","getPasswd","stateUtils","prevData","loading","error","handleAsyncActions","key","keepData","SUCCESS","ERROR","action","GET_BOARDS_ALL","GET_BOARDS_ALL_SUCCESS","GET_BOARDS_ALL_ERROR","boards","initialData","console","log","PostWrapper","Button","ButtonWrapper","Diary","setPasswd","setRegusr","handleRegInfo","setIsOpen","handleModal","placeholder","apiSessions","path","SET_COLOR","outer","component","priority","important","notice","ThemeWrapper","TabList","ul","Tab","li","ChangeWrapper","ColorWrapper","Color","color","ChangeTheme","palette","tabList","index","push","setTarget","hexColor","setHexColor","getRandomHexColor","hex","i","Math","floor","random","tab","zIndex","length","newHexColor","handleLayoutColor","tasklistId","taskId","checklistId","ADD_TASKLIST","DEL_TASKLIST","CHANGE_TASKLIST_TITLE","SET_TASK","CLEAR_TASK","ADD_TASK","DEL_TASK","TOGGLE_TASK","CHANGE_TASK_TITLE","CHANGE_TASK_SETTINGS","ADD_CHECKLIST","setTask","changeTaskSettings","tasklists","task","ListWrapper","activeMber","MberList","onToggle","selectedMberList","handleMberList","mberList","mberNo","mberId","mberNm","profile","MdFace","MdSentimentNeutral","tempMberList","mber","find","m","isSelected","role","fm","React","createElement","activeTag","TagWrapper","tag","Tag","TagList","handleTag","tempTagList","tagNo","tagNm","t","PickerWrapper","Calendar","activeDate","startDt","endDt","setStartDate","setEndDate","selected","date","isClearable","placeholderText","dateFormat","today","Date","toISOString","substring","getFormatDate","yyyy","getFullYear","mm","getMonth","dd","getDate","strToDate","str","yy","TitleWrapper","header","Input","input","TitleBtnWrapper","DoingWrapper","CreateTask","activeCreate","CrBtnWrapper","css","ButtonCancel","ButtonCreate","BadgeWrapper","Title","tasklist","onDelete","useEffect","current","focus","setTitle","changeTasklistTitle","Doing","tasks","undoneCnt","reduce","acc","cur","isDone","Header","textarea","setActiveCreate","setActiveMber","setActiveTag","setActiveDate","setMberList","setTag","resetState","findMber","filter","concat","point","checklist","finDt","Bottom","cnt","PointWrapper","Point","spanList","renderSpan","List","isSetting","Chkbox","Chktxt","Checklist","handleCheckList","newTitleInput","newTitle","setNewTitle","assignedMber","DeadlineWrapper","isOver","isFin","handleDeadline","start","end","fin","diff","Deadline","TaskWrapper","openDone","EtcWrapper","MberWrapper","Task","handlePopup","checklistDoneCnt","toggleTask","activePoint","PointList","handlePoint","options","renderList","j","renderPoints","option","left","CloseBtn","TitleInput","Setting","openPopup","setOpenPopup","openModal","setOpenModal","delTask","changeTaskTitle","Dates","startDate","endDate","startStr","endStr","Mbers","Tags","Points","setPoint","SidePopup","interval","wrapper","innerWidth","setPosition","style","setInterval","clearInterval","setaActivePoint","handleActiveStates","TaskList","Tasklist","undoneList","doneList","setOpenDone","ViewWrapper","HeaderBtnWrapper","isActive","setIsActive","onCreate","useCallback","AddTaskList","TasklistWrapper","Index","Workbox","Photo","Gbook","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","reducer","store","createStore","composeWithDevTools","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.25ce3b61.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Nav = styled.nav`\r\n  margin: 40px 0 0 -10px;\r\n  ul {\r\n    a {\r\n      display: inline-block;\r\n      width: 85px;\r\n      margin-bottom: 2px;\r\n      padding: 10px 10px 10px 15px;\r\n      background: ${props => props.theme.layout.mainColor};\r\n      border: 1px solid #a5a5a5;\r\n      border-radius: 10px;\r\n      color: #fff;\r\n      font-size: 0.9rem;\r\n      text-align: center;\r\n      &.selected {\r\n        background: #fff;\r\n        color: #333;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction MainMenu() {\r\n  return (\r\n    <Nav>\r\n      <ul>\r\n        <li>\r\n          <NavLink exact to=\"/\" activeClassName=\"selected\">\r\n            홈\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/diary\" activeClassName=\"selected\">\r\n            다이어리\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/workbox\" activeClassName=\"selected\">\r\n            워크박스\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/photo\" activeClassName=\"selected\">\r\n            사진첩\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/gbook\" activeClassName=\"selected\">\r\n            방명록\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default MainMenu;\r\n","const SET_LAYOUT = 'layout/SET_LAYOUT';\r\n\r\nexport const setLayout = payload => ({ type: SET_LAYOUT, payload });\r\n\r\nconst initialState = {};\r\n\r\nexport default function layout(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_LAYOUT:\r\n      const { key, value } = action.payload;\r\n      return  state[key] ? { ...state } : { ...state, [key]: value}; \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { setLayout } from '../../module/layout';\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 0 20px;\r\n`;\r\n\r\nconst BorderWrapper = styled.div`\r\n  height: 95vh;\r\n  padding: 25px;\r\n  background: ${props => props.theme.layout.layoutBg1};\r\n  border: 1px solid ${props => props.theme.layout.layoutBorder1};\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst BgWrapper = styled.div`\r\n  display: flex;\r\n  height: 100%;\r\n  padding: 20px 8px;\r\n  background: ${props => props.theme.layout.layoutBg2};\r\n  border: 2px dashed ${props => props.theme.layout.layoutBorder2};\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Layout = ({ children }) => {\r\n  const { layout } = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n  const layout1 = useRef();\r\n  const layout2 = useRef();\r\n\r\n  /* useEffect(() => {\r\n    if(!layout.layout1) {\r\n      dispatch(setLayout({\r\n        key: 'layout1',\r\n        value: layout1.current\r\n      }));\r\n    }\r\n    if(!layout.layout2) {\r\n      dispatch(setLayout({\r\n        key: 'layout2',\r\n        value: layout2.current\r\n      }));\r\n    }\r\n  }, [layout, dispatch, layout1]); */\r\n\r\n  return (\r\n    <Wrapper>\r\n      <BorderWrapper ref={layout1}>\r\n        <BgWrapper ref={layout2}>{children}</BgWrapper>\r\n      </BorderWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SidebarBlock = styled.div`\r\n  width: 25%;\r\n  margin-right: 8px;\r\n  & > ul {\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 0.8rem;\r\n    line-height: 1.4;\r\n    li:first-of-type {\r\n      padding-right: 10px;\r\n      margin-right: 10px;\r\n      border-right: 1px solid;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Sidebar = ({ children }) => {\r\n  return (\r\n    <SidebarBlock>\r\n      <ul>\r\n        <li>TODAY 0</li>\r\n        <li>TOTAL 0</li>\r\n      </ul>\r\n      {children}\r\n    </SidebarBlock>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ContentBlock = styled.div`\r\n  z-index: 10;\r\n  width: 68%;\r\n  h1 {\r\n    color: ${props => props.theme.layout.headerColor};\r\n    font-weight: bold;\r\n    font-size: 1.1rem;\r\n  }\r\n`;\r\n\r\nconst Content = ({ children }) => {\r\n  return (\r\n    <ContentBlock>\r\n      <h1>Danbi Miniportfoly</h1>\r\n      {children}\r\n    </ContentBlock>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CardBlock = styled.div`\r\n  overflow-y: auto;\r\n  width: 100%;\r\n  height: 96%;\r\n  margin: 10px 0 5px;\r\n  padding: 20px;\r\n  border: 1px solid ${props => props.theme.layout.cardBorder};\r\n  border-radius: 10px;\r\n  background: ${props => props.theme.layout.cardBg};\r\n  section {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst Card = ({ children }) => {\r\n  return <CardBlock>{children}</CardBlock>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Layout from '../components/Layout/Layout';\r\nimport Sidebar from '../components/Layout/Sidebar';\r\nimport Content from '../components/Layout/Content';\r\nimport Card from '../components/Layout/Card';\r\nimport MainMenu from '../components/Menu/MainMenu';\r\nimport { MdMailOutline, MdLocationOn, MdPhoneIphone } from 'react-icons/md';\r\n\r\nconst FlexWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n`;\r\n\r\nconst ContentSection = styled.section`\r\n  height: fit-content !important;\r\n  h2 {\r\n    margin-bottom: 10px;\r\n    font-weight: bold;\r\n    color: ${props => props.theme.layout.mainColor};\r\n  }\r\n  &:first-of-type {\r\n    div {\r\n      width: 100%;\r\n      height: 250px;\r\n      background: lightblue;\r\n      border: 1px solid gray;\r\n    }\r\n  }\r\n  &:last-of-type {\r\n    h2 {\r\n      border-bottom: 1px dashed gray;\r\n      line-height: 1.4;\r\n    }\r\n    div {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n  ul {\r\n    line-height: 1.8;\r\n    li {\r\n      height: 30px;\r\n      border-bottom: 1px dashed gray;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ProfileSection = styled.section`\r\n  height: fit-content !important;\r\n  &:first-of-type {\r\n    p {\r\n      margin: 10px 0;\r\n    }\r\n  }\r\n  &:last-of-type {\r\n    padding-top: 10px;\r\n    border-top: 1px dashed gray;\r\n    font-size: 0.9rem;\r\n    p {\r\n      display: flex;\r\n      align-items: center;\r\n      &:not(:first-of-type) {\r\n        margin: 5px 0;\r\n      }\r\n    }\r\n    svg {\r\n      margin-right: 3px;\r\n      color: #666;\r\n    }\r\n  }\r\n  img {\r\n    width: 100%;\r\n    height: auto;\r\n    object-fit: cover;\r\n  }\r\n  .my-name {\r\n    color: ${props => props.theme.layout.mainColor};\r\n    font-size: 1rem;\r\n    font-weight: bold;\r\n  }\r\n  .my-sex,\r\n  .my-brthdy {\r\n    color: #9e9e9e;\r\n    font-size: 0.85rem;\r\n  }\r\n  .my-sex {\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n\r\nconst LinkTitle = styled.p`\r\n  &:hover {\r\n    color: ${props => props.theme.layout.mainColor};\r\n  }\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Home = () => {\r\n  const goGithub = () => {\r\n    window.location.href = 'https://github.com/danbiilee';\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Sidebar>\r\n        <Card>\r\n          <FlexWrapper>\r\n            <ProfileSection>\r\n              <img\r\n                src={process.env.PUBLIC_URL + '/resources/img/profile.jpg'}\r\n                alt=\"profile\"\r\n              />\r\n              <LinkTitle onClick={goGithub}>Github</LinkTitle>\r\n            </ProfileSection>\r\n            <ProfileSection>\r\n              <p>\r\n                <span className=\"my-name\">이단비</span>\r\n                <span className=\"my-sex\">(♀)</span>\r\n                <span className=\"my-brthdy\">1992.08.19</span>\r\n              </p>\r\n              <p>\r\n                <MdMailOutline />\r\n                danbi.db@gmail.com\r\n              </p>\r\n              <p>\r\n                <MdPhoneIphone />\r\n                010-4013-4147\r\n              </p>\r\n              <p>\r\n                <MdLocationOn />\r\n                경기도 안양시\r\n              </p>\r\n            </ProfileSection>\r\n          </FlexWrapper>\r\n        </Card>\r\n      </Sidebar>\r\n      <Content>\r\n        <Card>\r\n          <ContentSection>\r\n            <h2>미니룸</h2>\r\n            <div>준비중</div>\r\n          </ContentSection>\r\n          <ContentSection>\r\n            <h2>한 줄 이력</h2>\r\n            <div>\r\n              <ul>\r\n                <li>KH 수료</li>\r\n                <li>소프트원 재직중</li>\r\n                <li></li>\r\n                <li></li>\r\n                <li></li>\r\n              </ul>\r\n            </div>\r\n          </ContentSection>\r\n        </Card>\r\n      </Content>\r\n      <MainMenu />\r\n    </Layout>\r\n  );\r\n};\r\nexport default Home;\r\n","const SET_FORM_MODE = 'formMode/SET_FORM_MODE';\r\n\r\nexport const setFormMode = payload => ({ type: SET_FORM_MODE, payload });\r\n\r\nconst initialState = false;\r\n\r\nexport default function formMode(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_FORM_MODE:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { NavLink, useRouteMatch } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { setFormMode } from '../../module/formMode';\r\n\r\nconst ListDiv = styled.div`\r\n  h2 {\r\n    padding-bottom: 10px;\r\n    border-bottom: 1px solid gray;\r\n    font-weight: bold;\r\n    a {\r\n      color: ${props => props.theme.layout.mainColor};\r\n    }\r\n  }\r\n  ul {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 10px;\r\n    font-size: 0.9rem;\r\n    li {\r\n      padding: 5px;\r\n    }\r\n    ul {\r\n      padding-left: 15px;\r\n    }\r\n    a {\r\n      color: ${props => props.theme.layout.textColor};\r\n      &.selected {\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst SubMenu = ({ title, list }) => {\r\n  const match = useRouteMatch();\r\n  const dispatch = useDispatch();\r\n  const { formMode: isForm } = useSelector(state => state);\r\n  const handleMode = () => {\r\n    if (isForm) {\r\n      dispatch(setFormMode());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListDiv>\r\n      <h2>\r\n        <NavLink\r\n          exact\r\n          to={match.url}\r\n          activeClassName=\"selected\"\r\n          onClick={handleMode}\r\n        >\r\n          {title}\r\n        </NavLink>\r\n      </h2>\r\n      <nav>\r\n        <ul>\r\n          {list.map(item => (\r\n            <li key={item.id}>\r\n              <NavLink\r\n                to={match.url + item.url}\r\n                activeClassName=\"selected\"\r\n                onClick={handleMode}\r\n              >\r\n                {item.title}\r\n              </NavLink>\r\n              {item.child && (\r\n                <ul>\r\n                  {item.child.map(child => (\r\n                    <li key={child.id}>\r\n                      <NavLink\r\n                        to={match.url + item.url + child.url}\r\n                        activeClassName=\"selected\"\r\n                        onClick={handleMode}\r\n                      >\r\n                        {child.title}\r\n                      </NavLink>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    </ListDiv>\r\n  );\r\n};\r\n\r\nexport default SubMenu;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst Article = styled.article`\r\n  width: 100%;\r\n  height: ${props => (props.fullHeight ? '100%' : 'max-content')};\r\n  /* height: 88%; */\r\n  margin: 50px 0;\r\n  &:first-of-type {\r\n    margin-top: 30px};\r\n  }\r\n  h3 {\r\n    height: 30px;\r\n    margin-bottom: 10px;\r\n    background: #eee;\r\n    border-top: 1px solid #aaa;\r\n    color: #333;\r\n    text-align: center;\r\n    font-weight: bold;\r\n    line-height: 30px;\r\n  }\r\n  .post-info {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin: 10px 5px;\r\n    p:first-of-type {\r\n      color: ${props => props.theme.layout.textColor};\r\n    }\r\n    p:last-of-type {\r\n      font-size: 0.9rem;\r\n    }\r\n  }\r\n  .post-contents {\r\n    img {\r\n    }\r\n    p {\r\n      padding: 20px 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Post = ({ fixed, children }) => {\r\n  return <Article fixed={fixed}>{children}</Article>;\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Background = styled.div`\r\n  display: ${props => (props.isOpen ? 'block' : 'none')};\r\n  z-index: 999;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst ModalWrapper = styled.div`\r\n  display: ${props => (props.isOpen ? 'block' : 'none')};\r\n  z-index: 9999;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: ${props => props.width}px;\r\n  height: ${props => props.height}px;\r\n  margin: -${props => props.height / 2}px 0 0 -${props => props.width / 2}px;\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  border: 3px solid;\r\n  h4 {\r\n    height: 100px;\r\n    background: ${props => props.bg};\r\n    border-top-left-radius: 10px;\r\n    border-top-right-radius: 10px;\r\n    text-align: center;\r\n    line-height: 100px;\r\n    font-size: 1.5rem;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst Modal = ({ isOpen, width, height, bg, children }) => {\r\n  return (\r\n    <>\r\n      <Background isOpen={isOpen} />\r\n      <ModalWrapper isOpen={isOpen} width={width} height={height} bg={bg}>\r\n        {children}\r\n      </ModalWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import axios from 'axios';\r\n\r\nexport const getBoards = async () => {\r\n  const response = await axios.get('http://localhost:4000/boards');\r\n  return response.data;\r\n};\r\n\r\nexport const addBoard = async board => {\r\n  const response = await axios.post('http://localhost:4000/boards', board);\r\n  return response.data;\r\n};\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as apiBoards from '../../api/boards';\r\nimport { setFormMode } from '../../module/formMode';\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  button {\r\n    align-self: flex-end;\r\n    margin: 0 10px 10px 0;\r\n  }\r\n  input {\r\n    height: 28px;\r\n  }\r\n  textarea {\r\n    height: 90%;\r\n    margin-top: 10px;\r\n    resize: none;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  float: right;\r\n  margin: 0 10px 10px 0;\r\n`;\r\n\r\nconst FormWrapper = ({ regusr, passwd }) => {\r\n  const dispatch = useDispatch();\r\n  const { formMode: isForm } = useSelector(state => state);\r\n\r\n  // Board\r\n  const initialState = {\r\n    bbs_ctgry1: 'WORK_LOG',\r\n    bbs_ctgry2: 'REACT',\r\n    title: '',\r\n    content: '',\r\n    regusr,\r\n    passwd,\r\n  };\r\n  const [board, setBoard] = useState(initialState);\r\n  const onChange = e => {\r\n    const { name, value } = e.target;\r\n    setBoard({\r\n      ...board,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  // Submit form\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (!board.title) {\r\n      alert('제목을 입력해 주세요!');\r\n      return;\r\n    }\r\n    if (!board.content) {\r\n      alert('내용을 입력해 주세요!');\r\n      return;\r\n    }\r\n\r\n    if (window.confirm('글을 등록하시겠습니까?')) {\r\n      apiBoards\r\n        .addBoard(board)\r\n        .then(data => {\r\n          if (data.success) {\r\n            alert('글 등록 성공!');\r\n            dispatch(setFormMode(!isForm));\r\n            setBoard(initialState);\r\n          }\r\n        })\r\n        .catch(err => alert('글 등록 실패!'));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={onSubmit}>\r\n      <button type=\"submit\">등록하기</button>\r\n      <div className=\"select-wrapper\">\r\n        <select name=\"bbs_ctgry1\" value={board.bbs_ctgry1} onChange={onChange}>\r\n          <option value=\"WORK_LOG\">작업일지</option>\r\n          <option value=\"STUDY\">공부노트</option>\r\n        </select>\r\n        {board.bbs_ctgry1 === 'STUDY' && (\r\n          <select\r\n            name=\"bbs_ctgry2\"\r\n            value={board.bbs_ctgry2}\r\n            onChange={onChange}\r\n          >\r\n            <option value=\"REACT\">리액트</option>\r\n            <option value=\"JS\">자바스크립트</option>\r\n          </select>\r\n        )}\r\n      </div>\r\n      <input type=\"text\" name=\"title\" value={board.title} onChange={onChange} />\r\n      <textarea\r\n        name=\"content\"\r\n        value={board.content}\r\n        onChange={onChange}\r\n      ></textarea>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormWrapper;\r\n","export const stateUtils = {\r\n  initial: (initialData = null) => ({\r\n    loading: false,\r\n    data: initialData,\r\n    error: null,\r\n  }),\r\n  loading: (prevData = null) => ({\r\n    loading: true,\r\n    data: prevData,\r\n    error: null,\r\n  }),\r\n  success: data => ({\r\n    loading: false,\r\n    data,\r\n    error: null,\r\n  }),\r\n  error: error => ({\r\n    loading: false,\r\n    data: null,\r\n    error,\r\n  }),\r\n};\r\n\r\nexport const createPromiseThunk = (type, promiseCreator) => {\r\n  console.log('createPromiseThunk', type);\r\n  // const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\r\n\r\n  // return param => async dispatch => {\r\n  //   try {\r\n  //     dispatch({ type, param }); // 요청 시작\r\n  //     const payload = await promiseCreator(param); // 결과의 이름을 payload로 통일\r\n  //     dispatch({ type: SUCCESS, payload, param }); // 성공\r\n  //   } catch (e) {\r\n  //     dispatch({ type: ERROR, error: e }); // 실패\r\n  //   }\r\n  // };\r\n};\r\n\r\nexport const handleAsyncActions = (type, key, keepData = false) => {\r\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\r\n  return (state, action) => {\r\n    switch (action.type) {\r\n      case type:\r\n        return {\r\n          ...state,\r\n          [key]: stateUtils.loading(keepData ? state[key].data : null),\r\n        };\r\n      case SUCCESS:\r\n        return {\r\n          ...state,\r\n          [key]: stateUtils.success(action.payload),\r\n        };\r\n      case ERROR:\r\n        return {\r\n          ...state,\r\n          [key]: stateUtils.error(action.error),\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n};\r\n\r\nconst defaulIdtSelector = param => param;\r\nexport const createPromiseThunkById = (\r\n  type,\r\n  promiseCreator,\r\n  idSelector = defaulIdtSelector,\r\n) => {\r\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\r\n\r\n  return param => async dispatch => {\r\n    const id = idSelector(param);\r\n    console.log(type, id);\r\n    try {\r\n      dispatch({ type, meta: id });\r\n      const payload = await promiseCreator(param);\r\n      dispatch({ type: SUCCESS, payload, meta: id });\r\n    } catch (e) {\r\n      dispatch({ type: ERROR, error: e, meta: id });\r\n    }\r\n  };\r\n};\r\n\r\nexport const handleAsyncActionsById = (type, key, keepData = false) => {\r\n  const [SUCCESS, ERROR] = [`${type}_SUCCESS`, `${type}_ERROR`];\r\n\r\n  return (state, action) => {\r\n    const id = action.meta;\r\n    switch (action.type) {\r\n      case type:\r\n        return {\r\n          ...state,\r\n          [key]: {\r\n            ...state[key],\r\n            [id]: stateUtils.loading(\r\n              keepData ? state[key][id] && state[key][id].data : null,\r\n            ),\r\n          },\r\n        };\r\n      case SUCCESS:\r\n        return {\r\n          ...state,\r\n          [key]: {\r\n            ...state[key],\r\n            [id]: stateUtils.success(action.payload),\r\n          },\r\n        };\r\n      case ERROR:\r\n        return {\r\n          ...state,\r\n          [key]: {\r\n            ...state[key],\r\n            [id]: stateUtils.error(action.error),\r\n          },\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const getPasswd = async () => {\r\n  const response = await axios.get('http://localhost:4000/sessions/passwd');\r\n  return response.data;\r\n};\r\n","import * as api from '../api/boards';\r\nimport {\r\n  stateUtils,\r\n  handleAsyncActions,\r\n  createPromiseThunk,\r\n} from '../lib/asyncUtils';\r\n\r\n// Board 목록 전체 조회\r\nconst GET_BOARDS_ALL = 'boards/GET_BOARDS_ALL';\r\nconst GET_BOARDS_ALL_SUCCESS = 'boards/GET_BOARDS_ALL_SUCCESS';\r\nconst GET_BOARDS_ALL_ERROR = 'boards/GET_BOARDS_ALL_ERROR';\r\n\r\nconst initialState = {\r\n  boards: stateUtils.initial(),\r\n  board: {},\r\n};\r\n\r\nexport const getBoardsAll = createPromiseThunk(GET_BOARDS_ALL, api.getBoards);\r\n\r\nexport default function boards(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BOARDS_ALL:\r\n    case GET_BOARDS_ALL_SUCCESS:\r\n    case GET_BOARDS_ALL_ERROR:\r\n      const reducer = handleAsyncActions(GET_BOARDS_ALL, 'boards', true);\r\n      return reducer(state, action);\r\n    //return handleAsyncActions(GET_BOARDS_ALL, 'boards', true)(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Switch, Route, useRouteMatch } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Card from '../../components/Layout/Card';\r\nimport MainMenu from '../../components/Menu/MainMenu';\r\nimport SubMenu from '../../components/Menu/SubMenu';\r\nimport Sidebar from '../../components/Layout/Sidebar';\r\nimport Content from '../../components/Layout/Content';\r\nimport Post from '../../components/Layout/Post';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport FormWrapper from './FormWrapper';\r\nimport * as apiSessions from '../../api/sessions';\r\nimport { setFormMode } from '../../module/formMode';\r\nimport { getBoardsAll } from '../../module/boards';\r\nimport { getBoards } from '../../api/boards';\r\n\r\nconst PostWrapper = styled.div`\r\n  overflow-y: auto;\r\n  height: 100%;\r\n  padding: 0 20px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  float: right;\r\n  margin: 0 10px 10px 0;\r\n`;\r\n\r\n// Modal\r\nconst ButtonWrapper = styled.div``;\r\n\r\nconst Diary = () => {\r\n  console.log('diary');\r\n  const match = useRouteMatch();\r\n  const list = [\r\n    { id: 1, title: '📁작업일지', url: '/workLog' },\r\n    {\r\n      id: 2,\r\n      title: '📁공부노트',\r\n      url: '/study',\r\n      child: [\r\n        { id: 1, title: '📝리액트', url: '/react' },\r\n        { id: 2, title: '📝자바스크립트', url: '/js' },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  // Get boards\r\n  const dispatch = useDispatch();\r\n  const { loading, data, error } = useSelector(state => state.boards.boards);\r\n  console.log(loading, data, error);\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(getBoardsAll());\r\n  // }, [dispatch]);\r\n  getBoards();\r\n\r\n  // Check & Set regusr/passwd\r\n  const [passwd, setPasswd] = useState('');\r\n  const [regusr, setRegusr] = useState('');\r\n  const handleRegInfo = e => {\r\n    const { name, value } = e.target;\r\n    if (name === 'passwd') setPasswd(value);\r\n    else setRegusr(value);\r\n  };\r\n\r\n  // Modal\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const handleModal = () => {\r\n    setPasswd('');\r\n    setRegusr('');\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  // Mode type: view, form\r\n  const { formMode: isForm } = useSelector(state => state);\r\n  const handleMode = () => {\r\n    // if you try to change mode type to form, (false -> true)\r\n    // check passwd & enter regusr\r\n    if (!isForm) {\r\n      if (!regusr) {\r\n        alert('등록자명을 입력해주세요!');\r\n        return;\r\n      }\r\n      if (!passwd) {\r\n        alert('비밀번호를 입력해주세요!');\r\n        return;\r\n      }\r\n      apiSessions\r\n        .getPasswd()\r\n        .then(data => {\r\n          if (data.passwd !== passwd) {\r\n            alert('유효하지 않은 비밀번호입니다!');\r\n            return;\r\n          } else {\r\n            dispatch(setFormMode(!isForm));\r\n            handleModal();\r\n          }\r\n        })\r\n        .catch(err => alert('비밀번호 불러오기 실패!'));\r\n    } else {\r\n      dispatch(setFormMode(!isForm));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Modal isOpen={isOpen} width={500} height={300} bg=\"salmon\">\r\n        <h4>✔ 비밀번호 확인</h4>\r\n        <input\r\n          type=\"text\"\r\n          name=\"regusr\"\r\n          value={regusr}\r\n          placeholder=\"등록자명을 입력하세요\"\r\n          onChange={handleRegInfo}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"passwd\"\r\n          value={passwd}\r\n          onChange={handleRegInfo}\r\n        />\r\n        <ButtonWrapper>\r\n          <button type=\"button\" onClick={handleModal}>\r\n            닫기\r\n          </button>\r\n          <button type=\"button\" onClick={handleMode}>\r\n            적용하기\r\n          </button>\r\n        </ButtonWrapper>\r\n      </Modal>\r\n      <Sidebar>\r\n        <Card>\r\n          <SubMenu title=\"다이어리\" list={list} />\r\n        </Card>\r\n      </Sidebar>\r\n      <Content>\r\n        <Card>\r\n          <PostWrapper>\r\n            <Switch>\r\n              <Route exact path={match.path}>\r\n                {!isForm ? (\r\n                  <>\r\n                    <Button type=\"button\" onClick={handleModal}>\r\n                      등록하기\r\n                    </Button>\r\n                    <Post>\r\n                      <h3>다이어리 메인</h3>\r\n                      <div className=\"post-info\">\r\n                        <p>이단비</p>\r\n                        <p>2020-11-12</p>\r\n                      </div>\r\n                      <div className=\"post-contents\">\r\n                        <img\r\n                          src={\r\n                            process.env.PUBLIC_URL +\r\n                            '/resources/img/profile.jpg'\r\n                          }\r\n                          alt=\"profile\"\r\n                        />\r\n                        <p>모든 글 전체 조회?</p>\r\n                      </div>\r\n                    </Post>\r\n                    <Post>\r\n                      <h3>다이어리 메인</h3>\r\n                      <div className=\"post-info\">\r\n                        <p>이단비</p>\r\n                        <p>2020-11-12</p>\r\n                      </div>\r\n                      <div className=\"post-contents\">\r\n                        <img\r\n                          src={\r\n                            process.env.PUBLIC_URL +\r\n                            '/resources/img/profile.jpg'\r\n                          }\r\n                          alt=\"profile\"\r\n                        />\r\n                        <p>모든 글 전체 조회?</p>\r\n                      </div>\r\n                    </Post>\r\n                  </>\r\n                ) : (\r\n                  <FormWrapper regusr={regusr} passwd={passwd} />\r\n                )}\r\n              </Route>\r\n              <Route path={`${match.path}/workLog`}>작업일지</Route>\r\n              <Route exact path={`${match.path}/study`}>\r\n                스터디 메인\r\n              </Route>\r\n              <Route path={`${match.path}/study/react`}>스터디 리액트</Route>\r\n              <Route path={`${match.path}/study/js`}>스터디 자바스크립트</Route>\r\n            </Switch>\r\n          </PostWrapper>\r\n        </Card>\r\n      </Content>\r\n      <MainMenu />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Diary;\r\n","const SET_COLOR = 'palette/SET_COLOR';\r\n\r\nexport const setColor = payload => ({ type: SET_COLOR, payload });\r\n\r\nconst initialState = {\r\n  layout: {\r\n    outer: 'gray',\r\n    layoutBorder1: 'black',\r\n    layoutBg1: '#a9d2d9',\r\n    layoutBorder2: '#fff',\r\n    layoutBg2: 'lightgray',\r\n    cardBorder: '#a5a5a5',\r\n    cardBg: '#fff',\r\n    mainColor: '#238db3',\r\n    headerColor: '#333',\r\n    textColor: '#07698c',\r\n  },\r\n  component: {\r\n    priority: '#e03131',\r\n    important: '#3b5bdb',\r\n    notice: '#fcc419',\r\n  }\r\n};\r\n\r\nexport default function palette(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_COLOR:\r\n      const { key, value } = action.payload;\r\n      return {\r\n        ...state,\r\n        palette: {\r\n          ...state.palette,\r\n          [key]: value,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled, { css } from 'styled-components';\r\nimport { setColor } from '../../module/palette';\r\nimport Post from '../../components/Layout/Post';\r\n\r\nconst ThemeWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 1px solid gray;\r\n`;\r\n\r\nconst TabList = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Tab = styled.li`\r\n  display: block;\r\n  width: 80px;\r\n  height: 50px;\r\n  border: 1px solid;\r\n  background: ${props => props.bg};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ChangeWrapper = styled.div`\r\n  border: 1px solid pink;\r\n  \r\n`;\r\n\r\nconst ColorWrapper = styled.div`\r\n  display: flex;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Color = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  &:last-of-type {\r\n    margin-left: 20px;\r\n    p {\r\n      margin-bottom: 11px;\r\n    }\r\n  }\r\n  p {\r\n    &:first-of-type {\r\n      font-weight: bold;\r\n      font-size: 1.5rem;\r\n    }\r\n    &:last-of-type {\r\n      margin-top: 5px;\r\n    }  \r\n  }\r\n  div {\r\n    width: 80px;\r\n    height: 80px;\r\n    margin-top: 15px;\r\n    background: ${props => props.color};\r\n    border: 1px solid;\r\n  }\r\n  input {\r\n    width: 85px;\r\n    height: 88px;\r\n    border: 0;\r\n    margin: 0;\r\n    padding: 0;\r\n    background: none;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  height: 35px;\r\n  padding: 0 10px;\r\n  border-radius: 10px;\r\n  border: 1px solid;\r\n  line-height: 35px;\r\n  font-weight: bold;\r\n  font-size: .9rem;\r\n  outline: 0;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ChangeTheme = () => {\r\n  // Redux\r\n  const dispatch = useDispatch();\r\n  const { layout: palette } = useSelector(state => state.palette);\r\n  const { layout } = useSelector(state => state);\r\n\r\n  // Get TabMenu List \r\n  const tabList = [];\r\n  let index = 1;\r\n  for (let key in palette) {\r\n    tabList.push({ id: index++, target: key, color: palette[key]});\r\n  }\r\n\r\n  // Selected layout & hexColor\r\n  const [target, setTarget] = useState('');\r\n  const [hexColor, setHexColor] = useState('');\r\n\r\n  // Hex Color Code\r\n  const getRandomHexColor = () => {\r\n    const letters = '0123456789ABCDEF';\r\n    let hex = '#';\r\n    for (let i = 0; i < 6; i++) {\r\n      hex += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return hex;\r\n  };\r\n  const handleHexColor = e => setHexColor(e.target.value);\r\n\r\n  // Handle Color\r\n  const handleLayoutColor = target => {\r\n    // Active layout DOM \r\n    // const key = target.includes('1') ? 'layout1' : target.includes('2') ? 'layout2' : 'card';\r\n    // console.log(layout.layout1.style.background);\r\n\r\n    // Q. how to detect new hexCode after setHexColor????\r\n    const newHexColor = getRandomHexColor();\r\n    setTarget(target);\r\n    setHexColor(newHexColor);\r\n  };\r\n\r\n  const changeLayoutColor = () => {\r\n    dispatch(setColor(target, hexColor));\r\n  };\r\n\r\n  return (\r\n    <Post>\r\n      <h3>테마 변경하기</h3>\r\n      <ThemeWrapper>\r\n        <TabList>\r\n          {\r\n            tabList.map(tab => (<Tab key={tab.id} bg={tab.color} zIndex={tabList.length - tab.id} onClick={() => handleLayoutColor(tab.target)}></Tab>))\r\n          }\r\n        </TabList>\r\n        <ChangeWrapper>\r\n          <ColorWrapper>\r\n            <Color color={palette[target]}>\r\n              <p>BEFORE</p>\r\n              <div></div>\r\n              <p>{palette[target]}</p>\r\n            </Color>\r\n            <Color color={hexColor}>\r\n              <p>AFTER</p>\r\n              <input\r\n                type=\"color\"\r\n                name={target}\r\n                value={hexColor}\r\n                onChange={handleHexColor}\r\n              />\r\n              <p>{hexColor}</p>\r\n            </Color>\r\n          </ColorWrapper>\r\n          <Button type=\"button\" onClick={() => setHexColor(getRandomHexColor())}>\r\n            RANDOM!\r\n          </Button>\r\n          <Button type=\"button\" onClick={changeLayoutColor}>\r\n            적용하기\r\n          </Button>\r\n          <Button type=\"button\">\r\n            되돌리기\r\n          </Button>\r\n        </ChangeWrapper>\r\n      </ThemeWrapper>\r\n    </Post>\r\n  );\r\n};\r\n\r\nexport default ChangeTheme;\r\n","// id값\r\nlet tasklistId = 0; // ADD_TASKLIST\r\nlet taskId = 0; // ADD_TASK\r\nlet checklistId = 0; // ADD_CHECKLIST\r\n\r\n// 업무리스트\r\nconst ADD_TASKLIST = 'tasklist/ADD_TASKLIST';\r\nconst DEL_TASKLIST = 'tasklist/DEL_TASKLIST';\r\nconst CHANGE_TASKLIST_TITLE = 'tasklist/CHANGE_TASKLIST_TITLE';\r\n//업무\r\nconst SET_TASK = 'tasklist/SET_TASK';\r\nconst CLEAR_TASK = 'tasklist/CLEAR_TASK';\r\nconst ADD_TASK = 'tasklist/ADD_TASK';\r\nconst DEL_TASK = 'tasklist/DEL_TASK';\r\nconst TOGGLE_TASK = 'tasklist/TOGGLE_TASK';\r\nconst CHANGE_TASK_TITLE = 'tasklist/CHANGE_TASK_TITLE';\r\nconst CHANGE_TASK_SETTINGS = 'tasklist/CHANGE_TASK_SETTINGS';\r\nconst ADD_CHECKLIST = 'tasklist/ADD_CHECKLIST';\r\n\r\n// 업무리스트\r\nexport const addTasklist = payload => ({ type: ADD_TASKLIST, payload });\r\nexport const delTasklist = payload => ({ type: DEL_TASKLIST, payload });\r\nexport const changeTasklistTitle = payload => ({\r\n  type: CHANGE_TASKLIST_TITLE,\r\n  payload,\r\n});\r\n//업무\r\nexport const setTask = payload => ({ type: SET_TASK, payload });\r\nexport const clearTask = () => ({ type: CLEAR_TASK });\r\nexport const addTask = payload => ({ type: ADD_TASK, payload });\r\nexport const delTask = payload => ({ type: DEL_TASK, payload });\r\nexport const toggleTask = payload => ({ type: TOGGLE_TASK, payload });\r\nexport const changeTaskTitle = payload => ({\r\n  type: CHANGE_TASK_TITLE,\r\n  payload,\r\n});\r\nexport const changeTaskSettings = payload => ({\r\n  type: CHANGE_TASK_SETTINGS,\r\n  payload,\r\n});\r\nexport const addChecklist = payload => ({ type: ADD_CHECKLIST, payload });\r\n\r\nconst initialState = {\r\n  tasklists: [],\r\n  task: {},\r\n};\r\n\r\nexport default function tasklists(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_TASKLIST:\r\n      return {\r\n        ...state,\r\n        tasklists: state.tasklists.concat({\r\n          id: tasklistId++,\r\n          title: action.payload,\r\n        }),\r\n      };\r\n    case DEL_TASKLIST:\r\n      return {\r\n        ...state,\r\n        tasklists: state.tasklists.filter(item => item.id !== action.payload),\r\n      };\r\n    case CHANGE_TASKLIST_TITLE:\r\n      return {\r\n        ...state,\r\n        tasklists: state.tasklists.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, title: action.payload.title }\r\n            : item,\r\n        ),\r\n      };\r\n    case SET_TASK:\r\n      const { tasks } = state.tasklists[action.payload.tasklistId];\r\n      return {\r\n        ...state,\r\n        task: tasks.find(item => item.id === action.payload.taskId),\r\n      };\r\n    case CLEAR_TASK:\r\n      return {\r\n        ...state,\r\n        task: {},\r\n      };\r\n    case ADD_TASK:\r\n      let task = action.payload.task;\r\n      task.id = taskId++;\r\n      return {\r\n        ...state,\r\n        tasklists: state.tasklists.map(item =>\r\n          item.id === action.payload.id\r\n            ? {\r\n                ...item,\r\n                tasks: item.tasks ? item.tasks.concat(task) : [].concat(task),\r\n              }\r\n            : item,\r\n        ),\r\n      };\r\n    case DEL_TASK:\r\n      return {\r\n        ...state,\r\n        tasklists: state.tasklists.map(item =>\r\n          item.id === action.payload.tasklistId\r\n            ? {\r\n                ...item,\r\n                tasks: item.tasks.filter(t => t.id !== action.payload.taskId),\r\n              }\r\n            : item,\r\n        ),\r\n      };\r\n    case TOGGLE_TASK:\r\n      return {\r\n        ...state,\r\n        tasklists: state.tasklists.map(item =>\r\n          item.id === action.payload.id\r\n            ? {\r\n                ...item,\r\n                tasks: item.tasks.map(t =>\r\n                  t.id === action.payload.task.id\r\n                    ? {\r\n                        ...t,\r\n                        isDone: !t.isDone,\r\n                        finDt: action.payload.task.finDt,\r\n                      }\r\n                    : t,\r\n                ),\r\n              }\r\n            : item,\r\n        ),\r\n      };\r\n    case CHANGE_TASK_TITLE:\r\n      return {\r\n        ...state,\r\n        tasklists: state.tasklists.map(item =>\r\n          item.id === action.payload.tasklistId\r\n            ? {\r\n                ...item,\r\n                tasks: item.tasks.map(t =>\r\n                  t.id === action.payload.taskId\r\n                    ? {\r\n                        ...t,\r\n                        title: action.payload.title,\r\n                      }\r\n                    : t,\r\n                ),\r\n              }\r\n            : item,\r\n        ),\r\n      };\r\n    case CHANGE_TASK_SETTINGS:\r\n      return {\r\n        ...state,\r\n        tasklists: state.tasklists.map(item =>\r\n          item.id === action.payload.tasklistId\r\n            ? {\r\n                ...item,\r\n                tasks: item.tasks.map(t =>\r\n                  t.id === action.payload.task.id ? action.payload.task : t,\r\n                ),\r\n              }\r\n            : item,\r\n        ),\r\n      };\r\n    case ADD_CHECKLIST:\r\n      const beforeChecklist = action.payload.task.checklist;\r\n      let { checklist } = action.payload;\r\n      checklist.id = checklistId++;\r\n      return {\r\n        ...state,\r\n        tasklists: state.tasklists.map(item =>\r\n          item.id === action.payload.tasklistId\r\n            ? {\r\n                ...item,\r\n                tasks: item.tasks.map(t =>\r\n                  t.id === action.payload.task.id\r\n                    ? {\r\n                        ...t,\r\n                        checklist: t.checklist.concat(checklist),\r\n                      }\r\n                    : t,\r\n                ),\r\n              }\r\n            : item,\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  MdGroupAdd,\r\n  MdCheck,\r\n  MdFace,\r\n  MdSentimentNeutral,\r\n} from 'react-icons/md';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  svg {\r\n    margin-right: 5px;\r\n    font-size: 1.4rem;\r\n  }\r\n  .btn {\r\n    cursor: pointer;\r\n    &:hover {\r\n      color: #656a70;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ListWrapper = styled.ul`\r\n  display: ${props => (props.activeMber ? 'block' : 'none')};\r\n  position: absolute;\r\n  top: 30px;\r\n  left: 0;\r\n  z-index: 10;\r\n  width: 140px;\r\n  height: 120px;\r\n  overflow-y: auto;\r\n  padding: 5px;\r\n  background: white;\r\n  font-size: 0.8rem;\r\n  li {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 5px;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background: #eee;\r\n      cursor: pointer;\r\n    }\r\n    .info-wrapper {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n    .info-wrapper + svg {\r\n      margin: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MberList = ({\r\n  onToggle,\r\n  activeMber,\r\n  selectedMberList,\r\n  handleMberList,\r\n}) => {\r\n  const mberList = [\r\n    {\r\n      mberNo: 1,\r\n      mberId: 'danbi',\r\n      mberNm: '이단비',\r\n      profile: MdFace,\r\n    },\r\n    {\r\n      mberNo: 2,\r\n      mberId: 'ash',\r\n      mberNm: '애쉬',\r\n      profile: MdSentimentNeutral,\r\n    },\r\n    {\r\n      mberNo: 3,\r\n      mberId: 'sikk',\r\n      mberNm: '식케이',\r\n      profile: MdFace,\r\n    },\r\n    {\r\n      mberNo: 4,\r\n      mberId: 'moon',\r\n      mberNm: '문',\r\n      profile: MdSentimentNeutral,\r\n    },\r\n    {\r\n      mberNo: 5,\r\n      mberId: 'jay',\r\n      mberNm: '박재범',\r\n      profile: MdFace,\r\n    },\r\n    {\r\n      mberNo: 6,\r\n      mberId: 'coo',\r\n      mberNm: '쿠기',\r\n      profile: MdSentimentNeutral,\r\n    },\r\n  ]; // 임시\r\n  let tempMberList = [];\r\n  if (mberList.length) {\r\n    tempMberList = mberList.map(mber => {\r\n      const m = selectedMberList.find(m => m.mberNo === mber.mberNo);\r\n      if (m) return { ...mber, isSelected: true };\r\n      else return { ...mber, isSelected: false };\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <MdGroupAdd\r\n        className=\"btn\"\r\n        role=\"button\"\r\n        onClick={() => onToggle('mber')}\r\n      />\r\n      <ListWrapper activeMber={activeMber}>\r\n        {tempMberList.map(mber => (\r\n          <li\r\n            key={mber.mberNo}\r\n            onClick={() => {\r\n              const fm = mberList.find(item => item.mberNo === mber.mberNo);\r\n              handleMberList(fm);\r\n            }}\r\n          >\r\n            <div>\r\n              {React.createElement(mber.profile)}\r\n              {mber.mberNm}\r\n            </div>\r\n            {mber.isSelected && <MdCheck />}\r\n          </li>\r\n        ))}\r\n      </ListWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default MberList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { MdLocalOffer, MdCheck } from 'react-icons/md';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  svg {\r\n    margin-right: 5px;\r\n    font-size: 1.2rem;\r\n  }\r\n  .btn {\r\n    cursor: pointer;\r\n    &:hover {\r\n      color: #656a70;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ListWrapper = styled.ul`\r\n  position: absolute;\r\n  top: 30px;\r\n  left: 0;\r\n  z-index: 10;\r\n  display: ${props => (props.activeTag ? 'block' : 'none')};\r\n  width: 120px;\r\n  height: 120px;\r\n  overflow-y: auto;\r\n  padding: 5px;\r\n  background: white;\r\n  font-size: 0.8rem;\r\n  li {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 5px;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background: #eee;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TagWrapper = styled.div`\r\n  display: inline-block;\r\n  padding: 4px 5px;\r\n  border-radius: 1rem;\r\n  background: ${props => props.tag && props.theme.component[props.tag]};\r\n  color: white;\r\n  font-size: 0.6rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Tag = ({ tag }) => {\r\n  return <TagWrapper tag={tag}>{tag}</TagWrapper>;\r\n};\r\n\r\nconst TagList = ({ onToggle, activeTag, tag, handleTag }) => {\r\n  const tagList = [\r\n    {\r\n      tagNo: 1,\r\n      tagNm: 'priority',\r\n    },\r\n    {\r\n      tagNo: 2,\r\n      tagNm: 'important',\r\n    },\r\n    {\r\n      tagNo: 3,\r\n      tagNm: 'notice',\r\n    },\r\n  ]; // 임시\r\n  let tempTagList = tagList.map(t => {\r\n    if (t.tagNm === tag) return { ...t, isSelected: true };\r\n    else return { ...t, isSelected: false };\r\n  });\r\n\r\n  return (\r\n    <Wrapper>\r\n      <MdLocalOffer\r\n        className=\"btn\"\r\n        role=\"button\"\r\n        onClick={() => onToggle('tag')}\r\n      />\r\n      <ListWrapper activeTag={activeTag}>\r\n        {tempTagList.map(tag => (\r\n          <li\r\n            key={tag.tagNo}\r\n            onClick={() => {\r\n              handleTag(tag.tagNm);\r\n            }}\r\n          >\r\n            <Tag tag={tag.tagNm} />\r\n            {tag.isSelected && <MdCheck />}\r\n          </li>\r\n        ))}\r\n      </ListWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default TagList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ImCalendar } from 'react-icons/im';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  svg {\r\n    margin-right: 5px;\r\n  }\r\n  .btn {\r\n    cursor: pointer;\r\n    &:hover {\r\n      color: #656a70;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .react-datepicker {\r\n    position: absolute;\r\n    top: 0;\r\n    left: -10px;\r\n    .react-datepicker__triangle {\r\n      left: 15px !important;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PickerWrapper = styled.div`\r\n  position: absolute;\r\n  top: -3px;\r\n  left: 0px;\r\n  z-index: 1;\r\n  display: flex;\r\n  width: 170px;\r\n  .react-datepicker-wrapper {\r\n    &:last-of-type {\r\n      margin-left: 3px;\r\n    }\r\n    input {\r\n      width: inherit;\r\n      padding: 3px 2px;\r\n      color: $gray-dark;\r\n      font-size: 0.7rem;\r\n    }\r\n    .react-datepicker__input-container .react-datepicker__close-icon {\r\n      padding: 0;\r\n      margin-right: 5px;\r\n    }\r\n    .react-datepicker__close-icon::after {\r\n      height: 12px;\r\n      width: 12px;\r\n      font-size: 10px;\r\n      vertical-align: initial;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Calendar = ({\r\n  onToggle,\r\n  activeDate,\r\n  startDt,\r\n  endDt,\r\n  setStartDate,\r\n  setEndDate,\r\n}) => {\r\n  return (\r\n    <Wrapper>\r\n      <ImCalendar className=\"btn\" onClick={() => onToggle('date')} />\r\n      {activeDate && (\r\n        <PickerWrapper>\r\n          <DatePicker\r\n            selected={startDt}\r\n            onChange={date => setStartDate(date)}\r\n            isClearable\r\n            placeholderText=\"시작일\"\r\n            dateFormat=\"yyyy-MM-dd\"\r\n          />\r\n          <DatePicker\r\n            selected={endDt}\r\n            onChange={date => setEndDate(date)}\r\n            isClearable\r\n            placeholderText=\"마감일\"\r\n            dateFormat=\"yyyy/MM/dd\"\r\n          />\r\n        </PickerWrapper>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","export const today = new Date().toISOString().substring(0, 10);\r\nexport const getFormatDate = date => {\r\n  // formate Date to String(yyyy-mm-dd)\r\n  if (!date) return null;\r\n  const yyyy = date.getFullYear();\r\n  let mm = 1 + date.getMonth();\r\n  mm = mm >= 10 ? mm : '0' + mm;\r\n  let dd = date.getDate();\r\n  dd = dd >= 10 ? dd : '0' + dd;\r\n  return yyyy + '-' + mm + '-' + dd;\r\n};\r\nexport const strToDate = str => {\r\n  // str = yyyy-mm-dd\r\n  const yy = str.substring(0, 4);\r\n  const mm = str.substring(5, 7);\r\n  const dd = str.substring(8);\r\n  return new Date(yy, mm - 1, dd);\r\n};\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled, { css } from 'styled-components';\r\nimport { TiPencil, TiPlus, TiTimes } from 'react-icons/ti';\r\nimport MberList from './components/MberList';\r\nimport TagList from './components/TagList';\r\nimport Calendar from './components/Calendar';\r\nimport Modal from '../../../components/Modal/Modal';\r\nimport { getFormatDate } from '../../../utils/utils';\r\nimport {\r\n  delTasklist,\r\n  changeTasklistTitle,\r\n  addTask,\r\n} from '../../../module/tasklists';\r\n\r\nconst TitleWrapper = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n  background: ${props => props.theme.layout.layoutBg1};\r\n  h4 {\r\n    width: 70%;\r\n    font-size: 0.9rem;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 75%;\r\n  padding: 3px 7px;\r\n  border: 2px solid ${props => props.theme.layout.mainColor};\r\n  border-radius: 3px;\r\n  outline: 0;\r\n`;\r\n\r\nconst TitleBtnWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.2rem;\r\n  svg {\r\n    margin-left: 8px;\r\n    &:nth-child(2) {\r\n      margin-left: 10px;\r\n      font-size: 1.3rem;\r\n    }\r\n    &:nth-child(3) {\r\n      font-size: 1.5rem;\r\n    }\r\n    &:hover {\r\n      background: #7bb0b9;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DoingWrapper = styled.div`\r\n  padding: 6px 10px;\r\n  background: #c0e0e5;\r\n  color: #333;\r\n  font-size: 0.75rem;\r\n`;\r\n\r\nconst CreateTask = styled.div`\r\n  display: ${props => (props.activeCreate ? 'block' : 'none')};\r\n  width: 100%;\r\n  padding: 0 10px 10px;\r\n  background: ${props => props.theme.layout.layoutBg1};\r\n  textarea {\r\n    width: 100%;\r\n    height: 65px;\r\n    padding: 5px 7px;\r\n    border: 2px solid ${props => props.theme.layout.mainColor};\r\n    border-radius: 3px;\r\n    border-bottom: 0;\r\n    outline: 0;\r\n    resize: none;\r\n  }\r\n`;\r\n\r\nconst CrBtnWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  margin-top: -10px;\r\n  padding: 5px;\r\n  background: white;\r\n  border: 2px solid ${props => props.theme.layout.mainColor};\r\n  border-radius: 3px;\r\n  border-top: 0;\r\n  ${props =>\r\n    props.activeDate &&\r\n    css`\r\n      position: relative;\r\n      padding-bottom: 35px;\r\n      .cr-btn-r {\r\n        position: absolute;\r\n        right: 5px;\r\n        top: 35px;\r\n      }\r\n    `}\r\n  .cr-btn-l {\r\n    display: flex;\r\n    align-items: center;\r\n    color: #868e96;\r\n    font-size: 1rem;\r\n    & > div {\r\n      margin: 2px 5px 0 0;\r\n    }\r\n    & > svg {\r\n      margin-right: 7px;\r\n      cursor: pointer;\r\n      &:first-of-type {\r\n        font-size: 1.2rem;\r\n      }\r\n      &:hover {\r\n        color: #656a70;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 3px 8px;\r\n  border: 0;\r\n  border-radius: 3px;\r\n  font-size: 0.78rem;\r\n  font-weight: bold;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ButtonCancel = styled(Button)`\r\n  color: #70767c;\r\n  &:hover {\r\n    background: #ccc;\r\n  }\r\n`;\r\n\r\nconst ButtonCreate = styled(Button)`\r\n  margin-left: 5px;\r\n  background: ${props => props.theme.layout.mainColor};\r\n  color: white;\r\n  &:hover {\r\n    background: #1d80a3;\r\n  }\r\n`;\r\n\r\nconst BadgeWrapper = styled.div`\r\n  position: relative;\r\n  .badge {\r\n    position: absolute;\r\n    right: 0;\r\n    top: -6px;\r\n    z-index: 10;\r\n    padding: 2px 4px;\r\n    border-radius: 4px;\r\n    color: white;\r\n    font-size: 0.5rem;\r\n    &.mber {\r\n      background: #6f777e;\r\n    }\r\n    &.priority {\r\n      background: #e03131;\r\n    }\r\n    &.important {\r\n      background: #3b5bdb;\r\n    }\r\n    &.notice {\r\n      background: #fcc419;\r\n    }\r\n  }\r\n  ${props =>\r\n    props.tag &&\r\n    css`\r\n      .badge {\r\n        background: ${props.theme.component[props.tag]};\r\n      }\r\n    `}\r\n`;\r\n\r\nconst Title = ({ tasklist, formMode, setFormMode, onToggle, onDelete }) => {\r\n  const { id } = tasklist;\r\n  const input = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!formMode) setTitle(tasklist.title);\r\n    else input.current.focus();\r\n  }, [formMode, tasklist.title, input]);\r\n\r\n  // 업무리스트 제목 관련\r\n  const [title, setTitle] = useState(tasklist.title);\r\n  const onChange = e => setTitle(e.target.value);\r\n  const handleTitle = () => {\r\n    const payload = {\r\n      id,\r\n      title,\r\n    };\r\n    dispatch(changeTasklistTitle(payload));\r\n    setFormMode(!formMode);\r\n  };\r\n\r\n  // 모달\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={isOpen} width={500} height={300} bg=\"lightgoldenrodyellow\">\r\n        <h4>⚠ [{title}] 을 정말로 삭제하시겠습니까?</h4>\r\n\r\n        <div>\r\n          <button type=\"button\" onClick={() => setIsOpen(!isOpen)}>\r\n            닫기\r\n          </button>\r\n          <button type=\"button\" onClick={() => onDelete(id)}>\r\n            삭제하기\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n      <TitleWrapper>\r\n        {!formMode ? (\r\n          <>\r\n            <h4>{title}</h4>\r\n            <TitleBtnWrapper>\r\n              <TiPencil role=\"button\" onClick={() => setFormMode(!formMode)} />\r\n              <TiPlus role=\"button\" onClick={() => onToggle('wrapper')} />\r\n              <TiTimes role=\"button\" onClick={() => setIsOpen(!isOpen)} />\r\n            </TitleBtnWrapper>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Input value={title} ref={input} onChange={onChange} />\r\n            <TitleBtnWrapper>\r\n              <TiPencil role=\"button\" onClick={handleTitle} />\r\n              <TiTimes role=\"button\" onClick={() => setFormMode(!formMode)} />\r\n            </TitleBtnWrapper>\r\n          </>\r\n        )}\r\n      </TitleWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Doing = ({ tasks }) => {\r\n  const undoneCnt = tasks\r\n    ? tasks.reduce((acc, cur) => acc + !cur.isDone, 0)\r\n    : 0;\r\n\r\n  return <DoingWrapper>진행 중인 업무 {undoneCnt}개</DoingWrapper>;\r\n};\r\n\r\nconst Header = ({ tasklist }) => {\r\n  const dispatch = useDispatch();\r\n  const { id, tasks } = tasklist;\r\n\r\n  // 업무리스트 제목 수정\r\n  // true: 수정, false: 조회\r\n  const [formMode, setFormMode] = useState(false);\r\n\r\n  // 업무리스트 삭제: 삭제 전 모달로 확인\r\n  const onDelete = id => dispatch(delTasklist(id));\r\n\r\n  // 업무 생성\r\n  // DOM 관리\r\n  const textarea = useRef();\r\n\r\n  // 활성화값 관리\r\n  const [activeCreate, setActiveCreate] = useState(false);\r\n  const [activeMber, setActiveMber] = useState(false);\r\n  const [activeTag, setActiveTag] = useState(false);\r\n  const [activeDate, setActiveDate] = useState(false);\r\n  // 선택값 관리\r\n  const [mberList, setMberList] = useState([]);\r\n  const [tag, setTag] = useState(null);\r\n  const [startDt, setStartDate] = useState(null);\r\n  const [endDt, setEndDate] = useState(null);\r\n\r\n  // 선택값 초기화\r\n  const resetState = () => {\r\n    setMberList([]);\r\n    setTag(null);\r\n    setStartDate(null);\r\n    setEndDate(null);\r\n    if (textarea.current) textarea.current.value = '';\r\n  };\r\n\r\n  const onToggle = type => {\r\n    if (type === 'wrapper') {\r\n      setActiveCreate(!activeCreate);\r\n      if (activeMber) setActiveMber(!activeMber);\r\n      if (activeTag) setActiveTag(!activeTag);\r\n      if (activeDate) setActiveDate(!activeDate);\r\n      resetState();\r\n    } else if (type === 'mber') {\r\n      setActiveMber(!activeMber);\r\n      if (activeTag) setActiveTag(!activeTag);\r\n      if (!startDt && !endDt && activeDate) setActiveDate(!activeDate);\r\n    } else if (type === 'tag') {\r\n      setActiveTag(!activeTag);\r\n      if (activeMber) setActiveMber(!activeMber);\r\n      if (!startDt && !endDt && activeDate) setActiveDate(!activeDate);\r\n    } else if (type === 'date') {\r\n      setActiveDate(!activeDate);\r\n      if (activeMber) setActiveMber(!activeMber);\r\n      if (activeTag) setActiveTag(!activeTag);\r\n    }\r\n  };\r\n\r\n  // 선택 멤버리스트값 관리\r\n  const handleMberList = mber => {\r\n    const findMber = mberList.find(m => m.mberNo === mber.mberNo);\r\n    if (findMber) {\r\n      setMberList(mberList.filter(m => m.mberNo !== mber.mberNo));\r\n    } else {\r\n      setMberList(mberList.concat(mber));\r\n    }\r\n    setActiveMber(!activeMber);\r\n  };\r\n\r\n  // 선택 태그값 관리\r\n  const handleTag = tagNm => {\r\n    if (tag === tagNm) {\r\n      setTag('');\r\n    } else {\r\n      setTag(tagNm);\r\n    }\r\n    setActiveTag(!activeTag);\r\n  };\r\n\r\n  const onCreate = () => {\r\n    const title = textarea.current;\r\n\r\n    // 유효성 검사\r\n    if (!title.value) {\r\n      alert('업무 이름을 입력하세요!');\r\n      title.focus();\r\n      return;\r\n    }\r\n    if (startDt && endDt && startDt > endDt) {\r\n      alert('마감일은 시작일보다 빠를 수 없습니다!');\r\n      setEndDate(null);\r\n      return;\r\n    }\r\n\r\n    const task = {\r\n      title: title.value,\r\n      isDone: false,\r\n      tag,\r\n      point: null,\r\n      checklist: [],\r\n      mberList,\r\n      startDt: getFormatDate(startDt),\r\n      endDt: getFormatDate(endDt),\r\n      finDt: null,\r\n    };\r\n    dispatch(addTask({ id, task }));\r\n\r\n    title.value = '';\r\n    resetState();\r\n    onToggle('wrapper');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title\r\n        tasklist={tasklist}\r\n        formMode={formMode}\r\n        setFormMode={setFormMode}\r\n        onToggle={onToggle}\r\n        onDelete={onDelete}\r\n      />\r\n      <Doing tasks={tasks} />\r\n      <CreateTask activeCreate={activeCreate}>\r\n        <textarea placeholder=\"새 업무 만들기\" ref={textarea}></textarea>\r\n        <CrBtnWrapper activeDate={activeDate}>\r\n          <div className=\"cr-btn-l\">\r\n            <BadgeWrapper>\r\n              {mberList.length > 0 && (\r\n                <span className=\"badge mber\">{mberList.length}</span>\r\n              )}\r\n              <MberList\r\n                onToggle={onToggle}\r\n                activeMber={activeMber}\r\n                selectedMberList={mberList}\r\n                handleMberList={handleMberList}\r\n              />\r\n            </BadgeWrapper>\r\n            <BadgeWrapper tag={tag}>\r\n              {tag && <span className=\"badge\">1</span>}\r\n              <TagList\r\n                onToggle={onToggle}\r\n                activeTag={activeTag}\r\n                tag={tag}\r\n                handleTag={handleTag}\r\n              />\r\n            </BadgeWrapper>\r\n            <Calendar\r\n              onToggle={onToggle}\r\n              activeDate={activeDate}\r\n              startDt={startDt}\r\n              endDt={endDt}\r\n              setStartDate={setStartDate}\r\n              setEndDate={setEndDate}\r\n            />\r\n          </div>\r\n          <div className=\"cr-btn-r\">\r\n            <ButtonCancel onClick={() => onToggle('wrapper')}>\r\n              취소\r\n            </ButtonCancel>\r\n            <ButtonCreate onClick={onCreate}>만들기</ButtonCreate>\r\n          </div>\r\n        </CrBtnWrapper>\r\n      </CreateTask>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 7px 10px 7px 0;\r\n  background: #f7f7f7;\r\n  /* border-top: 3px solid #ebebeb; */\r\n  color: gray;\r\n  font-size: 0.75rem;\r\n  text-align: right;\r\n  text-decoration: underline;\r\n  &:hover {\r\n    color: #333;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Bottom = ({ cnt, onToggle }) => {\r\n  return <Wrapper onClick={onToggle}>완료된 업무 {cnt}개 보기</Wrapper>;\r\n};\r\n\r\nexport default Bottom;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TagWrapper = styled.div`\r\n  display: inline-block;\r\n  padding: 4px 5px;\r\n  border-radius: 1rem;\r\n  background: ${props => props.tag && props.theme.component[props.tag]};\r\n  color: white;\r\n  font-size: 0.6rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Tag = ({ tag }) => {\r\n  return <TagWrapper tag={tag}>{tag}</TagWrapper>;\r\n};\r\n\r\nexport default Tag;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PointWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  span {\r\n    width: 7px;\r\n    height: 7px;\r\n    margin-left: 2px;\r\n    border: 1px solid ${props => props.theme.layout.layoutBg2};\r\n    border-radius: 7px;\r\n    &.isFull {\r\n      border: 0;\r\n      background: ${props => props.theme.layout.mainColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst renderSpan = point => {\r\n  const spanList = [];\r\n  if (point) {\r\n    for (let i = 0; i < 5; i++) {\r\n      if (i < point) spanList.push(<span key={i} className=\"isFull\"></span>);\r\n      else spanList.push(<span key={i}></span>);\r\n    }\r\n    return spanList;\r\n  } else return null;\r\n};\r\n\r\nconst Point = ({ point }) => {\r\n  const spanList = renderSpan(point);\r\n  return <PointWrapper>{spanList && spanList.map(item => item)}</PointWrapper>;\r\n};\r\n\r\nexport default Point;\r\n","import React, { useState, useRef } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { MdCheckBoxOutlineBlank, MdCheckBox, MdFace } from 'react-icons/md';\r\nimport { TiPencil, TiPlus, TiTimes } from 'react-icons/ti';\r\nimport { addChecklist, setTask } from '../../../../module/tasklists';\r\n\r\nconst Wrapper = styled.div`\r\n  border: 1px solid ${props => props.theme.layout.layoutBg2};\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst List = styled.li`\r\n  display: flex;\r\n  height: 30px;\r\n  border-radius: 3px;\r\n  border-bottom: 1px solid ${props => props.theme.layout.layoutBg2};\r\n  &:last-of-type {\r\n    border-bottom: 0;\r\n  }\r\n  background: #fff;\r\n  ${props =>\r\n    props.isSetting\r\n      ? css`\r\n          &:not(:last-of-type):hover {\r\n            background: pink;\r\n          }\r\n        `\r\n      : css`\r\n          &:hover {\r\n            background: #f7f7f7;\r\n          }\r\n        `}\r\n  & > div {\r\n    padding: 5px 10px;\r\n  }\r\n`;\r\n\r\nconst Chkbox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-right: 10px;\r\n  border-right: 3px double ${props => props.theme.component.priority};\r\n  color: ${props => props.theme.layout.outer};\r\n  font-size: 0.9rem;\r\n  cursor: pointer;\r\n  &.addBtn:hover {\r\n    background: #f7f7f7;\r\n  }\r\n`;\r\n\r\nconst Chktxt = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 85%;\r\n  font-size: 0.8rem;\r\n  white-space: nowrap;\r\n  svg {\r\n    margin-right: 5px;\r\n    font-size: 1.3rem;\r\n  }\r\n  span {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n  &.addBtn:hover {\r\n    background: #f7f7f7;\r\n    input {\r\n      background: #f7f7f7;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 3px 7px;\r\n  border: 2px solid ${props => props.theme.layout.mainColor};\r\n  border: 0;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst Checklist = ({\r\n  isSetting,\r\n  tasklistId,\r\n  task,\r\n  checklist,\r\n  handleCheckList,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Add Checklist\r\n  const newTitleInput = useRef();\r\n  const [newTitle, setNewTitle] = useState('');\r\n  const onChange = e => {\r\n    setNewTitle(e.target.value);\r\n  };\r\n\r\n  const onCreate = () => {\r\n    // Validation Check\r\n    if (!newTitle) {\r\n      alert('체크리스트명을 입력해 주세요!');\r\n      newTitleInput.current.focus();\r\n      return;\r\n    }\r\n\r\n    dispatch(\r\n      addChecklist({\r\n        tasklistId,\r\n        task,\r\n        checklist: {\r\n          title: newTitle,\r\n          isDone: false,\r\n        },\r\n      }),\r\n    );\r\n    setNewTitle('');\r\n\r\n    // 체크리스트 생성 후 state.tasklists.task 도 업데이트\r\n    dispatch(\r\n      setTask({\r\n        tasklistId,\r\n        taskId: task.id,\r\n      }),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ul>\r\n        {checklist.map(item => (\r\n          <List key={item.id} isSetting={isSetting}>\r\n            <Chkbox>\r\n              {item.isDone ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\r\n            </Chkbox>\r\n            <Chktxt>\r\n              {item.assignedMber &&\r\n                React.createElement(item.assignedMber.profile)}\r\n              <span>{item.title}</span>\r\n            </Chktxt>\r\n          </List>\r\n        ))}\r\n        {isSetting && (\r\n          <List key=\"add\" isSetting={isSetting}>\r\n            <Chkbox className=\"addBtn\" role=\"button\" onClick={onCreate}>\r\n              <TiPlus />\r\n            </Chkbox>\r\n            <Chktxt className=\"addBtn\">\r\n              <Input\r\n                name=\"newTitle\"\r\n                value={newTitle}\r\n                onChange={onChange}\r\n                ref={newTitleInput}\r\n                placeholder=\"체크리스트 추가하기\"\r\n              />\r\n            </Chktxt>\r\n          </List>\r\n        )}\r\n      </ul>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Checklist;\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { today, strToDate } from '../../../../utils/utils';\r\n\r\nconst DeadlineWrapper = styled.div`\r\n  margin: 10px 0 15px;\r\n  padding-left: 3px;\r\n  color: ${props => props.theme.layout.mainColor};\r\n  ${props =>\r\n    props.isOver &&\r\n    css`\r\n      color: ${props => props.theme.component.priority};\r\n    `};\r\n  ${props =>\r\n    props.isFin &&\r\n    css`\r\n      color: ${props => props.theme.layout.outer};\r\n    `};\r\n  font-size: 0.7rem;\r\n  font-weight: bold;\r\n`;\r\n\r\n/*\r\n  1. 시작일만 있는 경우: ~에 시작\r\n  2. 마감일만 있는 경우\r\n    a. 마감일 안 지난 경우: ~에 마감\r\n    b. 마감일 지난 경우: 마감일 ~일 지남\r\n  3. 둘 다 있는 경우\r\n    a. 마감일 안 지난 경우: 시작일 - 마감일\r\n    b. 마감일 지난 경우: 마감일 ~일 지남\r\n  4. 완료된 경우: ~에 완료\r\n*/\r\nconst handleDeadline = (startDt, endDt, finDt) => {\r\n  const start =\r\n    startDt && `${startDt.substring(5, 7)}월${startDt.substring(8)}일`;\r\n  const end = endDt && `${endDt.substring(5, 7)}월${endDt.substring(8)}일`;\r\n  const fin = finDt && `${finDt.substring(5, 7)}월${finDt.substring(8)}일`;\r\n  let result = '';\r\n\r\n  if (fin) {\r\n    return `${fin}에 완료`;\r\n  }\r\n  if (end && today > endDt) {\r\n    const diff = (strToDate(today) - strToDate(endDt)) / (1000 * 60 * 60 * 24);\r\n    return `마감일 ${diff}일 지남`;\r\n  }\r\n\r\n  if (start && !end) {\r\n    result = `${start}에 시작`;\r\n  } else if (!start && end) {\r\n    result = `${end}에 마감`;\r\n  } else {\r\n    result = `${start} - ${end}`;\r\n  }\r\n  return result;\r\n};\r\n\r\nconst Deadline = ({ startDt, endDt, finDt }) => {\r\n  const isOver = endDt && today > endDt ? true : false; // 기한 지남 여부\r\n  const isFin = finDt ? true : false; // 완료 여부\r\n  return (\r\n    <DeadlineWrapper isOver={isOver} isFin={isFin}>\r\n      {handleDeadline(startDt, endDt, finDt)}\r\n    </DeadlineWrapper>\r\n  );\r\n};\r\n\r\nexport default Deadline;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdCheckBoxOutlineBlank, MdCheckBox } from 'react-icons/md';\r\nimport { BsCardChecklist, BsChat } from 'react-icons/bs';\r\nimport { IoMdAttach } from 'react-icons/io';\r\nimport { toggleTask } from '../../../module/tasklists';\r\nimport { today } from '../../../utils/utils';\r\nimport Tag from './components/Tag';\r\nimport Point from './components/Point';\r\nimport Checklist from './components/Checklist';\r\nimport Deadline from './components/Deadline';\r\n\r\nconst TaskWrapper = styled.div`\r\n  display: ${props =>\r\n    (props.isDone && !props.openDone && 'none') ||\r\n    (props.isDone && props.openDone && 'block')};\r\n  margin-top: 3px;\r\n  padding: 20px 15px;\r\n  background: ${props => (props.isDone ? '#eee' : '#fff')};\r\n  color: #454545;\r\n  &:hover {\r\n    background: #f7f7f7;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n  display: flex;\r\n  margin-bottom: 15px;\r\n  h5 {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 82%;\r\n    margin-top: 10px;\r\n    svg {\r\n      margin-right: 5px;\r\n      color: ${props => props.theme.layout.layoutBg2};\r\n      font-size: 1.3rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst EtcWrapper = styled.div`\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n  padding-left: 3px;\r\n  color: ${props => props.theme.layout.outer};\r\n  font-size: 0.7rem;\r\n  span {\r\n    display: inherit;\r\n    margin-right: 10px;\r\n    &:not(:last-of-type) svg {\r\n      margin-right: 4px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MberWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst Task = ({ tasklistId, task, openDone, handlePopup }) => {\r\n  const {\r\n    id,\r\n    title,\r\n    isDone,\r\n    tag,\r\n    point,\r\n    checklist,\r\n    mberList,\r\n    startDt,\r\n    endDt,\r\n    finDt,\r\n  } = task;\r\n  const checklistDoneCnt = checklist.reduce((acc, cur) => acc + cur.isDone, 0);\r\n  const dispatch = useDispatch();\r\n\r\n  // 업무 완료 토글\r\n  const onToggleTask = () => {\r\n    const payload = {\r\n      id: tasklistId,\r\n      task: { id: task.id, finDt: task.finDt ? null : today },\r\n    };\r\n    dispatch(toggleTask(payload));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TaskWrapper\r\n        isDone={isDone}\r\n        openDone={openDone}\r\n        onClick={() => handlePopup(id)}\r\n      >\r\n        {tag && <Tag tag={tag} />}\r\n        <TitleWrapper>\r\n          <h5>\r\n            <span onClick={onToggleTask}>\r\n              {isDone ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\r\n            </span>\r\n            {title}\r\n          </h5>\r\n          <Point point={point} />\r\n        </TitleWrapper>\r\n        {checklist.length ? <Checklist checklist={checklist} /> : null}\r\n        {startDt || endDt || finDt ? (\r\n          <Deadline startDt={startDt} endDt={endDt} finDt={finDt} />\r\n        ) : null}\r\n        <EtcWrapper>\r\n          <span>\r\n            <BsCardChecklist />\r\n            {checklist.length ? `${checklistDoneCnt}/${checklist.length}` : 0}\r\n          </span>\r\n          {/* <span>\r\n          <BsChat /> {commentList.length}\r\n        </span>\r\n        <span>\r\n          <IoMdAttach /> {fileList.length}\r\n        </span> */}\r\n        </EtcWrapper>\r\n        <MberWrapper>\r\n          {mberList.map(mber =>\r\n            React.createElement(mber.profile, { key: mber.mberNo }, null),\r\n          )}\r\n        </MberWrapper>\r\n      </TaskWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Point from './Point';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  svg {\r\n    margin-right: 5px;\r\n    font-size: 1.2rem;\r\n  }\r\n  .btn {\r\n    cursor: pointer;\r\n    &:hover {\r\n      color: #656a70;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ListWrapper = styled.ul`\r\n  position: absolute;\r\n  top: 30px;\r\n  left: 0;\r\n  z-index: 10;\r\n  display: ${props => (props.activePoint ? 'block' : 'none')};\r\n  width: 120px;\r\n  height: 120px;\r\n  overflow-y: auto;\r\n  padding: 5px;\r\n  background: white;\r\n  font-size: 0.8rem;\r\n  li {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 5px;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background: #eee;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PointWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  span {\r\n    width: 7px;\r\n    height: 7px;\r\n    margin-left: 2px;\r\n    border: 1px solid ${props => props.theme.layout.layoutBg2};\r\n    border-radius: 7px;\r\n    &.isFull {\r\n      border: 0;\r\n      background: ${props => props.theme.layout.mainColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst PointList = ({ point, handlePoint, activePoint, onToggle }) => {\r\n  const renderPoints = () => {\r\n    const count = 5;\r\n    let renderList = [];\r\n\r\n    for (let i = 0; i <= count; i++) {\r\n      let spanList = [];\r\n\r\n      for (let j = 1; j <= count; j++) {\r\n        if (!i) {\r\n          // if span is all empty\r\n          spanList.push(<span key={`${i}-${j}`}></span>);\r\n        } else if (i === count) {\r\n          // if span is all full\r\n          spanList.push(<span key={`${i}-${j}`} className=\"isFull\"></span>);\r\n        } else {\r\n          if (i >= j) {\r\n            spanList.push(<span key={`${i}-${j}`} className=\"isFull\"></span>);\r\n          } else {\r\n            spanList.push(<span key={`${i}-${j}`}></span>);\r\n          }\r\n        }\r\n      }\r\n      renderList.push(\r\n        <li key={i} value={i} onClick={() => handlePoint(i)} role=\"button\">\r\n          <PointWrapper>{spanList}</PointWrapper>\r\n        </li>,\r\n      );\r\n    }\r\n\r\n    return renderList;\r\n  };\r\n  const options = renderPoints();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <Point point={point} />\r\n        <button type=\"button\" onClick={() => onToggle('point')}>\r\n          >\r\n        </button>\r\n      </div>\r\n      <ListWrapper activePoint={activePoint}>\r\n        {options && options.map(option => option)}\r\n      </ListWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PointList;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { TiPencil, TiTimes } from 'react-icons/ti';\r\nimport {\r\n  setTask,\r\n  clearTask,\r\n  changeTaskTitle,\r\n  delTask,\r\n  changeTaskSettings,\r\n} from '../../../module/tasklists';\r\nimport { getFormatDate, strToDate } from '../../../utils/utils';\r\nimport Modal from '../../../components/Modal/Modal';\r\nimport Calendar from './components/Calendar';\r\nimport MberList from './components/MberList';\r\nimport TagList from './components/TagList';\r\nimport Tag from './components/Tag';\r\nimport PointList from './components/PointList';\r\nimport Checklist from './components/Checklist';\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  left: ${props => props.left}px;\r\n  top: 50px;\r\n  width: 300px;\r\n  height: 500px;\r\n  background: #f7f7f7;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst CloseBtn = styled.button`\r\n  position: absolute;\r\n  right: -50px;\r\n  top: 10px;\r\n  z-index: -1;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 60px;\r\n  height: 50px;\r\n  padding-left: 20px;\r\n  background: pink;\r\n  border: 0;\r\n  border-radius: 8px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst TitleWrapper = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-bottom: 2px solid ${props => props.theme.layout.mainColor};\r\n  border-radius: 8px 8px 0 0;\r\n  h4 {\r\n    width: 70%;\r\n    font-size: 0.9rem;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  width: 75%;\r\n  padding: 3px 7px;\r\n  border: 2px solid ${props => props.theme.layout.mainColor};\r\n  border-radius: 3px;\r\n  outline: 0;\r\n`;\r\n\r\nconst TitleBtnWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.2rem;\r\n  svg {\r\n    margin-left: 8px;\r\n    &:nth-child(2) {\r\n      margin-left: 10px;\r\n      font-size: 1.3rem;\r\n    }\r\n    &:nth-child(3) {\r\n      font-size: 1.5rem;\r\n    }\r\n    &:hover {\r\n      background: #eee;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Setting = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Title = ({\r\n  openPopup,\r\n  setOpenPopup,\r\n  tasklistId,\r\n  formMode,\r\n  setFormMode,\r\n}) => {\r\n  const { task } = useSelector(state => state.tasklists);\r\n  const dispatch = useDispatch();\r\n\r\n  const input = useRef();\r\n  const [title, setTitle] = useState(task.title);\r\n\r\n  useEffect(() => {\r\n    if (!formMode) setTitle(task.title);\r\n    else input.current.focus();\r\n  }, [formMode, task, input]);\r\n\r\n  // Set payload about Ids\r\n  const payload = {\r\n    tasklistId,\r\n    taskId: task.id,\r\n  };\r\n\r\n  // Handle Task title\r\n  const onChange = e => setTitle(e.target.value);\r\n  const handleTitle = () => {\r\n    dispatch(\r\n      changeTaskTitle({\r\n        tasklistId,\r\n        taskId: task.id,\r\n        title,\r\n      }),\r\n    );\r\n    dispatch(setTask(payload));\r\n    setFormMode(!formMode);\r\n  };\r\n\r\n  // Delete Task\r\n  // Modal\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const onDelete = () => {\r\n    dispatch(delTask(payload));\r\n    dispatch(clearTask());\r\n    setOpenModal(!openModal);\r\n    setOpenPopup(!openPopup);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        isOpen={openModal}\r\n        width={500}\r\n        height={300}\r\n        bg=\"lightgoldenrodyellow\"\r\n      >\r\n        <h4>⚠ [{title}] 을 정말로 삭제하시겠습니까?</h4>\r\n        <div>\r\n          <button type=\"button\" onClick={() => setOpenModal(!openModal)}>\r\n            닫기\r\n          </button>\r\n          <button type=\"button\" onClick={onDelete}>\r\n            삭제하기\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n      <TitleWrapper>\r\n        {!formMode ? (\r\n          <>\r\n            <h4>{title}</h4>\r\n            <TitleBtnWrapper>\r\n              <TiPencil role=\"button\" onClick={() => setFormMode(!formMode)} />\r\n              <TiTimes role=\"button\" onClick={() => setOpenModal(!openModal)} />\r\n            </TitleBtnWrapper>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <TitleInput value={title} ref={input} onChange={onChange} />\r\n            <TitleBtnWrapper>\r\n              <TiPencil role=\"button\" onClick={handleTitle} />\r\n              <TiTimes role=\"button\" onClick={() => setFormMode(!formMode)} />\r\n            </TitleBtnWrapper>\r\n          </>\r\n        )}\r\n      </TitleWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Dates = ({ task, tasklistId, onToggle, activeDate }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Convert String to Date: Calendar's format is only possible to date type\r\n  const startDate = task.startDt ? strToDate(task.startDt) : null;\r\n  const endDate = task.endDt ? strToDate(task.endDt) : null;\r\n\r\n  const [startDt, setStartDate] = useState(startDate);\r\n  const [endDt, setEndDate] = useState(endDate);\r\n\r\n  // Convert Date to String for setting task's state\r\n  const startStr = startDt ? getFormatDate(startDt) : null;\r\n  const endStr = endDt ? getFormatDate(endDt) : null;\r\n\r\n  useEffect(() => {\r\n    if (task.startDt !== startStr || task.endDt !== endStr) {\r\n      dispatch(\r\n        changeTaskSettings({\r\n          tasklistId,\r\n          task: {\r\n            ...task,\r\n            startDt: startStr,\r\n            endDt: endStr,\r\n          },\r\n        }),\r\n      );\r\n    }\r\n  }, [dispatch, startDt, endDt, endStr, startStr, task, tasklistId]);\r\n\r\n  return (\r\n    <Setting>\r\n      <p>기한</p>\r\n      <Calendar\r\n        onToggle={onToggle}\r\n        activeDate={activeDate}\r\n        startDt={startDt}\r\n        endDt={endDt}\r\n        setStartDate={setStartDate}\r\n        setEndDate={setEndDate}\r\n      />\r\n    </Setting>\r\n  );\r\n};\r\n\r\nconst Mbers = ({ task, tasklistId, onToggle, activeMber }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [mberList, setMberList] = useState(task.mberList);\r\n  const handleMberList = mber => {\r\n    const findMber = mberList.find(m => m.mberNo === mber.mberNo);\r\n    if (findMber) {\r\n      setMberList(mberList.filter(m => m.mberNo !== mber.mberNo));\r\n    } else {\r\n      setMberList(mberList.concat(mber));\r\n    }\r\n    onToggle('mber');\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Compare selectedMberList with task.mberList\r\n    let diff = 0;\r\n    for (let item of mberList) {\r\n      const existingMber = task.mberList.find(m => m.mberNo === item.mberNo);\r\n      if (existingMber) diff++;\r\n    }\r\n\r\n    // If find diffrence, Change task state!\r\n    if (diff) {\r\n      dispatch(\r\n        changeTaskSettings({\r\n          tasklistId,\r\n          task: {\r\n            ...task,\r\n            mberList,\r\n          },\r\n        }),\r\n      );\r\n    }\r\n  }, [dispatch, mberList, task, tasklistId]);\r\n\r\n  return (\r\n    <Setting>\r\n      <p>배정 멤버</p>\r\n      <ul>\r\n        {mberList.length > 0 &&\r\n          mberList.map(mber => (\r\n            <li key={mber.mberNo}>\r\n              {React.createElement(mber.profile)}\r\n              {mber.mberNm}\r\n            </li>\r\n          ))}\r\n      </ul>\r\n      <MberList\r\n        onToggle={onToggle}\r\n        activeMber={activeMber}\r\n        selectedMberList={mberList}\r\n        handleMberList={handleMberList}\r\n      />\r\n    </Setting>\r\n  );\r\n};\r\n\r\nconst Tags = ({ task, tasklistId, activeTag, onToggle }) => {\r\n  const dispatch = useDispatch();\r\n  const [tag, setTag] = useState(task.tag);\r\n\r\n  const handleTag = tagNm => {\r\n    if (tag === tagNm) {\r\n      setTag('');\r\n    } else {\r\n      setTag(tagNm);\r\n    }\r\n    onToggle('tag');\r\n  };\r\n\r\n  useEffect(() => {\r\n    // If find diffrence, Change task state!\r\n    if (tag !== task.tag) {\r\n      dispatch(\r\n        changeTaskSettings({\r\n          tasklistId,\r\n          task: {\r\n            ...task,\r\n            tag,\r\n          },\r\n        }),\r\n      );\r\n    }\r\n  }, [dispatch, tag, task, tasklistId]);\r\n\r\n  return (\r\n    <Setting>\r\n      <p>태그</p>\r\n      {tag && <Tag tag={tag} />}\r\n      <TagList\r\n        onToggle={onToggle}\r\n        activeTag={activeTag}\r\n        tag={tag}\r\n        handleTag={handleTag}\r\n      />\r\n    </Setting>\r\n  );\r\n};\r\n\r\nconst Points = ({ task, tasklistId, activePoint, onToggle }) => {\r\n  const dispatch = useDispatch();\r\n  const [point, setPoint] = useState(task.point ? task.point : 0);\r\n\r\n  const handlePoint = point => {\r\n    setPoint(point);\r\n    onToggle('point');\r\n  };\r\n\r\n  useEffect(() => {\r\n    // If find diffrence, Change task state!\r\n    if (point !== task.point) {\r\n      dispatch(\r\n        changeTaskSettings({\r\n          tasklistId,\r\n          task: {\r\n            ...task,\r\n            point,\r\n          },\r\n        }),\r\n      );\r\n    }\r\n  }, [dispatch, point, task, tasklistId]);\r\n\r\n  return (\r\n    <Setting>\r\n      <p>포인트</p>\r\n      <PointList\r\n        point={point}\r\n        handlePoint={handlePoint}\r\n        activePoint={activePoint}\r\n        onToggle={onToggle}\r\n      />\r\n    </Setting>\r\n  );\r\n};\r\n\r\n// 미적용\r\nconst Checklists = ({ task, tasklistId }) => {\r\n  const dispatch = useDispatch();\r\n  const [checklist, setChecklist] = useState(task.checklist);\r\n\r\n  const handleCheckList = chk => {\r\n    const findChk = checklist.find(c => c.chkNo === chk.chkNo);\r\n    if (findChk) {\r\n      setChecklist(checklist.filter(c => c.chkNo !== chk.chkNo));\r\n    } else {\r\n      setChecklist(checklist.concat(chk));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Compare checklist with task.checklist\r\n    let diff = 0;\r\n    for (let item of checklist) {\r\n      const existing = task.checklist.find(c => c.chkNo === item.chkNo);\r\n      if (existing) diff++;\r\n    }\r\n\r\n    // If find diffrence, Change task state!\r\n    if (diff) {\r\n      dispatch(\r\n        changeTaskSettings({\r\n          tasklistId,\r\n          task: {\r\n            ...task,\r\n            checklist,\r\n          },\r\n        }),\r\n      );\r\n    }\r\n  }, [dispatch, checklist, task, tasklistId]);\r\n\r\n  return (\r\n    <Setting>\r\n      <Checklist\r\n        isSetting={true}\r\n        tasklistId={tasklistId}\r\n        task={task}\r\n        checklist={checklist}\r\n        handleCheckList={handleCheckList}\r\n      />\r\n    </Setting>\r\n  );\r\n};\r\n\r\nconst SidePopup = ({ openPopup, setOpenPopup, tasklistId }) => {\r\n  const { task } = useSelector(state => state.tasklists);\r\n  const wrapper = useRef();\r\n  console.log('Sidepopup', task);\r\n\r\n  // Set popup's position\r\n  let interval;\r\n  let left = window.innerWidth - 450;\r\n  const setPosition = () => {\r\n    left = window.innerWidth - 450;\r\n    wrapper.current.style.left = `${left}px`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    interval = setInterval(setPosition, 1000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  // Set task title's mode\r\n  const [formMode, setFormMode] = useState(false);\r\n\r\n  // States about activation\r\n  const [activeDate, setActiveDate] = useState(false);\r\n  const [activeMber, setActiveMber] = useState(false);\r\n  const [activeTag, setActiveTag] = useState(false);\r\n  const [activePoint, setaActivePoint] = useState(false);\r\n\r\n  const handleActiveStates = type => {\r\n    if (type !== 'date' && activeDate) setActiveDate(!activeDate);\r\n    else if (type !== 'mber' && activeMber) setActiveMber(!activeMber);\r\n    else if (type !== 'tag' && activeTag) setActiveTag(!activeTag);\r\n    else if (type !== 'point' && activePoint) setaActivePoint(!activePoint);\r\n  };\r\n\r\n  const onToggle = type => {\r\n    if (type === 'date') {\r\n      setActiveDate(!activeDate);\r\n      handleActiveStates(type);\r\n    } else if (type === 'mber') {\r\n      setActiveMber(!activeMber);\r\n      handleActiveStates(type);\r\n    } else if (type === 'tag') {\r\n      setActiveTag(!activeTag);\r\n      handleActiveStates(type);\r\n    } else if (type === 'point') {\r\n      setaActivePoint(!activePoint);\r\n      handleActiveStates(type);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper ref={wrapper} left={left}>\r\n      <CloseBtn onClick={() => setOpenPopup(!openPopup)}>닫기</CloseBtn>\r\n      <Title\r\n        openPopup={openPopup}\r\n        setOpenPopup={setOpenPopup}\r\n        tasklistId={tasklistId}\r\n        formMode={formMode}\r\n        setFormMode={setFormMode}\r\n      />\r\n      <Dates\r\n        task={task}\r\n        tasklistId={tasklistId}\r\n        activeDate={activeDate}\r\n        onToggle={onToggle}\r\n      />\r\n      <Mbers\r\n        task={task}\r\n        tasklistId={tasklistId}\r\n        activeMber={activeMber}\r\n        onToggle={onToggle}\r\n      />\r\n      <Tags\r\n        task={task}\r\n        tasklistId={tasklistId}\r\n        activeTag={activeTag}\r\n        onToggle={onToggle}\r\n      />\r\n      <Points\r\n        task={task}\r\n        tasklistId={tasklistId}\r\n        activePoint={activePoint}\r\n        onToggle={onToggle}\r\n      />\r\n      {/* <Checklists task={task} tasklistId={tasklistId} /> */}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SidePopup;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { setTask } from '../../../module/tasklists';\r\nimport Header from './Header';\r\nimport Bottom from './Bottom';\r\nimport Task from './Task';\r\nimport SidePopup from './SidePopup';\r\n\r\nconst Article = styled.article`\r\n  width: 300px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst TaskList = styled.div`\r\n  max-height: 600px;\r\n  overflow-y: auto;\r\n  background: #f7f7f7;\r\n  & > div:first-of-type {\r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nconst Tasklist = ({ tasklist }) => {\r\n  const { tasks } = tasklist;\r\n  const undoneList = tasks ? tasks.filter(item => !item.isDone) : []; // 진행 중인 업무\r\n  const doneList = tasks ? tasks.filter(item => item.isDone) : []; // 완료된 업무\r\n\r\n  // 완료된 업무 보기\r\n  const [openDone, setOpenDone] = useState(false);\r\n  const onToggle = () => setOpenDone(!openDone);\r\n\r\n  // 업무 선택 -> 수정팝업 오픈\r\n  const dispatch = useDispatch();\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n  const handlePopup = id => {\r\n    dispatch(\r\n      setTask({\r\n        tasklistId: tasklist.id,\r\n        taskId: id,\r\n      }),\r\n    );\r\n    setOpenPopup(!openPopup);\r\n  };\r\n\r\n  return (\r\n    <Article>\r\n      {openPopup && (\r\n        <SidePopup\r\n          openPopup={openPopup}\r\n          setOpenPopup={setOpenPopup}\r\n          tasklistId={tasklist.id}\r\n        />\r\n      )}\r\n      <Header tasklist={tasklist} />\r\n      <TaskList>\r\n        {undoneList.map(task => (\r\n          <Task\r\n            key={task.id}\r\n            tasklistId={tasklist.id}\r\n            task={task}\r\n            handlePopup={handlePopup}\r\n          />\r\n        ))}\r\n        {doneList.map(task => (\r\n          <Task\r\n            key={task.id}\r\n            tasklistId={tasklist.id}\r\n            task={task}\r\n            openDone={openDone}\r\n            handlePopup={handlePopup}\r\n          />\r\n        ))}\r\n      </TaskList>\r\n      <Bottom cnt={doneList.length} onToggle={onToggle} />\r\n    </Article>\r\n  );\r\n};\r\n\r\nexport default Tasklist;\r\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { TiPlus, TiTimes } from 'react-icons/ti';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTasklist } from '../../../module/tasklists';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 300px;\r\n  height: 44px;\r\n  padding: 10px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst ViewWrapper = styled(Wrapper)`\r\n  background: ${props => props.theme.layout.layoutBg2};\r\n  color: #454545;\r\n  &:hover {\r\n    background: ${props => props.theme.layout.mainColor};\r\n    color: #fff;\r\n  }\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  h4 {\r\n    width: 70%;\r\n    margin-left: 5px;\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nconst FormWrapper = styled(Wrapper)`\r\n  background: ${props => props.theme.layout.layoutBg1};\r\n  color: #454545;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 75%;\r\n  padding: 3px 7px;\r\n  border: 2px solid ${props => props.theme.layout.mainColor};\r\n  border-radius: 3px;\r\n  outline: 0;\r\n`;\r\n\r\nconst HeaderBtnWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  width: 25%;\r\n  font-size: 1.2rem;\r\n  svg {\r\n    margin-left: 8px;\r\n    font-size: 1.3rem;\r\n    &:last-of-type {\r\n      font-size: 1.5rem;\r\n    }\r\n    &:hover {\r\n      background: #7bb0b9;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst List = ({ isActive, setIsActive }) => {\r\n  const input = useRef();\r\n\r\n  useEffect(() => {\r\n    if (isActive) {\r\n      const title = input.current;\r\n      title.value = '';\r\n      title.focus();\r\n    }\r\n  }, [isActive]);\r\n\r\n  // 리스트 생성\r\n  const dispatch = useDispatch();\r\n  const [title, setTitle] = useState('');\r\n  const onChange = e => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const onCreate = useCallback(() => {\r\n    if (!title) {\r\n      alert('리스트 제목을 입력하세요!');\r\n      return;\r\n    }\r\n    dispatch(addTasklist(title));\r\n    setTitle('');\r\n    setIsActive(!isActive);\r\n  }, [title]);\r\n\r\n  return (\r\n    <>\r\n      {isActive ? (\r\n        <FormWrapper>\r\n          <Input\r\n            placeholder=\"리스트 제목\"\r\n            value={title}\r\n            onChange={onChange}\r\n            ref={input}\r\n          />\r\n          <HeaderBtnWrapper>\r\n            <TiPlus role=\"button\" onClick={onCreate} />\r\n            <TiTimes role=\"button\" onClick={() => setIsActive(!isActive)} />\r\n          </HeaderBtnWrapper>\r\n        </FormWrapper>\r\n      ) : (\r\n        <ViewWrapper role=\"button\" onClick={() => setIsActive(!isActive)}>\r\n          <TiPlus />\r\n          <h4>업무리스트 추가</h4>\r\n        </ViewWrapper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst AddTaskList = () => {\r\n  const [isActive, setIsActive] = useState(false);\r\n\r\n  return <List isActive={isActive} setIsActive={setIsActive} />;\r\n};\r\n\r\nexport default AddTaskList;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Post from '../../components/Layout/Post';\r\nimport Tasklist from './Tasklist/index';\r\nimport AddTaskList from './Tasklist/AddTaskList';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  width: fit-content;\r\n  height: 100%;\r\n  border: 1px solid;\r\n`;\r\n\r\nconst TasklistWrapper = () => {\r\n  const { tasklists } = useSelector(state => state.tasklists);\r\n\r\n  return (\r\n    <Post fixed={true}>\r\n      <h3>업무리스트</h3>\r\n      <Wrapper>\r\n        {tasklists.map(tasklist => (\r\n          <Tasklist key={tasklist.id} tasklist={tasklist} />\r\n        ))}\r\n        <AddTaskList />\r\n      </Wrapper>\r\n    </Post>\r\n  );\r\n};\r\n\r\nexport default TasklistWrapper;\r\n","import React from 'react';\r\nimport { useRouteMatch, Switch, Route } from 'react-router-dom';\r\nimport Content from '../../components/Layout/Content';\r\nimport Layout from '../../components/Layout/Layout';\r\nimport Sidebar from '../../components/Layout/Sidebar';\r\nimport Card from '../../components/Layout/Card';\r\nimport MainMenu from '../../components/Menu/MainMenu';\r\nimport SubMenu from '../../components/Menu/SubMenu';\r\nimport ChangeTheme from './ChangeTheme';\r\nimport TasklistWrapper from './Tasklist';\r\n\r\nconst Workbox = () => {\r\n  const match = useRouteMatch();\r\n  const list = [\r\n    { id: 1, title: '🎨테마 변경하기', url: '/changeTheme' },\r\n    { id: 2, title: '✅업무리스트', url: '/tasklist' },\r\n  ];\r\n\r\n  return (\r\n    <Layout>\r\n      <Sidebar>\r\n        <Card>\r\n          <SubMenu title=\"워크박스\" list={list} />\r\n        </Card>\r\n      </Sidebar>\r\n      <Content>\r\n        <Card>\r\n          <Switch>\r\n            <Route exact path={match.path}>\r\n              <Index />\r\n            </Route>\r\n            <Route path={`${match.path}/changeTheme`}>\r\n              <ChangeTheme />\r\n            </Route>\r\n            <Route path={`${match.path}/tasklist`}>\r\n              <TasklistWrapper />\r\n            </Route>\r\n          </Switch>\r\n        </Card>\r\n      </Content>\r\n      <MainMenu />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst Index = () => {\r\n  return <div>워크박스 인덱스</div>;\r\n};\r\n\r\nexport default Workbox;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Menu from './components/Menu/MainMenu';\r\nimport Home from './pages/Home';\r\nimport Diary from './pages/Diary';\r\nimport Workbox from './pages/Workbox';\r\n\r\nconst App = () => {\r\n  const { layout, component } = useSelector(state => state.palette);\r\n\r\n  return (\r\n    <ThemeProvider\r\n      theme={{\r\n        layout,\r\n        component,\r\n      }}\r\n    >\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/diary\">\r\n          <Diary />\r\n        </Route>\r\n        <Route path=\"/workbox\">\r\n          <Workbox />\r\n        </Route>\r\n        <Route path=\"/photo\">\r\n          <Photo />\r\n        </Route>\r\n        <Route path=\"/gbook\">\r\n          <Gbook />\r\n        </Route>\r\n      </Switch>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nfunction Photo() {\r\n  return (\r\n    <div>\r\n      Photo\r\n      <Menu />\r\n    </div>\r\n  );\r\n}\r\nfunction Gbook() {\r\n  return (\r\n    <div>\r\n      Gbook\r\n      <Menu />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from 'redux';\r\nimport palette from './palette';\r\nimport formMode from './formMode';\r\nimport boards from './boards';\r\nimport tasklists from './tasklists';\r\nimport layout from './layout';\r\n\r\nconst rootReducer = combineReducers({\r\n  palette,\r\n  layout,\r\n  formMode,\r\n  boards,\r\n  tasklists,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './module';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}